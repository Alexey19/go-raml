// Code generated by go-bindata.
// sources:
// ../templates/client_helper_resource.tmpl
// ../templates/client_resource.tmpl
// ../templates/generic_main.tmpl
// ../templates/oauth2_middleware.tmpl
// ../templates/oauth2_middleware_python.tmpl
// ../templates/python_client.tmpl
// ../templates/python_client_utils.tmpl
// ../templates/python_server_resource.tmpl
// ../templates/server_main.tmpl
// ../templates/server_python_main.tmpl
// ../templates/server_resources_api.tmpl
// ../templates/server_resources_interface.tmpl
// ../templates/struct.tmpl
// ../templates/struct_input_validator.tmpl
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _TemplatesClient_helper_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\xd1\x6f\xda\x3e\x10\x7e\xc6\x7f\xc5\xfd\x22\xfd\x26\x1b\xd2\xb0\xa9\x4f\xad\x84\x26\xad\x55\x35\x4d\x5a\xb7\x41\xa7\x3d\x54\x55\x6b\xc8\x51\xb2\x12\x3b\x38\x17\x36\x84\xf8\xdf\xe7\x73\x42\x0a\xac\xab\xfa\x32\x69\x2f\x21\x3e\xdf\xe7\xfb\xbe\xcf\x77\x64\xbd\x3e\x82\x14\xa7\x99\x41\x88\x26\xf3\x0c\x0d\xdd\xce\x70\x5e\xa0\xbb\x75\x58\xda\xca\x4d\xb0\x8c\xe0\x68\xb3\x11\x85\x9e\x3c\xe8\x7b\x84\x3a\x49\x88\x2c\x2f\xac\x23\x90\xa2\x13\x8d\x57\xe4\xb3\xfc\x0b\x9a\x89\x4d\x33\x73\xdf\xff\x5e\x5a\xc3\x81\xcc\xf2\xd3\x20\xf5\x67\x44\x05\xbf\x4f\x73\xe2\x1f\xca\x72\x8c\x84\x12\x62\x5a\x99\x09\x04\x1c\xbe\xb3\xe9\x4a\xa6\x9a\x34\x64\x86\xd0\x4d\xf5\x04\xd7\x1b\x05\x32\xb3\xc9\x10\x75\x8a\x2e\x06\x74\xce\x3a\x05\x6b\xd1\x19\x87\x05\x9c\x0e\x80\x6b\x25\x1f\xb5\x2b\x67\x7a\x1e\xe0\x4a\x74\xb2\x69\xd8\xfd\x6f\x00\x26\x9b\x73\x7a\xc7\x21\x55\xce\xf0\x32\x00\x45\x67\x23\xb6\xb1\x40\x3f\xb9\xc4\x1f\x75\x15\x39\x56\x31\xe7\x89\x4d\xc3\x2e\xb5\x43\x5c\x7c\xcb\x68\x16\x08\xe6\x48\x33\x9b\xc6\x50\xb9\xf9\x88\x1c\x94\xe4\xbc\xe0\x18\x0e\x79\xc7\x8d\x51\xc0\xc2\x93\xb3\xf0\x1e\xc3\x2c\x54\x28\x21\xd7\xc5\x75\x8d\xbc\xd9\xc3\x2c\xca\xcf\xda\xe9\xbc\x39\xd5\x6b\xef\x06\xf8\x10\xcb\xc2\x9a\x12\xf7\x0c\xf0\x64\x5a\x0f\x0e\x0c\x7c\xa9\x03\xa2\xd3\xef\xc3\xc4\xa1\x26\x04\x9a\x21\x38\x5c\x54\x58\x12\x3b\xb3\x68\xcf\x0e\x0c\x82\x3b\x61\xf3\xd0\x80\xde\x96\x74\x0c\x4c\xe9\xe5\xa5\xa7\xd6\xc1\x43\x0c\x4b\xae\xe1\xb4\xf1\xad\xb5\x75\x87\x21\x1d\x26\x93\xbc\x0f\x91\x64\x84\x24\x7d\xaa\xef\x9d\x64\x54\x78\x67\x68\x2a\xa3\xff\x97\x51\xbc\x54\xaa\x3e\xab\x29\x50\x5b\x9e\x9c\x5b\xe9\xc1\xaa\xbd\xc0\x71\x95\xcd\xd3\x2f\x15\xba\xd5\x28\xf8\x5a\x37\xd9\xd3\x77\xa0\x1a\xef\xd7\x41\xc7\x1c\x4d\x6d\x28\x0c\x06\xf0\x7a\x57\x4b\x14\xd5\x95\xc7\xba\xc4\x70\x34\xcb\x88\xde\x46\x4f\xe9\x0a\xe5\x18\xfb\x98\xdc\x1b\xc0\x83\xb7\x2e\x1a\x44\xfe\xf9\xa8\x4b\x2e\x15\x47\x5f\x45\x7b\xb2\x5a\xd8\xf5\x29\x13\x6a\x97\xea\xe8\xcd\x0d\x8b\xec\xf7\xcf\xf9\x06\x1d\x16\x7e\x66\xb9\xe7\x86\x17\x67\xc7\xc7\x27\x27\x5c\x18\x05\xad\x0a\x84\x90\xc0\x43\x97\x5c\xf9\x07\x43\x9a\x89\xf9\x30\xfa\x74\x09\x76\xe9\x6f\x25\x4b\xd1\x7b\xd2\x06\x6b\xeb\x24\x41\x97\xb1\x0a\x76\xf2\xa5\x6f\xcc\xeb\x1b\x1e\x9b\xdd\x86\x6c\xc8\xd6\x1b\xb2\xad\x25\xbb\xa4\x92\x0b\xeb\x72\x4d\xf2\x2e\xba\xf3\xf2\xc2\x56\xa0\x78\x7c\xe2\x97\x3e\xa8\x1e\x27\xae\x25\x76\x85\x3f\xe9\x37\x62\x1c\xfc\x03\x31\xde\xfa\xbb\xc4\xbe\x9a\xfc\x29\xcf\x2a\xf3\x8c\x6b\x7b\x18\x39\x6e\x48\xa8\x9a\x1d\x93\xa3\xb2\x1d\xb4\x50\xde\x8f\x52\x89\xcc\xa7\xb7\xcb\xa6\xe7\x03\x71\xd3\x99\xfe\xff\xe9\xb9\x21\x6b\xe7\xab\x4b\x30\x08\xf7\x2e\xa9\x54\x62\x67\x06\x0f\xd4\xec\x1b\x5d\x99\x67\xac\xde\xc3\xfc\x43\x6a\x0e\x68\x36\x53\xbe\x1d\xe5\x9d\x1e\xd8\xbf\xfc\x6d\x1e\x1f\xc1\xdf\x41\x34\x69\xf8\xd4\xfd\x0a\x00\x00\xff\xff\xf3\x16\xb8\x6d\x14\x07\x00\x00")

func TemplatesClient_helper_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesClient_helper_resourceTmpl,
		"../templates/client_helper_resource.tmpl",
	)
}

func TemplatesClient_helper_resourceTmpl() (*asset, error) {
	bytes, err := TemplatesClient_helper_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/client_helper_resource.tmpl", size: 1812, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesClient_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\x4d\x4f\xdb\x40\x10\x3d\x7b\x7f\xc5\xd4\x4a\x91\x4d\x8d\x73\xaf\x94\x0b\x90\x7e\x48\x14\xd1\x00\xed\xb1\x32\xf6\x98\x18\x12\xaf\xb3\xbb\x0e\x42\xae\xff\x7b\x67\x76\x6d\x27\x21\x2d\x52\x91\xda\x5e\x9a\x53\x76\x3e\xdf\xbc\x79\xbb\x6e\x9a\x23\xc8\x30\x2f\x4a\x04\x3f\x5d\x14\x58\x9a\x6f\x0a\xb5\xac\x55\x8a\x3e\x1c\xb5\xad\xa8\x92\xf4\x3e\xb9\x45\x70\x4e\x21\x8a\x65\x25\x95\x81\x40\x78\x7e\x89\x66\x3c\x37\xa6\xf2\x85\xe7\xf9\x58\xa6\x32\x2b\xca\xdb\xf1\x9d\x96\xa5\xb5\xe4\x4b\xe3\x8b\x50\x88\x54\x96\xda\x26\x28\x29\xcd\xf5\xec\x0c\x26\xe0\x37\x4d\x7c\x9c\x68\xbc\x9e\x7d\x6c\x5b\x1b\xd4\x34\xa3\xa4\x2a\xce\x93\x25\xc2\xdb\x09\xc4\xfc\x87\x9a\x9b\xc7\x0a\x81\x62\xdd\x11\xb4\x51\x75\x6a\xa0\x11\x9e\x43\x03\xdc\x3d\x3e\x71\xc8\x5a\x21\xf2\xba\x4c\xe1\x1c\x1f\x86\x8c\x20\x84\xc3\x4d\x3a\xe7\x71\xf5\x12\x1f\x82\xc1\x1a\x92\x31\xee\xca\x4d\xb6\x0b\x36\x2d\x21\x46\x53\xab\x12\x52\x2e\xde\x34\xa0\x92\x92\x98\x18\xdd\x47\x30\x5a\x5b\x98\x9f\xd0\xcc\x65\xa6\x81\xa0\x6e\xb9\x73\xf6\xe7\x1c\x30\x5a\xc7\xef\x08\xd3\x89\x5c\x2e\xa9\xa2\x8d\x1b\x8f\x69\x20\x72\x33\x9e\x06\xcb\x8c\x4c\x0c\x3b\x48\x19\x69\xcf\x01\xc1\xb2\x51\x5d\x83\x6e\x18\x6b\xb9\x48\x54\xb2\xd4\x14\xe0\x8e\x33\xd4\xd5\xb1\xcc\x1e\x6d\xb9\x22\xa7\xd9\x60\xcb\x0a\xbe\x4f\x3d\xa3\xbe\xd3\xa1\x1d\x8f\x9d\xb4\x12\x8c\x50\x29\xa9\x42\xa6\x65\xa5\x6d\x59\x86\x7c\x53\x17\x8b\xec\x73\x8d\xea\xf1\xd2\x28\xda\x67\xb0\xe2\xff\xae\x2b\x71\xc5\x7a\xa1\x36\xb8\xe2\x36\x5f\x50\xdd\x80\xff\x7e\x7a\xc5\x5d\x68\xe5\xbf\x44\x00\xeb\x44\x41\x0d\xfb\x88\x1d\x01\x94\x4a\xb4\xa4\x0a\x13\x83\xa0\x90\x3a\x92\x60\xe4\xcd\x1d\xa6\x86\x5c\x64\x88\x80\xb0\x32\x3a\x3b\x00\x6d\x78\xe6\x82\x02\xdb\x3c\x82\x5e\x59\xbb\x00\xac\x8a\x2f\x12\x33\xef\x40\xbc\xe9\x1b\x0e\x40\x86\x08\xeb\xed\x58\x88\xa0\x2c\x16\x34\xaa\xc7\x73\x52\xdb\x57\x13\x36\x30\x4d\xcf\x4d\xd8\x49\xa5\xb6\xd9\x16\xaf\x8b\xc7\x85\xc6\x8d\x7b\xd7\x77\x04\x04\xc7\xde\x32\xcf\xb3\x2c\xe4\x52\x01\xa9\xcb\x8a\xcb\xa9\x69\x8e\x49\x86\x4a\x53\x77\xe8\x7f\xc4\x47\xfc\xc1\x9a\xe3\x4b\x34\x01\xc5\xd3\x4d\x8b\x2f\x2b\xda\x96\xc9\x03\xff\xf5\x9a\x08\x59\x87\xa1\x4d\xe8\xb8\xcd\x24\x98\xf9\x40\xad\xe5\x54\x57\x03\xa9\xbd\xfe\xe3\x53\x19\x50\xc8\x3f\x18\xdd\xf3\xe8\x0d\x42\x05\x0c\x2b\xe6\xca\x74\x07\xa5\xc6\x20\x14\xcf\xa9\x8a\x2b\x6d\x7a\xbb\x91\xf8\xf5\x61\x81\x9c\x22\x3d\x47\xa8\x82\xa1\x62\x18\x3b\x53\x70\x50\x87\x62\x83\x6e\xab\x86\x2b\x40\x30\xc5\x13\x80\x2e\xf6\xa9\xec\x4f\xa7\x67\xd3\xab\xa9\x6f\x4b\xbc\x54\xbd\x5d\x8d\x41\xc0\x7f\x5c\xbf\xfb\xbb\xf8\xdb\xba\x73\x0f\xea\x9e\xe2\xb6\xf6\xf1\xf2\x57\xc4\xa1\xdc\x52\x76\x26\x89\xea\xaf\x85\x99\x73\x68\xe0\xdb\x4c\xde\x1e\x7d\x74\x7e\x97\xf3\x9f\x50\x1e\xed\xbe\x37\xab\x0e\x69\xdb\x1e\xec\xe6\x38\xc7\x77\xb8\x92\x67\xf2\x01\x15\x27\xf6\x04\x44\x3d\xd1\x51\xbf\xbd\xff\xb7\x6f\xef\xf6\x6d\x0e\xfc\x99\xdd\x9c\x76\x0e\x3f\x02\x00\x00\xff\xff\xec\xe0\x3a\x34\xc9\x08\x00\x00")

func TemplatesClient_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesClient_resourceTmpl,
		"../templates/client_resource.tmpl",
	)
}

func TemplatesClient_resourceTmpl() (*asset, error) {
	bytes, err := TemplatesClient_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/client_resource.tmpl", size: 2249, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesGeneric_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4f\xcd\x4b\x2d\xca\x4c\x8e\xcf\x4d\xcc\xcc\x8b\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x00\x49\x70\x71\xa5\x95\xe6\x25\x83\x99\x1a\x9a\xd5\x5c\x5c\xb5\x5c\xd5\xd5\xa9\x79\x29\x40\x55\x80\x00\x00\x00\xff\xff\xdc\x57\x73\x81\x49\x00\x00\x00")

func TemplatesGeneric_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesGeneric_mainTmpl,
		"../templates/generic_main.tmpl",
	)
}

func TemplatesGeneric_mainTmpl() (*asset, error) {
	bytes, err := TemplatesGeneric_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/generic_main.tmpl", size: 73, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesOauth2_middlewareTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\x4b\x4f\xdb\x40\x10\x3e\x67\x7f\xc5\xd4\x87\xd6\x46\x60\xe8\xe3\x84\x94\x4b\xab\xb6\x54\xea\x83\x42\x2a\x0e\x55\x85\x16\x7b\x8c\x2d\x9c\x5d\x77\x77\x83\x8b\x2c\xff\xf7\xce\xbe\x42\x20\x31\x6d\x94\x44\xf6\x3c\xbe\x6f\xf6\x9b\x19\x7b\x18\x0e\xa0\xc4\xaa\x11\x08\x89\xe4\x2b\x53\xbf\xba\x5c\x36\x65\xd9\x62\xcf\x15\x26\x70\x30\x8e\xac\xe3\xc5\x0d\xbf\x46\x18\x86\xfc\xd4\x5f\x7e\xe5\x4b\x24\x07\x6b\x96\x9d\x54\x06\x52\x36\x4b\x04\x9a\xc3\xda\x98\x2e\x61\x19\x63\x87\x87\xf0\xcd\x61\x51\x8a\x8f\xfd\xb2\xc6\x84\x46\x83\x27\x82\x7b\x22\xa8\xa4\x82\x75\x30\x33\x77\x1d\x3e\x81\xa0\x8d\x5a\x15\x06\x06\x36\x2b\x51\x17\xaa\xb9\xc2\xf2\xed\x9d\xb5\x36\xe2\x9a\xcd\xaa\x06\xdb\x12\xfc\x27\xda\x74\x21\x3b\xd4\xde\xf6\xf3\x57\xb0\x8e\xae\x50\x81\xfd\x24\x53\xa1\x90\x1b\xb4\x21\xff\xac\x86\x55\x2b\x51\x3c\x09\x96\x86\x22\x22\x7f\x06\x7b\xd3\xa0\x03\xb3\xa5\xca\x25\x1c\xcf\xa7\xa9\x49\x80\x70\xb2\xe3\x70\x5c\x77\xb3\xcf\x66\xa3\x4b\x1f\x06\x68\x2a\xc8\x4f\x90\x97\xa8\xc6\x31\x40\xe6\x9b\xa2\xcd\x21\xa9\x9d\x5b\x27\xd1\xed\xf5\x23\x07\x31\xfa\xd4\x40\x9c\x44\x50\x6c\x35\x3a\xe4\xef\x2b\x54\x77\xa7\x5c\xf1\xa5\x86\x49\xfc\xdf\xeb\x20\x34\x53\x3c\x1b\x40\x5b\x64\xa2\x8c\xd8\x0a\xcd\x4a\x09\x78\x2e\x97\xa1\x77\xef\x6a\x2c\x6e\xce\xbd\xac\x85\xbd\xd6\xd0\xd7\x68\x6a\x54\xb0\xd2\xf4\x57\x73\x4d\x2d\xc1\x12\xcb\x20\x8d\xef\x52\x4a\xba\x4e\x6b\x9f\x6d\xc2\x6e\x37\xed\x4a\xca\xd6\x8e\x1e\x9d\xbf\x45\x41\x50\xb9\x0f\xc9\x60\x3e\x87\x23\xeb\x99\x85\x3a\x69\x2e\xd0\xb6\x82\x46\x92\xa6\xfb\x72\x1f\x78\xdb\xca\x9e\x6a\xa1\x9e\x2a\x2e\x68\xa3\xd6\xc9\x2e\x2d\x44\x39\xcb\x7d\xcc\x46\x80\xe5\xf4\x5e\xa2\x8a\x60\xce\xf1\x90\x72\x46\xa4\xee\x47\xdf\xe0\xa8\x38\xf5\x2c\xa8\x76\xc2\x05\x1d\x55\x45\x39\x4f\x16\x8b\x53\x52\x2a\xda\x3a\x85\x1a\x85\xe1\xa6\x91\x02\x64\x05\xa6\xa6\x85\xbd\xdf\xd4\xff\x53\x30\x50\xa4\x02\xff\x18\xb0\x8f\x85\x3c\x58\xb2\x07\x77\xb6\xf8\x50\xc5\xa6\xf9\x03\x51\xa4\x96\x27\xed\xbd\xfd\x0c\x75\x27\x85\xc6\x0b\xd5\xd0\x08\xed\x83\x82\xbd\x60\xa7\xe1\xd2\x26\x73\x22\xdc\x72\x05\xbc\x28\x50\xeb\x85\xbc\x41\x11\x77\x9f\x3c\x74\x66\xef\x00\xe3\x3c\x6e\x54\xdc\x73\xc1\x2a\xfa\x78\x62\x77\x8c\xac\x17\x79\x13\x9c\xba\x93\xff\x38\xfb\xec\x07\x37\xcd\xf2\x8f\x68\xd2\x38\xd3\x99\x15\x7f\xbd\x24\x3b\xe0\xe3\xc6\xed\x86\x0d\x3b\xb7\x85\xe8\xab\x7d\x10\x4d\x58\x01\xa4\xcf\x9d\x36\x3e\x37\x7d\x73\xf4\xd2\xa6\x04\x6d\x5d\xb2\x97\xe1\xe2\xec\xd3\xe2\x3d\x14\x92\x2a\x22\x2d\xbc\x10\x6e\x55\x5e\xe8\xb8\x21\x5e\xc8\x47\x63\x1f\xd2\x7d\xfc\x3a\x90\xca\x79\x46\x25\x6e\xaf\x4b\xb6\xbb\xa8\xd7\x3b\x8a\xb2\x13\x92\x9f\xa3\xba\x45\x3b\x87\x69\x4f\xcd\xa5\xa8\x31\xa3\x59\xb5\xaf\x26\xbb\xfd\xf6\x1d\xf4\x37\x00\x00\xff\xff\xca\x86\xcc\xcc\xa7\x06\x00\x00")

func TemplatesOauth2_middlewareTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesOauth2_middlewareTmpl,
		"../templates/oauth2_middleware.tmpl",
	)
}

func TemplatesOauth2_middlewareTmpl() (*asset, error) {
	bytes, err := TemplatesOauth2_middlewareTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/oauth2_middleware.tmpl", size: 1703, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesOauth2_middleware_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\xee\xc5\x09\x5e\xb3\xfd\x38\x2d\x2c\xf4\x54\x7a\x5a\x5a\xe8\xad\x14\xa3\x95\x46\x89\x1a\x45\xca\x4a\x72\x43\x30\xf9\xef\x95\x64\x39\x91\x63\x2f\x2c\xac\x0f\x89\x91\xde\xbc\xf7\xe6\x69\xac\xbe\xbf\x03\x86\x5c\x28\x84\x52\x93\xce\x6d\x3f\xb5\x7b\xc1\x98\xc4\x23\x31\xd8\x1e\x4e\x6e\xab\x55\x09\x77\xe7\x73\xc1\x8d\xde\x03\xef\x14\x75\x5a\x4b\x0b\x62\x7f\xd0\xc6\xc1\xd1\x90\x83\x4d\x7b\x92\xd8\xdd\xb8\xbe\xa9\xc1\xe0\x4b\x87\xd6\xd5\xf0\xd7\x6a\x25\xf8\xa9\x28\xa8\x47\x58\x48\x32\x7d\xdf\x3c\x91\x3d\x9e\xcf\x0f\x05\xf8\xc7\x9b\x80\xb6\x15\x4a\xb8\xb6\xad\x2c\x4a\x5e\x83\xa5\xfa\x80\xf6\xf1\x49\x2b\x5c\x0d\xa0\xf0\xf4\xbd\xe0\xd0\x7c\x47\xc2\xd0\x78\x5b\xe3\x72\x28\x69\x18\x5a\x6a\xc4\x33\xb2\xf6\xf9\x04\x8f\x50\x6e\x23\xca\x96\x53\x14\x17\x28\x59\xd8\xf6\x16\x06\x9e\xe4\xa4\xcc\x44\x50\x5a\x84\xa0\xf4\xb3\x43\x73\xfa\x41\x0c\xd9\xdb\xf7\xcb\x65\x64\x0b\x9a\x80\x8a\xc1\xad\x08\x91\x52\x1f\xbd\xc4\x90\x86\xe7\x19\x5e\x8a\x2c\x35\xea\x31\x97\xd4\x78\x96\xd5\xd7\x78\x3c\x15\x5f\x5d\x56\x42\x01\x43\xaa\x0d\x71\x9e\x33\x1e\xa7\xd0\xaa\x5a\x13\xb3\xb1\x35\xac\xd7\xbb\x63\x78\xcb\x28\xc2\xe3\xf4\x0e\x55\xe8\xa0\x9c\x2c\xfb\x74\x16\x62\xc8\x72\x98\xb2\xe4\x4c\x69\x36\x9a\x84\x6c\x36\xe8\xaa\x6b\x58\xb5\x57\x5a\x4d\x6a\x51\xbe\x2a\xf6\x72\x89\x14\xdd\xdb\x44\x43\x87\x51\xb1\x24\x94\xa2\xb5\x6d\x04\x94\x83\xea\x6d\x87\xa9\x38\x34\x3f\x67\x36\xe8\x3a\xa3\xc6\x01\xaf\x56\x35\x7c\xb9\xff\x38\xa5\xd8\x34\xb9\x88\x77\x11\xff\xa7\x98\x0f\x70\x30\xfa\x9f\x60\x08\x54\xfb\x1f\xa7\x81\x6e\x91\xee\xd2\x49\x83\xf6\x2e\xb6\x08\x39\xcf\xa4\xfc\x32\x19\xbf\xff\xcc\xec\xc7\xcc\x22\x5b\x1a\xa0\x6a\xf8\x5b\x85\x96\xbe\x11\x3f\xe4\x6f\xeb\xea\x73\xb1\x80\xe0\xb3\xb9\x29\x6e\x10\xf3\x51\xbb\xce\xed\xd4\x55\xf6\xc5\x67\xd3\x37\x76\x70\xf3\x11\x08\x0b\xe1\x56\x00\x6d\x40\xa2\xaa\x16\x20\xb1\xbf\xfb\x87\x25\xd7\xbf\x4c\x87\xd7\x9c\xb8\xe7\x48\xa5\x20\xd4\x92\xda\x94\x24\xe0\x6d\x44\x2e\x6c\x8e\x96\x83\x78\x22\x99\x03\x5e\xb5\x92\x16\xe3\xa9\x14\xe1\x62\x0e\xd7\x41\xb8\x7a\xff\x07\x00\x00\xff\xff\xfb\x91\x93\x2b\xa5\x05\x00\x00")

func TemplatesOauth2_middleware_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesOauth2_middleware_pythonTmpl,
		"../templates/oauth2_middleware_python.tmpl",
	)
}

func TemplatesOauth2_middleware_pythonTmpl() (*asset, error) {
	bytes, err := TemplatesOauth2_middleware_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/oauth2_middleware_python.tmpl", size: 1445, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesPython_clientTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\xcd\xee\xda\x30\x0c\xc0\xef\x79\x0a\xab\xe2\x00\xfa\x43\x1f\x00\x89\x03\x20\x26\x21\x6d\x13\x62\x1f\xd7\x28\xb4\x2e\x44\x6b\x92\xce\x49\x98\x50\x96\x77\x5f\xd2\x96\xaa\x87\xf9\xd0\xda\x96\xfd\xf3\x57\x42\xd8\x40\x8d\x8d\xd4\x08\x45\xf7\x72\x0f\xa3\x79\xd5\x4a\xd4\x8e\x3b\x54\x5d\x2b\x1c\x16\xb0\x89\x91\x49\xd5\x19\x72\x40\xf8\xdb\xa3\x75\x96\x35\x64\x14\x8c\x91\xde\xc9\xd6\xc2\x18\x71\xf3\xb2\xad\x79\x8a\xa2\x17\xb7\x8e\xa4\xbe\x33\x76\xd8\x7f\x3b\xf1\x1f\xd7\x33\xec\xa0\x08\xa1\x3c\x08\x8b\xc9\x8a\xb1\x60\x8c\x55\xad\xb0\x16\x8e\x3d\x69\xcb\x20\x49\x6a\x07\x38\x97\x5a\x3a\xce\x97\x16\xdb\x66\x35\xf8\xb3\x64\xb3\xf4\xd4\x26\xd2\x1b\xca\x42\x00\x12\xfa\x8e\xb0\xf8\xb5\x86\xc5\x13\xb6\x3b\x28\xbf\x60\x1a\xa5\xb6\x90\x3a\x7f\x23\x43\x58\x3c\x47\xff\x57\xa1\x30\xc6\x65\xef\xb9\x08\x12\xca\xc6\x38\x2b\x52\x14\xc5\x8c\xd9\x64\x68\x93\xa9\x29\xfa\x93\xd7\xd5\xd1\x28\x95\x9a\x9d\xe0\x59\x32\xaa\x89\x31\x04\xd4\xf5\xcc\x7d\x76\x20\x2d\xa8\xbe\x28\x34\x86\x86\x26\x7e\x22\xdd\x62\x1c\xf4\x93\xae\x3b\x23\xb5\x9b\x25\xa5\xf2\x93\xee\x49\xa6\x51\xa7\xa9\x3f\x86\xa4\x2b\x5a\xe3\xa9\xc2\x8b\x70\x8f\x59\xe2\x10\x9c\xbf\x1f\xff\x39\xc3\x72\x30\xba\x7e\xde\xd5\x94\x44\xe8\x3c\xe9\xe9\xb0\xe5\xd4\x21\xfc\x85\xef\xe6\xb3\xf9\x83\x94\x56\x95\xa0\xc3\xb6\xae\x7b\xba\xa7\x6d\xad\xe1\x81\xa2\x46\xb2\xbb\xf1\xbf\xca\x67\x48\xc3\xe7\xa5\xe4\x37\x95\xd5\xfc\x6e\xfe\x05\x00\x00\xff\xff\x10\xb7\xfd\xe9\x60\x02\x00\x00")

func TemplatesPython_clientTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesPython_clientTmpl,
		"../templates/python_client.tmpl",
	)
}

func TemplatesPython_clientTmpl() (*asset, error) {
	bytes, err := TemplatesPython_clientTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/python_client.tmpl", size: 608, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesPython_client_utilsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xcd\x6e\xdb\x46\x10\xbe\xeb\x29\x06\x0c\x14\x93\xb5\xa8\xd0\x52\x90\x1f\x21\x6a\x0e\x45\x51\xf4\x92\x93\x73\x0a\x02\x79\x45\x0e\x2d\xd6\xe4\x2e\xbd\xbb\xb4\xc3\x04\x79\xf7\xce\xec\x92\x14\x29\x2b\x69\x0e\x35\x0c\x6a\xb5\xf3\xff\xcd\x7c\x43\x7d\xfb\x16\x43\x86\x79\x21\x11\x82\xba\xb5\x07\x25\x77\x69\x59\xa0\xb4\xbb\xc6\x16\xa5\x09\x20\xfe\xfe\x7d\x56\x54\xb5\xd2\x16\x32\x61\xd1\x16\x15\xf6\xdf\xdd\x79\x36\x23\x73\xd8\x37\x45\x99\xed\xee\x1b\xd4\xed\xce\x58\x5d\xc8\xdb\xd0\x7f\xa9\x85\x16\x95\xd9\x7e\x50\x12\xa3\xcd\x0c\xe8\x2f\x08\x02\xf7\xe9\x4c\xc0\x69\x81\xd3\x42\x8b\xda\x49\x0a\x59\x37\x16\xe0\x66\xec\xe1\x06\x36\x90\x15\xa9\x2d\x94\x14\xba\x75\x6a\xaa\xb1\xac\xe7\xc3\xc1\x63\x61\x0f\x90\x2b\x5d\x09\x0b\x37\xef\xef\xb0\xdd\x3e\x88\xf2\x39\x7d\xae\xf8\xb0\xba\x99\xc4\x2e\x72\x18\x3b\x87\xc2\x00\x67\xe8\x13\xe4\x3f\x8d\xb6\xd1\x92\xf4\x67\xee\xea\xde\xc0\x16\x82\xf7\xde\x98\x82\x00\xf9\x5d\x00\x96\x58\x51\xb2\x13\x57\x47\x17\x64\x73\xb9\x65\x45\xb8\x84\x60\x1b\xd0\x93\x32\x0d\xd9\x26\xe2\x9b\xe7\x9d\xeb\x2e\xd2\xbd\xf9\xb4\x89\xaf\x3e\x77\x70\xde\xa2\x44\x4d\x68\xef\x74\x9e\xae\xd7\xeb\xb7\x61\xb6\x80\x52\xa5\xa2\xdc\xd9\xaf\xdb\x6b\xdd\x9c\x62\xd9\xeb\x43\xa7\xef\x5a\xd3\xa1\x31\x82\xd4\x1b\x65\x54\x0b\xb7\x12\x6c\x5b\xa3\xbb\xe9\x5d\x93\xa0\x31\xe8\xbf\x7a\x17\x5f\x09\x15\x46\xcb\x52\xcc\x85\x47\xdd\x1e\x50\x3f\x16\xa4\x56\x09\x7d\x07\xc2\x40\x63\xd3\xd9\xb8\x21\x3e\x4a\x9f\x49\xd7\x1e\x17\xd0\x27\xb4\x04\xfc\x42\xdd\xbc\x59\x25\xc9\x9b\x38\x79\x19\x27\xab\xeb\x55\xb2\x49\xf8\xff\x32\x79\x4d\xcf\x69\xaf\xac\x6e\x8f\xa0\x52\x2a\x7d\xb2\xc7\xcb\x71\x51\x9c\xf5\x72\x38\xe4\x5a\x55\x7c\x30\x56\x54\x75\x98\x45\x83\x09\x96\x06\x7f\xc5\x01\xd5\x76\xd6\x07\x7e\x49\xb1\xb6\x70\x4d\x08\xfe\xa9\xb5\xd2\x47\x5f\xb5\x30\x66\xd6\x0f\x99\x54\x96\x66\xab\x90\x64\x2b\x53\xe4\x2e\x4e\x42\x44\xa3\x81\x13\x0c\xe9\xe0\x2f\xbc\xf8\xa0\x3c\xc1\x5c\x58\xa0\x91\x73\x08\xaa\xfd\x3f\x98\x12\x82\x7f\x91\x74\xae\x97\x17\x30\x77\x5d\xa4\xb4\xa2\x5f\x0d\xca\x87\x51\xe0\xb3\x75\x87\xbf\x65\x4b\xfe\xb4\x4d\x5d\x62\x18\x7d\xda\xac\x3f\x47\x93\x71\x0d\x2f\xe6\xc9\xcb\x2c\x9e\x27\x2b\xff\xb8\xe6\xc7\x66\x78\xcc\x0d\x65\x36\x81\x37\xcc\x96\x2d\x0a\x4d\xb9\x2c\x2b\x25\xed\x81\x0f\x99\x68\xf9\xe3\xa0\x1a\x7f\x5f\xc8\xc6\x22\x9f\x0c\xa6\x4a\x66\x8b\x89\x03\xd8\x0d\xa4\xe0\xcc\x78\x30\xc7\xac\x88\x18\x00\xc7\x9d\x1d\x5d\xa4\x4d\xc9\x8a\x2a\xcf\x0d\xda\x90\xab\x1a\x69\x4e\xa9\x33\x61\x06\x43\xbc\xf9\x11\x39\x36\x03\x11\x1c\x4b\x4c\x6b\x2c\xf1\xbf\x4f\x66\x31\x62\x46\x07\x52\x32\x81\x8c\xa4\x5d\x0f\x73\xf8\x78\xfd\x07\xf8\xe4\x96\x4e\xe5\xef\xdc\x8b\x32\x85\xc6\xf5\xef\x20\x1e\x10\x84\x6c\x07\xf7\x94\x67\xae\x16\xf0\x88\x27\x0c\x75\xa1\x4f\x88\x39\x84\x9f\xd4\x79\x8e\x39\xcf\x0e\x42\x66\x25\x02\xb7\x06\xf6\x48\xfc\x44\xb8\x7a\xfb\x3a\x81\x4a\x19\xda\xac\xad\x2b\x90\xdc\x22\x6f\x48\xa9\xa6\xd9\x30\x97\x69\x1d\x8f\xed\x96\x63\xa2\x72\x45\xae\xe9\xf0\xce\x09\xa7\x7c\x7b\x06\x1f\x8d\x33\x5a\x91\x83\x54\x34\xa6\x8b\xcc\x10\xc8\x8b\x1e\x01\x28\x51\xd4\xe4\xa9\x9d\xd8\x5a\x9a\x59\x37\xaf\xd5\x9d\x9b\x56\x17\x49\x63\x5d\x0a\x9a\x77\x8e\xb8\x65\xbf\xd1\x71\x84\x7f\x46\xfc\xb3\xce\x46\xc3\xdf\x0d\xbe\xcf\xb9\xc3\x8b\x12\x2a\x8b\xdb\x83\x35\xe2\x81\x96\xdb\xc2\x57\x3b\xbe\x72\x5d\x12\xa5\x3d\x9d\x0c\xbe\xee\x41\x1c\x63\xe5\x12\x70\xfd\x71\x39\x58\xca\xbd\xda\x15\x26\x33\x76\x9a\x6c\xd7\xda\xd8\xe9\x77\xfe\x7f\x52\xdb\x44\x7d\x12\x77\xaa\x7b\x1c\x58\x4f\xa1\x33\x54\xfb\xbf\x38\xb4\x57\xaa\xec\x5e\x17\x8e\x00\xc3\xbb\x2b\x03\xde\xb4\x4f\xe9\x3b\xd6\xa5\x97\xad\xdf\x0d\x66\x7c\xbb\x85\x04\xe2\xdf\xe1\xd2\xbd\x42\xa6\x82\xab\x37\xc9\x20\x5b\x9f\xc8\xe2\xf5\x2b\x2f\x8c\x93\xab\xde\xb0\xaf\x68\x50\xfa\xcf\x6d\xe2\x6b\xe1\x1d\x46\xda\x62\x6f\x42\xaf\x16\xc1\x8b\x17\xc0\x01\x9c\xd8\xaf\xb6\x13\x85\xb9\x93\xb3\xde\xab\x64\x58\xde\x5d\xe0\x77\x90\x3c\xe9\xce\xc5\x3c\x1d\x16\x2c\x2f\xfe\x30\x88\x83\x05\xf8\xed\xe9\x03\x44\x3f\x6e\xed\x53\xe3\xcb\x27\xc6\xfc\x5b\x10\x65\xe6\x7e\xf2\xfd\x1b\x00\x00\xff\xff\x4b\x7e\x1f\x35\x18\x0a\x00\x00")

func TemplatesPython_client_utilsTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesPython_client_utilsTmpl,
		"../templates/python_client_utils.tmpl",
	)
}

func TemplatesPython_client_utilsTmpl() (*asset, error) {
	bytes, err := TemplatesPython_client_utilsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/python_client_utils.tmpl", size: 2584, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesPython_server_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\x51\x6b\xfa\x30\x14\xc5\xdf\xfd\x14\x17\x29\x54\xff\x54\x3f\x80\x20\xfc\xdd\xd8\x60\xb0\x8d\x3d\x8c\xbd\xc8\x28\x99\xbd\xd5\xce\x26\xe9\x6e\x52\x45\xba\x7c\xf7\xdd\x24\x76\x6e\x4e\x5f\xbc\x49\x0e\xe7\xfc\x72\xd2\xae\x9b\x40\x81\x65\xa5\x10\x86\x84\x46\xb7\xb4\xc2\xbc\x39\xd8\x8d\x56\xb9\x45\xd9\xd4\xc2\xe2\x10\x26\xce\x0d\xbc\x32\x11\x4d\xf5\x28\x24\xc2\x6c\x0e\xd3\x30\xf8\x93\x92\xb4\x84\xb2\x16\x66\x0b\x95\x6c\x34\x59\xb8\xaa\x5b\x6c\xa8\x52\x36\x83\x77\xa3\x55\x55\x1e\x32\x20\xfc\x68\xd1\x58\xf6\x01\x12\x6a\x8d\x90\x6c\x33\x48\x76\xc1\xea\xa1\x2a\x8a\x1a\xf7\x82\x09\x16\x44\x27\xd3\xae\x4b\x76\x21\xc7\xb9\xde\xfa\x9f\x37\x40\x55\x00\x6b\x78\x8c\x14\x9f\xf0\xac\xef\xf5\x1e\x89\x77\x73\x66\x84\xf9\x09\x61\x94\xfe\x51\x45\x51\x9a\x41\x9e\x2b\x3e\xc8\xf3\xf1\x65\x2a\xe4\x1a\x0a\x13\x92\xfe\x33\x4a\x7f\xf9\x33\x9f\x29\xe9\xd6\xa2\x8f\x61\xd8\x1b\x55\x34\x9a\x53\x9d\x63\x7b\x19\x0d\xe6\xcb\x78\xf6\x82\xf4\xc6\xfb\xaf\x3e\xad\x0f\x93\x3e\x4d\xfa\x38\x16\x5c\xa8\xc1\xe7\xee\xe4\xb1\x83\xd1\x32\xae\x16\xb4\x36\xce\x05\x1f\xdf\x84\xd7\xf1\x1b\xc6\xb6\x22\xf4\x51\x1f\x76\x9e\x04\x09\xc9\xfa\xf1\x6c\x00\xfc\x4b\xd3\x34\xfc\x9f\x18\x4a\xcf\x50\x1e\x19\x6e\x5b\xb5\xba\xd6\x52\xa2\xb2\x26\x38\x47\x2d\x0b\xbe\xe7\x3e\xd3\xaf\xee\x2c\x54\x06\x36\x42\x31\x38\x41\xa9\x09\x7e\x5c\x15\xce\x2a\xf9\x95\x4f\x68\x5b\x52\xfd\xf7\x31\x1a\xf7\xef\x3a\x89\x0f\xdb\x8f\x5f\x01\x00\x00\xff\xff\x48\x23\xb7\xcf\xa1\x02\x00\x00")

func TemplatesPython_server_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesPython_server_resourceTmpl,
		"../templates/python_server_resource.tmpl",
	)
}

func TemplatesPython_server_resourceTmpl() (*asset, error) {
	bytes, err := TemplatesPython_server_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/python_server_resource.tmpl", size: 673, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x94\x4d\x4f\xdc\x3c\x10\xc7\xcf\xf1\xa7\x98\xc7\xe2\x60\xc3\x92\xa0\x87\x0b\x20\x71\x40\x45\x48\x54\x2d\xac\x58\xda\x4b\x55\x81\x77\x77\x12\x2c\x12\x3b\x72\x26\x5b\x50\xb4\xdf\xbd\xe3\x04\xf6\xa5\xb4\xdc\x2a\x75\x0f\x1b\x7b\x3c\xff\xf1\x6f\x26\x99\xe9\xba\x7d\x98\x63\x6e\x1d\x82\x6c\x30\x2c\x30\xdc\x55\xc6\xba\x3b\xc2\xaa\x2e\x0d\xa1\x84\xfd\xe5\x52\xd4\x66\xf6\x68\x0a\x84\xae\x4b\xc7\xc3\xf2\xca\x54\xc8\x07\xc2\x56\xb5\x0f\x04\x4a\x24\xb2\xf4\x85\xe4\x87\x43\xca\x1e\x88\xea\xb8\x26\x5b\xa1\x14\xbc\x28\x2c\x3d\xb4\xd3\x74\xe6\xab\xac\xf0\xc1\x96\xa5\xc9\xaa\xf6\x49\x0a\xe0\x9f\x2c\x7c\xfd\x58\xa4\xd6\x65\x0b\x53\xda\xb9\x21\x1f\xd2\xc5\xff\x52\x68\x21\xb2\xec\x9c\x19\x20\x60\x1d\xb0\x41\x47\x70\x73\xf1\xe1\xf0\xf0\xf8\x18\xd8\x0b\x05\x3d\xd7\x08\xbd\x43\xbc\x27\xbd\xe5\xbf\x28\xf9\x6c\x42\xf3\x60\xca\x8f\x93\xeb\x2b\xf0\x9c\x50\xb0\x73\x84\x6a\x6d\x14\x79\xeb\x66\xa0\x08\x76\xa3\x56\xc3\x86\xbf\xd2\xa0\xbe\x7d\x9f\x3e\x13\x8e\x80\x85\x3e\x68\xe8\x44\x12\x90\xda\xe0\x60\x38\x50\xab\xbb\xd4\x2e\xe9\xf4\xc2\x87\xca\x90\xba\x97\xf7\xb0\x37\x60\xf4\x88\x87\xc7\xbc\x65\xa3\xd6\x23\x70\xb6\x14\xcb\x0d\xb0\x5b\x7c\xa2\x37\x60\xd1\xf8\x07\xb0\x78\xf4\x77\xc1\xbe\xb8\xea\x77\x35\x6b\xdd\x3b\x55\xdb\xd2\xa8\xe9\x0b\x84\x1e\xe8\x22\x1c\x35\x3d\x2a\x9c\x9c\x0e\xd7\x8f\xd9\x1d\x23\xcf\xde\x26\xcd\x1e\x1b\x46\xd0\x50\xb0\xae\x50\x53\xad\x45\x62\xf3\x5e\xf6\xdf\x69\xe4\x8b\x81\x5e\xd3\x64\xab\x48\x98\x37\xd9\x25\x38\xed\xdf\xbb\xa2\x46\xaf\xaa\xf0\x36\x9b\xed\x42\xb7\xee\x9d\x52\x6f\x69\xfe\xa1\x6c\x7e\xc1\x9c\x0c\x91\xf5\xcb\x15\x1b\xdf\xc0\xf6\xcb\x7f\xf5\x5b\x85\x88\x3d\xad\xe2\x37\x13\x1b\x2e\xcb\xc0\xba\xba\x25\x58\xf5\x5b\x6f\x5e\x77\xdf\x04\xe9\xeb\xb0\xb1\xde\x5d\xb0\x5e\xc9\xaa\x2d\xc9\xd6\x25\x5e\xe7\x72\x04\xeb\x0d\xf7\x68\xd2\x17\x85\xbb\x39\xbd\xc2\x1f\x37\xbe\x25\x0c\x2a\x9a\xbb\x0e\x82\x71\x3c\x34\x76\x1e\x47\xb0\xb3\x88\x4e\xe9\x0d\x36\xbe\x0d\x33\x6c\xce\x31\x07\x1e\x1f\xec\x94\x0e\x93\xe4\xd2\xb1\x2e\x37\x33\xec\x23\x34\x2a\x8c\x60\x75\x76\x36\xbe\xec\x96\xba\x8f\x88\x6e\x1e\x75\x22\xe1\x61\x93\x8e\x39\x49\x2a\x9d\x92\x0d\x99\x40\xb1\x1e\xc3\x04\x93\xec\x1b\x27\x50\xfa\xc9\x36\x84\xee\xcc\xcd\x27\xd1\xae\xe4\xc9\xd1\xc1\xd1\x01\xf3\x87\xbe\x30\x71\xf4\xc5\x78\x71\xc0\xfd\x0c\x00\x00\xff\xff\xa7\xd9\x6c\x56\x07\x05\x00\x00")

func TemplatesServer_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_mainTmpl,
		"../templates/server_main.tmpl",
	)
}

func TemplatesServer_mainTmpl() (*asset, error) {
	bytes, err := TemplatesServer_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_main.tmpl", size: 1287, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_python_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd0\xcd\x6a\xeb\x30\x10\x05\xe0\xbd\x9f\xe2\x60\xb2\x70\xe0\xc6\x0f\x10\xf0\xee\xd2\x55\xe9\xa2\x64\x3f\x28\xf5\xc8\x15\xb1\x7e\x18\x49\x29\x45\xf5\xbb\x57\x8e\x1b\xba\x68\xa1\xda\x09\xe9\x9c\x8f\x99\x52\x0e\x18\x59\x1b\xc7\x68\x23\xcb\x95\x85\xc2\x7b\x7a\xf5\x8e\xac\x32\x8e\x12\xdb\x30\xab\xc4\x2d\x0e\xcb\xd2\x68\xf1\x16\x7a\x56\xf1\x02\x63\x83\x97\x84\x87\xf5\xd2\x34\xa5\x40\x94\x9b\x18\xbb\xcb\x3f\xec\xae\x38\x0e\xe8\x9f\x39\xfa\x2c\x2f\x1c\xff\xb3\xfe\x4e\x97\xd2\x3f\x29\xcb\xf8\xc0\xc9\x3f\xfa\x37\x96\x65\xb9\x77\xfd\xf2\x44\x2a\x98\x5a\xce\x6e\x44\x2d\x68\x54\x08\x18\x36\xb3\x23\x72\xf5\x33\xd1\x7e\xd5\xff\xc6\x6b\xb4\x17\x9e\x4c\x4c\x75\xc2\xf3\x9c\x39\x88\x71\xa9\xfb\x61\x62\x43\xf7\x9b\xba\xa2\x46\xe3\x6e\x61\x18\xd0\xd2\xb6\x19\x6a\x8f\x0d\xea\xb9\x15\x67\xd7\x8d\x7c\xce\xd3\x70\x92\xcc\x5f\xd9\x1b\xfb\x19\x00\x00\xff\xff\xba\x73\xf0\x48\x5f\x01\x00\x00")

func TemplatesServer_python_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_python_mainTmpl,
		"../templates/server_python_main.tmpl",
	)
}

func TemplatesServer_python_mainTmpl() (*asset, error) {
	bytes, err := TemplatesServer_python_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_python_main.tmpl", size: 351, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_resources_apiTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xdb\x30\x0c\x3d\xdb\xbf\x82\x13\x82\xc1\x5e\x5b\xa7\x87\x9d\x5a\xf4\xb0\x8f\x16\xdb\x80\x75\xdd\x0a\x74\x87\x61\x68\x94\x98\x6e\xbc\x38\x92\x23\xcb\x09\x02\xc1\xff\x7d\xa4\xa4\xcc\x4b\xb7\x5c\x4c\x51\xe4\x7b\x8f\x4f\x6c\x9d\x3b\x83\x12\xab\x5a\x21\x08\x83\x9d\xee\xcd\x02\x1f\x65\x5b\x3f\x5a\x5c\xb7\x8d\xb4\x28\xe0\x6c\x18\xd2\x56\x2e\x56\xf2\x09\xc1\xb9\xe2\x2e\x84\xb7\x72\x8d\x74\x91\xd6\xeb\x56\x1b\x0b\x59\x9a\x38\x07\x75\x05\xc5\x2d\x62\xf9\xe9\xfe\xcb\x2d\x0c\x83\x40\xb5\xd0\x65\xad\x9e\xa6\xbf\x3a\xad\x04\x15\xa0\x2a\x29\x9f\x26\x42\xa1\x9d\x2e\xad\x6d\x45\x9a\xa7\xce\x4d\x88\x91\x01\xe1\xe2\x8a\x00\x02\xf2\x74\xca\x6c\xe1\xf0\xe6\xee\x23\xd4\x1d\xf8\x0f\xc9\xc2\x35\x2a\x2b\x6d\xad\x15\xe8\x8a\xab\xae\x55\xd9\xea\x5a\xd9\x61\x00\xa3\xb5\x65\x1a\x7f\x4e\xed\xbe\xc5\x63\x98\xce\x9a\x7e\x61\xc1\xa5\xa4\x9d\x98\xc1\x48\x45\x73\x4d\x56\xa7\x30\xd9\x7a\xfa\xcf\x68\x97\xba\xec\xe0\x20\x61\xb2\x8d\xa9\x80\xc1\x3a\xec\x12\x61\x29\x55\xd9\xa0\x81\x4a\x9b\x50\xf4\x80\x66\x4e\xd7\x3e\x1e\xf5\xa4\x6c\xf0\x81\xa3\x62\x92\x8a\x59\xa8\xe6\xa6\x57\x8b\x77\x7a\xcd\xa3\x74\x23\x57\x35\x0c\xce\x91\x7c\xca\x54\x54\x90\x91\x31\x30\xfa\xe3\x47\xc8\xff\x15\x95\xed\x80\xcd\x2c\xbe\x61\xd7\x6a\xd5\xe1\x77\x53\x5b\x34\xa7\x60\xe0\x55\xcc\x6f\x7a\xec\x2c\x75\xf2\x33\x8d\x82\x36\x2c\x68\x13\x05\x7d\xed\xd1\xec\xef\xa4\x21\x44\x6a\xee\xfc\xbb\x03\xfd\x82\xb2\xd5\x86\x86\xa3\x42\x83\x9b\xe2\x46\x9b\xf5\x83\x6c\x7a\xcc\x44\xbc\x11\x79\x00\x3e\xbc\x2f\xc7\xbc\x0c\x44\xfc\x56\x97\x7b\x8f\x95\x6c\xa5\xe1\x76\x9f\xa0\x37\x89\x77\xbc\x44\x91\xa6\x44\x5a\x17\xe4\x1a\x56\x9b\x26\x84\x80\xc6\x30\x2b\xef\x0f\x6d\xd6\xee\xbd\xaf\x30\x99\x29\xb8\x35\x2f\xc2\x39\x7b\x19\x61\xf3\x4b\xdf\xf0\xe2\x0a\x54\xdd\xf0\xb0\xc9\xae\xf0\x5e\x7c\x40\xc9\x6d\xaf\xcf\xcf\x49\x68\x62\xd0\xf6\x46\xa5\xc9\xc8\xbc\x95\x4d\x5d\xd2\xb6\xff\xe1\xe6\xfc\x48\x1f\xe1\x8b\x87\x58\x96\x3d\x27\x82\xf8\xfb\x0f\xdd\xb3\xab\xec\xc7\xcf\xf9\x9e\x3e\x33\x27\x08\x41\x1b\x71\x21\x66\x27\x14\x15\xd7\x7c\xca\xf2\x93\x99\x18\x66\xf9\xd8\x16\xb5\x72\x38\x1c\x79\xfc\xb7\xc9\x5d\xeb\x4d\x1d\x4d\x8e\x09\xef\x72\x88\xf9\xee\xe0\xe2\xb5\x0a\x2e\xee\xf2\x22\x84\x6c\x60\x28\xcb\x2f\x8f\x1f\x92\xbc\xa1\x35\x0c\x6b\x0a\x73\x6c\xf4\x0e\x1a\xfe\x67\x61\x35\xc8\xb2\x84\xa5\x1f\xd4\x97\xed\x8a\x38\x75\x5e\xdc\xa3\xcd\xc4\x0a\xf7\xe2\x54\x6c\x79\x4d\x68\x3b\xc2\x1f\x02\xa3\xf2\x2a\x1c\x1d\x7e\x07\x00\x00\xff\xff\x1b\x02\x50\xb2\x83\x04\x00\x00")

func TemplatesServer_resources_apiTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_resources_apiTmpl,
		"../templates/server_resources_api.tmpl",
	)
}

func TemplatesServer_resources_apiTmpl() (*asset, error) {
	bytes, err := TemplatesServer_resources_apiTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_resources_api.tmpl", size: 1155, mode: os.FileMode(420), modTime: time.Unix(1459332341, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_resources_interfaceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x6f\x9c\x30\x10\x3d\xe3\x5f\x31\x42\x39\x40\xb4\x0b\xf7\x4a\x3d\xf5\x43\xed\x21\x51\x15\x45\xcd\x31\xf2\xc2\x00\x6e\xc0\xa6\xf6\x90\x4d\x84\xf8\xef\x1d\xdb\xec\x66\xd3\x6e\xda\xee\x65\xc7\xf8\xf9\xcd\x9b\xf7\x66\x9e\xb7\x50\x63\xa3\x34\x42\x6a\xd1\x99\xc9\x56\x78\xaf\x9a\x7b\xc2\x61\xec\x25\x61\x0a\xdb\x65\x11\xa3\xac\x1e\x64\x8b\x30\xcf\xc5\xb7\x58\x5e\xcb\x01\xf9\x42\x94\xe5\x6d\xa7\x1c\x34\xaa\x47\xe0\x7f\x39\x91\xd9\xb6\xa8\xd1\xf2\xdb\x1a\x76\xcf\xd0\x9a\xad\x95\x43\xcf\xc0\x8f\x06\xb4\x21\xc0\x5a\x11\xd0\xf1\x11\x43\x3a\xa9\x6b\x70\x4a\x57\x4c\x41\xb0\x57\x7d\x0f\x3b\x04\xf3\x88\x76\x6f\x15\x11\x6a\xa8\x27\xab\x74\xcb\xaf\x10\x34\x3e\x11\xac\x1d\x94\xd1\x42\xa8\x61\x34\x96\x20\x13\x49\xda\x2a\xea\xa6\x5d\x51\x99\xa1\x6c\x8d\x65\x1e\x59\x0e\xd3\x53\xca\x37\x1a\xa9\xec\x88\xc6\x54\x00\xff\xe6\x19\x54\x03\xc5\x1d\xc3\xaf\x54\x5d\xf7\xb8\x97\x16\x61\x59\xe0\x94\xe1\xc7\xe4\x48\x69\xe9\x4a\xd9\xab\x8a\x7d\xe0\x47\xa8\x6b\x9e\x39\xf7\x53\x7b\x2b\xa2\x07\x5f\x35\xa1\x6d\x64\x15\xe6\x57\xc7\x43\x63\xac\xc7\x7c\xd2\xf5\x68\xf8\x2b\x93\x5b\xe3\xa7\x5f\xcf\x82\x9e\x47\x3c\x4b\x72\xa8\xe6\x20\x35\xca\xdd\x82\x95\x9a\xfd\xbf\x78\xd8\xc0\xc5\x23\xbc\x7b\x0f\xc5\x15\x52\x67\x6a\x17\xe2\x39\x00\x83\x2c\x06\xac\x97\x91\xda\xcb\xf2\xc6\x79\x97\x7b\xb4\xab\x30\x06\x7d\x47\xbb\xe3\xeb\x50\xbf\xc8\x14\x09\x40\x72\xda\xb1\xf1\x2d\x1b\xdf\x93\x71\x9f\x27\x5d\x7d\x30\xc3\x80\x9a\xdc\x8a\x0d\x4d\x19\xb1\x2c\xf3\x1c\x0d\x4a\x92\xc0\x79\x2a\x22\xf3\xe6\x17\x37\xe8\x46\xa3\x1d\xde\x71\xac\x68\x37\x70\xb9\x7e\xfd\x39\xa1\xa3\x5c\x24\xd1\x62\x0e\x42\x2c\x6f\x78\x7c\x63\x26\x42\xe7\x47\xb2\x5c\xf9\x9d\xf8\x97\xcf\x0d\x2b\x7e\x93\x28\xb3\x70\xc9\x1b\x52\x84\x13\x0b\x52\x67\x90\x39\x07\x20\x92\xbf\x66\x70\x12\x81\xc7\xf1\x6e\xf9\xf1\x8f\x9b\xf5\x0a\x60\x8b\x2f\x21\x88\x2c\xfd\xcd\xf8\x74\x03\x61\xd3\x8a\x6b\xdc\x67\xd1\xc0\x17\x86\x65\xc9\x8b\xdb\x0e\x75\xf4\x31\x32\x58\x1f\x46\xa6\x8a\x3f\xcc\xce\xf3\xfc\x20\x6d\xed\x12\xa3\x4e\xf3\x57\x32\xb1\x77\x7e\xe9\x39\xae\x83\xa6\x40\x78\x46\xd7\xb9\x1e\xff\xd5\x21\x86\x99\x9c\xd4\x8b\x38\x1c\xfc\xe2\xfe\x0a\x00\x00\xff\xff\x90\xf7\xfa\xf7\x7e\x04\x00\x00")

func TemplatesServer_resources_interfaceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_resources_interfaceTmpl,
		"../templates/server_resources_interface.tmpl",
	)
}

func TemplatesServer_resources_interfaceTmpl() (*asset, error) {
	bytes, err := TemplatesServer_resources_interfaceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_resources_interface.tmpl", size: 1150, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesStructTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x3d\x6f\xdb\x30\x10\xdd\xf5\x2b\x0e\x44\x06\x09\x48\x68\xa0\x63\x10\x67\x68\xd3\x00\x06\x5a\xa7\x43\xd0\xb5\x61\xa5\x93\xcb\x5a\x22\x55\x92\x32\x6a\x10\xfa\xef\x3d\x7e\x48\x4e\x9c\x66\x88\x26\x91\x77\xef\xdd\x7b\x8f\xa4\xf7\x0d\xb6\x52\x21\x30\xeb\xcc\x58\xbb\x1f\x0e\xfb\xa1\x13\x0e\xd9\x34\x15\x83\xa8\xf7\x62\x87\xe0\x3d\xff\x96\x7e\xb7\xa2\x47\x2a\x14\xb2\x1f\xb4\x71\x50\x16\x40\x9f\xf7\xb2\x05\xbe\x45\x6c\xee\x7b\x37\x4d\xac\xed\x1d\xf3\x1e\x55\x13\x3a\x4f\x0d\x0f\x0a\xbf\xd0\xa4\x3b\x6c\xa7\x89\xb6\xb0\xb3\x44\xc5\x76\x7a\xd8\xef\xb8\x54\xab\x83\xe8\x64\x23\x9c\x36\xfc\xf0\x81\xc1\x8c\xaf\x8a\xc2\x7b\x30\x42\x91\x8c\x8b\x03\x5c\xaf\x81\xdf\xa1\xad\x8d\x1c\x9c\xd4\x0a\xa8\x63\xb5\xa2\xe6\x8b\x43\xe2\x8c\x18\x02\xbc\x9c\x07\x57\x69\xf7\xf9\x56\xdc\xb9\x82\xa0\x22\x96\xdd\x71\x08\x46\xc9\x07\x59\xa4\x2a\xa4\x3c\xc0\x67\x07\xb3\x86\x3d\x1e\x2f\x49\x89\xe8\x46\x8c\x6a\xee\x25\x76\x8d\x0d\x74\x90\xbf\xa0\x26\x94\x79\x0a\x2b\xdb\xc7\x3f\x19\xc5\x37\xf6\x93\xa6\xf8\xac\x8c\x0e\x5a\x11\x73\x38\xa1\x1e\x49\x08\xad\x9f\x7e\x5b\xad\xae\x29\xc7\x30\x71\x9a\x5e\x71\x3c\xf4\xd2\x39\x6c\x80\x54\x52\xfb\xa5\xa6\x25\x9d\x9c\x3b\xe6\x10\x58\x04\xe4\xee\xef\x73\xb4\x96\x88\x73\xce\x18\xb9\x5f\xd7\xe7\x93\x7b\x5a\xe2\x4c\x9e\x28\xaa\xb8\xca\xb1\xa5\xc3\xcd\x49\x6f\xb5\xfb\x28\x0c\x6e\x94\x43\xd3\x8a\x3a\xdc\x90\x76\x54\x35\x94\x36\x5c\x9d\x14\x43\x05\x79\x0a\x96\x15\xa0\x31\xda\x2c\xd1\x06\x8a\x47\xfe\x55\xaa\x0d\x59\xb0\xf1\x34\x42\x81\xb6\x3b\x54\xa5\xad\xe0\x26\xd0\x9c\x3a\x42\x5a\x4b\xda\x06\xdd\x68\x28\xc6\xde\xf1\xcf\x81\xb5\x2d\x19\xa1\xc0\xfe\xd2\x63\xd7\xc0\x4f\x84\xdb\x35\x9c\xc3\x59\x15\xe1\xe7\xd6\x5e\xa8\x11\x7f\xdf\x52\x73\x9b\xe9\x72\xc7\xfb\xd4\xdc\xac\xcf\xd1\x6f\x88\xf9\xef\xc3\x59\xd4\xe4\x39\x4a\x76\xf3\xf5\x5c\x2e\xf2\xb3\xf2\xe9\x49\x2d\xd9\xdb\x6a\x01\xa8\x26\xf6\xc7\x97\x11\x16\xf1\x45\xa4\xe1\xff\x02\x00\x00\xff\xff\x0d\xf3\xdb\xbe\x16\x04\x00\x00")

func TemplatesStructTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesStructTmpl,
		"../templates/struct.tmpl",
	)
}

func TemplatesStructTmpl() (*asset, error) {
	bytes, err := TemplatesStructTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/struct.tmpl", size: 1046, mode: os.FileMode(420), modTime: time.Unix(1459334009, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesStruct_input_validatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xc1\x6a\xe3\x30\x10\x86\xcf\xd6\x53\xcc\x1a\xc2\x5a\x10\x9c\x5d\x08\x39\x04\x72\xdc\x3d\xb6\x7d\x83\xa0\xca\xa3\x44\xd4\x96\x8d\x3c\x52\x29\xc2\xef\xde\x91\xed\xa4\x21\x97\xc4\xcc\xcc\xff\xcf\xff\x8d\x52\x6a\xd0\x58\x87\x50\x8e\xe4\x83\xa6\xb3\x75\x43\xa0\x73\x54\xad\x6d\x14\xf5\xfe\x4c\xd8\x0d\xad\x22\x2c\xa7\x49\x0c\x4a\x7f\xa8\x0b\x42\x4a\xf5\xdb\xf2\xf9\xa2\x3a\xe4\x86\xb0\xdd\xd0\x7b\x82\x4a\x14\xa5\xe9\xa8\xe4\x3f\xb6\xd3\xbd\x8b\xa5\x90\x42\x98\xe0\x34\x74\xa1\x25\x3b\xb4\xf8\x6a\x2a\x17\x3a\xb0\x8e\xd0\x1b\xa5\x31\x4d\x5b\xe0\x75\x01\x81\x25\xd6\x5d\x24\xa0\xf7\xbd\x87\x24\x8a\xa8\x3c\xf0\xec\xff\xb6\x57\x04\x26\xff\x1e\xf6\x42\x14\xe3\xa7\x25\x7d\x85\x08\xc7\x53\x6e\xd7\x15\x7d\x0d\x28\xb3\x40\xab\x11\xb3\xf3\x51\x14\xc5\x5d\x78\xba\x49\xab\x28\xd7\x91\xb5\xf0\x34\x16\x45\xc1\xc7\x50\x9c\x33\x37\x3c\x52\xf0\x0e\x18\xa7\xfe\x97\x03\x99\xaa\xdc\x44\xd0\xca\xfd\x26\x78\x47\x08\x23\x36\xc0\x41\xae\x0f\x60\x25\x93\xf0\x0a\xbe\x47\x31\x13\xcd\xc6\xdb\xcc\x93\xa3\xae\x17\xe1\xd3\xf9\x71\x69\x55\xf3\xd4\x16\x0e\x7b\x56\x59\x33\x0f\xfe\x62\x26\xdb\x66\x98\x5b\x02\xae\x2e\x9e\x1e\xc7\x15\x79\x49\xbc\x83\x9f\x2d\xb3\xbe\xca\x13\xbb\x3b\x2e\x1f\x22\x57\xa4\x94\xd9\xf5\x6f\xfd\xe7\xd1\xf5\x89\xcb\x8e\xe0\x7a\x7a\x60\x81\x4d\x64\x1c\xde\xb5\xbe\x8e\xbc\x65\x98\xd5\x1c\x51\x4c\x22\x25\x74\x0d\x3f\xff\x77\x00\x00\x00\xff\xff\xfe\x10\x5b\xba\x45\x02\x00\x00")

func TemplatesStruct_input_validatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesStruct_input_validatorTmpl,
		"../templates/struct_input_validator.tmpl",
	)
}

func TemplatesStruct_input_validatorTmpl() (*asset, error) {
	bytes, err := TemplatesStruct_input_validatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/struct_input_validator.tmpl", size: 581, mode: os.FileMode(420), modTime: time.Unix(1459229660, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../templates/client_helper_resource.tmpl": TemplatesClient_helper_resourceTmpl,
	"../templates/client_resource.tmpl": TemplatesClient_resourceTmpl,
	"../templates/generic_main.tmpl": TemplatesGeneric_mainTmpl,
	"../templates/oauth2_middleware.tmpl": TemplatesOauth2_middlewareTmpl,
	"../templates/oauth2_middleware_python.tmpl": TemplatesOauth2_middleware_pythonTmpl,
	"../templates/python_client.tmpl": TemplatesPython_clientTmpl,
	"../templates/python_client_utils.tmpl": TemplatesPython_client_utilsTmpl,
	"../templates/python_server_resource.tmpl": TemplatesPython_server_resourceTmpl,
	"../templates/server_main.tmpl": TemplatesServer_mainTmpl,
	"../templates/server_python_main.tmpl": TemplatesServer_python_mainTmpl,
	"../templates/server_resources_api.tmpl": TemplatesServer_resources_apiTmpl,
	"../templates/server_resources_interface.tmpl": TemplatesServer_resources_interfaceTmpl,
	"../templates/struct.tmpl": TemplatesStructTmpl,
	"../templates/struct_input_validator.tmpl": TemplatesStruct_input_validatorTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"client_helper_resource.tmpl": &bintree{TemplatesClient_helper_resourceTmpl, map[string]*bintree{}},
			"client_resource.tmpl": &bintree{TemplatesClient_resourceTmpl, map[string]*bintree{}},
			"generic_main.tmpl": &bintree{TemplatesGeneric_mainTmpl, map[string]*bintree{}},
			"oauth2_middleware.tmpl": &bintree{TemplatesOauth2_middlewareTmpl, map[string]*bintree{}},
			"oauth2_middleware_python.tmpl": &bintree{TemplatesOauth2_middleware_pythonTmpl, map[string]*bintree{}},
			"python_client.tmpl": &bintree{TemplatesPython_clientTmpl, map[string]*bintree{}},
			"python_client_utils.tmpl": &bintree{TemplatesPython_client_utilsTmpl, map[string]*bintree{}},
			"python_server_resource.tmpl": &bintree{TemplatesPython_server_resourceTmpl, map[string]*bintree{}},
			"server_main.tmpl": &bintree{TemplatesServer_mainTmpl, map[string]*bintree{}},
			"server_python_main.tmpl": &bintree{TemplatesServer_python_mainTmpl, map[string]*bintree{}},
			"server_resources_api.tmpl": &bintree{TemplatesServer_resources_apiTmpl, map[string]*bintree{}},
			"server_resources_interface.tmpl": &bintree{TemplatesServer_resources_interfaceTmpl, map[string]*bintree{}},
			"struct.tmpl": &bintree{TemplatesStructTmpl, map[string]*bintree{}},
			"struct_input_validator.tmpl": &bintree{TemplatesStruct_input_validatorTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

