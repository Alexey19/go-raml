// Code generated by go-bindata.
// sources:
// ../templates/class_python.tmpl
// ../templates/client_helper_resource.tmpl
// ../templates/client_resource.tmpl
// ../templates/date.tmpl
// ../templates/generic_main.tmpl
// ../templates/input_validators_python.tmpl
// ../templates/oauth2_middleware.tmpl
// ../templates/oauth2_middleware_python.tmpl
// ../templates/python_client.tmpl
// ../templates/python_client_utils.tmpl
// ../templates/python_server_resource.tmpl
// ../templates/server_main.tmpl
// ../templates/server_python_main.tmpl
// ../templates/server_resources_api.tmpl
// ../templates/server_resources_interface.tmpl
// ../templates/struct.tmpl
// ../templates/struct_input_validator.tmpl
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _TemplatesClass_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7e\x8a\x25\xe4\xd0\x82\x93\x07\x08\xe4\x52\x8a\x21\x10\x72\x30\x86\x1e\x8d\x5a\xaf\x1d\x11\xfd\x55\x92\xdd\x18\xe1\x77\xef\x4a\xfe\x81\x52\x5f\x34\x5a\x7d\x9a\x19\x2b\x84\x06\x5b\xae\x10\x76\x5f\x82\x39\x57\x9b\xd1\xdf\xb5\xda\x4d\x53\xd6\x5a\x2d\xa1\xa5\xe1\xa3\xfe\xf1\x2d\x70\x69\xb4\xf5\x50\x68\x2b\xe7\x23\x1a\x92\x76\xc7\x81\x09\xde\x30\xaf\xad\x5b\x99\x77\xe6\x59\x89\xdf\x3d\xb7\xd8\xe4\x70\x45\xd5\xf9\x7b\x0e\x25\x76\xf8\x34\x39\xdc\x7a\xf9\x89\xb6\x64\xaa\xc3\x1c\xec\x82\xfd\xb1\x5c\x7d\x2a\x7c\xfa\x82\xa3\x20\x93\x18\xbb\xc8\x8b\xf2\xe4\x64\xd7\x03\xa1\xd9\x06\x71\x81\x8b\x7c\xd3\x5a\x20\x53\xcb\x8e\x0a\xe1\xc6\xd0\x72\xe5\xce\xcf\x89\x5c\x99\xde\xd7\xff\x7f\x41\xf6\xc2\x73\x23\xb0\xd6\x6d\x16\x82\x8d\x65\x61\xff\xc8\x61\x3f\xc0\xe9\x0c\xc7\x4b\xa2\x1c\x1c\xe8\x9d\x42\xd8\x0f\x69\x01\x54\x0d\x89\x2c\x3d\x24\x84\x70\xbc\x31\x89\xd3\xf4\x12\xbb\xbf\x9e\x32\xa0\x8f\xa0\xd5\x0b\xc7\xe8\xc6\x44\xf2\x4b\xad\x1c\x5d\x9e\xa1\x38\x5f\x6e\xc3\x79\xdd\x7f\x54\x45\x35\x1a\xdc\xa0\x43\xcc\x83\x94\x3c\x07\xff\x06\x00\x00\xff\xff\x79\xa1\x5f\xc1\xcb\x01\x00\x00")

func TemplatesClass_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesClass_pythonTmpl,
		"../templates/class_python.tmpl",
	)
}

func TemplatesClass_pythonTmpl() (*asset, error) {
	bytes, err := TemplatesClass_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/class_python.tmpl", size: 459, mode: os.FileMode(420), modTime: time.Unix(1463990386, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesClient_helper_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\xd1\x6f\xda\x3e\x10\x7e\xc6\x7f\xc5\xfd\x2c\xfd\x26\x1b\xd2\xb0\xa9\x4f\xad\x84\x26\xad\x55\x35\x4d\x5a\xb7\x41\xa7\x3d\x54\x55\x6b\xc8\x51\xb2\x12\x3b\xd8\x0e\x1b\x42\xfc\xef\xf3\x39\x21\x05\xd6\x55\x7d\x99\xb4\x97\x10\x9f\xef\xf3\x7d\xdf\xe7\x3b\xb2\x5e\x1f\x41\x86\xd3\x5c\x23\xf0\xc9\x3c\x47\xed\x6f\x67\x38\x2f\xd1\xde\x5a\x74\xa6\xb2\x13\xe4\x70\xb4\xd9\xb0\x52\x4d\x1e\xd4\x3d\x42\x9d\xc3\x58\x5e\x94\xc6\x7a\x10\xac\xc3\xc7\x2b\x8f\x8e\x87\x17\xd4\x13\x93\xe5\xfa\xbe\xff\xdd\x19\x4d\x81\xdc\xd0\x53\xa3\xef\xcf\xbc\x2f\xe9\x7d\x5a\x78\xfa\xf1\x79\x81\x9c\x49\xc6\xa6\x95\x9e\x40\xc4\xe1\x3b\x93\xad\x44\xa6\xbc\x82\x5c\x7b\xb4\x53\x35\xc1\xf5\x46\x82\xc8\x4d\x3a\x44\x95\xa1\x4d\x00\xad\x35\x56\xc2\x9a\x75\xc6\x71\x01\xa7\x03\xa0\x5a\xe9\x47\x65\xdd\x4c\xcd\x23\x5c\xb2\x4e\x3e\x8d\xbb\xff\x0d\x40\xe7\x73\x4a\xef\x58\xf4\x95\xd5\xb4\x8c\x40\xd6\xd9\xb0\x6d\x2c\xd2\x4f\x2f\xf1\x47\x5d\x45\x8c\x65\x42\x79\x6c\xd3\xb0\xcb\xcc\x10\x17\xdf\x72\x3f\x8b\x04\x0b\xf4\x33\x93\x25\x50\xd9\xf9\xc8\x5b\x70\xde\x06\xc1\x09\x1c\xf2\x4e\x1a\xa3\x80\x84\xa7\x67\xf1\x3d\x81\x59\xac\xe0\xa0\x50\xe5\x75\x8d\xbc\xd9\xc3\x2c\xdc\x67\x65\x55\xd1\x9c\x1a\xb4\x77\x23\x7c\x88\xae\x34\xda\xe1\x9e\x01\x81\x4c\xeb\xc1\x81\x81\x2f\x75\x80\x75\xfa\x7d\x98\x58\x54\x1e\xc1\xcf\x10\x2c\x2e\x2a\x74\x9e\x9c\x59\xb4\x67\x47\x06\xd1\x9d\xb8\x79\x68\x40\x6f\x4b\x3a\x01\xa2\xf4\xf2\xd2\x53\x63\xe1\x21\x81\x25\xd5\xb0\x4a\x87\xd6\xda\xba\x43\x90\x0e\x91\x49\xdf\xc7\x48\x3a\x42\x2f\x42\x6a\xe8\x9d\x74\x54\x06\x67\xfc\x54\xf0\xff\x97\x3c\x59\x4a\x59\x9f\xd5\x14\xa8\x2d\x4f\xcf\x8d\x08\x60\xd9\x5e\xe0\xb8\xca\xe7\xd9\x97\x0a\xed\x6a\x14\x7d\xad\x9b\xec\xe9\x3b\x90\x8d\xf7\xeb\xa8\x63\x8e\xba\x36\x14\x06\x03\x78\xbd\xab\x85\xf3\xba\xf2\x58\x39\x8c\x47\x93\x0c\xfe\x96\x3f\xa5\x2b\x96\x23\xec\x63\x72\x6f\x00\x0f\xc1\x3a\x3e\xe0\xe1\xf9\xa8\x4b\x2c\x25\x45\x5f\xf1\x3d\x59\x2d\xec\xfa\x94\x08\xb5\x4b\x79\xf4\xe6\x86\x44\xf6\xfb\xe7\x74\x83\x16\xcb\x30\xb2\xd4\x73\xc3\x8b\xb3\xe3\xe3\x93\x13\x2a\x8c\xcc\xaf\x4a\x84\x98\x40\x43\x97\x5e\x85\x07\x41\x9a\x89\xf9\x30\xfa\x74\x09\x66\x19\x6e\x25\xcf\x30\x78\xd2\x06\x6b\xeb\x84\x87\x2e\x61\x25\xec\xe4\x8b\xd0\x98\xd7\x37\x34\x36\xbb\x0d\xd9\x90\xad\x37\x44\x5b\x4b\x74\xbd\x4c\x2f\x8c\x2d\x94\x17\x77\xfc\x2e\xc8\x8b\x5b\x91\xe2\xf1\x49\x58\x86\xa0\x7c\x9c\xb8\x96\xd8\x15\xfe\xf4\xbf\x11\xa3\xe0\x1f\x88\xd1\xd6\xdf\x25\xf6\x55\x17\x4f\x79\x56\xe9\x67\x5c\xdb\xc3\x88\x71\x43\x42\xd6\xec\x88\x9c\x77\xed\xa0\xc5\xf2\x61\x94\x1c\x12\x9f\xde\x2e\x9b\x5e\x08\x24\x4d\x67\x86\xff\xa7\xe7\x86\xac\x9d\xaf\xae\x87\x41\xbc\x77\xe1\x9d\x64\x3b\x33\x78\xa0\x66\xdf\xe8\x4a\x3f\x63\xf5\x1e\xe6\x1f\x52\x73\x40\xb3\x99\xf2\xed\x28\xef\xf4\xc0\xfe\xe5\x6f\xf3\xe8\x08\xfa\x0c\xa2\xce\xe2\xa7\xee\x57\x00\x00\x00\xff\xff\x45\x32\xe0\xf8\x13\x07\x00\x00")

func TemplatesClient_helper_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesClient_helper_resourceTmpl,
		"../templates/client_helper_resource.tmpl",
	)
}

func TemplatesClient_helper_resourceTmpl() (*asset, error) {
	bytes, err := TemplatesClient_helper_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/client_helper_resource.tmpl", size: 1811, mode: os.FileMode(420), modTime: time.Unix(1463392846, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesClient_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\x5d\x4f\xdb\x4a\x10\x7d\xf6\xfe\x8a\xb9\x56\x2e\xb2\xb9\xc6\x79\xbf\x52\x5e\x80\xb4\x45\x4a\x11\x0d\xd0\x3e\x56\x8e\x3d\x26\x86\xc4\xeb\xac\xd7\x41\xc8\xf5\x7f\xef\xcc\xae\x3f\x12\x42\x91\x8a\xd4\xf6\xa5\x79\xf2\xce\xce\x9c\x39\x73\xf6\xec\xa6\xae\x4f\x20\xc1\x34\xcb\x11\xdc\x78\x95\x61\xae\xbf\x2a\x2c\x65\xa5\x62\x74\xe1\xa4\x69\x44\x11\xc5\x0f\xd1\x1d\x82\xdd\x14\x22\x5b\x17\x52\x69\xf0\x84\xe3\xe6\xa8\xc7\x4b\xad\x0b\x97\xbe\x31\x8f\x65\x92\xe5\x77\xe3\xfb\x52\xe6\x1c\x48\xd7\xda\x15\x02\xe8\x57\xd7\xa0\xa2\x9c\x20\x46\x0f\x01\x8c\xb6\xf0\xff\x04\xc2\x59\xb6\xb8\x30\x40\x57\x91\x5e\x96\xa6\x11\xa7\xba\x75\x3d\x7a\x68\x1a\xb7\xad\xc3\x3c\x31\x5b\xbe\x10\xb1\xcc\x4b\xd3\x55\x49\xa9\x6f\xe7\x33\x98\x70\x72\x78\x1a\x95\x78\x3b\xbf\xe0\x12\x4a\xa2\xea\xa8\xc8\x2e\xa3\x35\x9a\x26\xfc\x41\xd5\xfa\xa9\x40\x02\x6b\x97\x50\x6a\x55\xc5\x1a\x6a\xe1\xd8\x91\x80\x47\x08\xcf\xec\x78\x8d\x10\x69\x95\xc7\x70\x89\x8f\x7d\x85\xe7\xc3\xf1\x50\xce\x75\x8c\x9e\xe3\xa3\xd7\x47\x7d\x0a\x86\x2d\xdc\x64\x17\xb0\x6e\x88\x31\xea\x4a\xe5\x10\x33\xf8\x4b\x5a\x7c\x44\xbd\x94\x49\x09\x44\x75\x67\x3b\xe5\xfd\x94\x13\x46\xdb\xf0\x1d\x71\x3a\x93\xeb\x35\x21\x9a\xbc\xf1\x98\x06\xa2\x6d\xe6\xc3\x2a\x51\x88\x69\x7b\x31\x33\xed\x34\x20\x5a\x26\xab\x6d\xd0\x0e\x63\x22\x57\x91\x8a\xd6\x25\x25\xd8\xe5\x1c\xcb\xe2\x54\x26\x4f\x06\x2e\x4b\x69\x36\xd8\x89\x82\xeb\x52\xcf\xa0\xeb\x74\x6c\xc6\xe3\x4d\x3a\x12\x0c\x50\x29\xa9\x7c\x96\x65\x53\x1a\x58\xa6\xbc\xa8\xb2\x55\xf2\xa9\x42\xf5\x74\xad\x15\xb9\xc2\xdb\xf0\xb7\xed\x4a\x5a\xb1\xe9\xa8\x0d\x6e\xb8\xcd\x67\x54\x0b\x70\xdf\x4f\x6f\xb8\x8b\x70\x9c\x1f\x32\x80\x6d\xa4\xa0\x82\x43\xc6\x56\x00\x2a\x25\x59\x62\x85\x91\x46\x50\x48\x1d\xc9\x30\x72\x71\x8f\xb1\xa6\x2d\x0a\x04\x40\x5c\x99\x9d\x19\x80\x4e\x78\x6e\x93\x3c\xd3\x3c\x80\xce\x59\xfb\x04\xcc\x55\x60\x97\xb6\x24\xfe\xeb\x1a\xf6\x44\xfa\x0c\xb3\xdb\xaa\x10\x40\x9e\xad\x68\x54\x87\xe7\xa4\xb6\xff\x4c\x38\xc0\x32\xbd\x36\x61\x6b\x95\xca\x54\x1b\xbe\x36\x1f\x57\x25\x0e\xdb\xfb\x7b\x27\xd0\x5d\x13\xc7\x31\x2a\xa4\x52\x01\xb9\xcb\x98\xcb\xba\x69\x89\x51\x82\xaa\xa4\xee\xd0\xfd\x48\x8f\xf0\x83\x09\x87\xd7\xa8\x3d\xca\xa7\x0b\x1b\x5e\x17\x74\x5a\x3a\xf5\xdc\x7f\xb7\x24\xc8\xd6\xf7\x4d\x41\xab\x6d\x22\x41\x2f\x7b\x69\x8d\xa6\x65\xd1\x8b\xda\xf9\x3f\x3c\x97\x1e\xa5\xfc\x81\xd1\x1d\x87\x1e\x32\x54\xc0\xb4\x42\x46\xa6\x3b\x28\x4b\xf4\x7c\xf1\x9a\xab\x18\x69\xe8\x6d\x47\xe2\x37\x8c\x0d\x72\x8e\xf4\xa8\xa1\xf2\x7a\x44\x3f\xb4\x21\xef\xa8\xf2\xc5\xc0\x6e\x07\xc3\x02\x10\x4d\xf1\x8c\xa0\xcd\x7d\x6e\xfb\xf3\xe9\x6c\x7a\x33\x75\x0d\xc4\x5b\xdd\xdb\x62\xf4\x06\xfe\xe5\xfe\x3d\x3c\x8b\xdf\xed\x3b\xfb\xa0\x1e\x38\x6e\xe7\x3c\xde\xfc\x8a\x0c\x44\x77\xcc\x9d\x48\x52\xfb\x4b\xa6\x97\x9c\xed\xb9\xa6\x98\x0f\x90\xfe\x77\x7e\x56\xf6\x17\x54\x0f\xf6\x9f\x9c\x4d\x4b\xb6\x69\x8e\xda\x64\x1b\xf9\x06\x37\x72\x26\x1f\x51\x31\x88\x1d\x94\x8e\xa0\x85\x0d\x7a\x39\x82\x4e\xf6\xa0\x3b\xcb\xbf\x77\xf1\xe0\x2e\x0e\x0b\xfe\xd3\x1d\x56\x7b\x8b\xef\x01\x00\x00\xff\xff\xc2\xc4\x92\x49\x1c\x09\x00\x00")

func TemplatesClient_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesClient_resourceTmpl,
		"../templates/client_resource.tmpl",
	)
}

func TemplatesClient_resourceTmpl() (*asset, error) {
	bytes, err := TemplatesClient_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/client_resource.tmpl", size: 2332, mode: os.FileMode(420), modTime: time.Unix(1463392113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesDateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xa8\xae\xd6\x0b\x80\x30\xfd\x12\x73\x53\x81\x12\x5c\x40\x11\xe7\xfc\xbc\x92\xd4\xbc\x12\x08\x2f\x35\x2f\x05\xc8\x00\x04\x00\x00\xff\xff\x38\x57\x68\x75\x42\x00\x00\x00")

func TemplatesDateTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesDateTmpl,
		"../templates/date.tmpl",
	)
}

func TemplatesDateTmpl() (*asset, error) {
	bytes, err := TemplatesDateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/date.tmpl", size: 66, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesGeneric_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4f\xcd\x4b\x2d\xca\x4c\x8e\xcf\x4d\xcc\xcc\x8b\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x00\x49\x70\x71\xa5\x95\xe6\x25\x83\x99\x1a\x9a\xd5\x5c\x5c\xb5\x5c\xd5\xd5\xa9\x79\x29\x40\x55\x80\x00\x00\x00\xff\xff\xdc\x57\x73\x81\x49\x00\x00\x00")

func TemplatesGeneric_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesGeneric_mainTmpl,
		"../templates/generic_main.tmpl",
	)
}

func TemplatesGeneric_mainTmpl() (*asset, error) {
	bytes, err := TemplatesGeneric_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/generic_main.tmpl", size: 73, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesInput_validators_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xf9\x14\xcf\x42\x49\x05\x29\x9e\x85\x1e\x3d\x7a\xf5\xba\xc4\x66\x62\x07\x37\x99\x65\x92\x28\xb2\xf4\xbb\x9b\x74\x17\xab\x7d\xa7\x65\xf8\xbd\x3f\x9b\x79\xf6\x14\x38\x11\x36\x9c\xa6\x5a\x86\x4f\x37\xb2\x77\x45\x34\x0f\xd3\x77\x39\x49\xda\x9c\xcf\x26\xa8\x44\x7c\x95\x20\x1a\xf3\xfe\x4a\x80\xe3\x24\x5a\xf0\xba\x5c\x58\xd2\xb3\xaa\xa8\x31\x2d\x12\xb1\x8e\x85\xa7\x91\x06\x09\xbb\xfe\x7d\xff\x64\xd0\x64\xad\xc5\xf1\x44\xc7\x0f\x70\x40\x8b\xaa\x04\xce\x2b\x4c\x90\xc5\xd7\x20\x73\xa1\x23\xe5\xec\xde\x09\x07\xd8\x97\x9a\x0b\xde\xe8\x37\xb7\xb3\x5b\x6f\xb1\xc5\x12\xbf\x18\x7a\xf3\xf0\xb7\xba\x6f\x7e\x40\x60\x1a\xfd\xba\xa0\xab\x75\x5f\x4e\xfb\x36\xdb\xb5\x88\xee\xc0\xdd\x01\x8f\x57\xa4\x4b\x1d\x67\xba\xfd\xbd\xdd\x3a\x6a\x6d\x54\x2a\x55\xd3\xbf\x52\x33\xcf\x94\x7c\x7b\xb7\x9f\x00\x00\x00\xff\xff\x71\x8f\x4e\xd5\x5d\x01\x00\x00")

func TemplatesInput_validators_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesInput_validators_pythonTmpl,
		"../templates/input_validators_python.tmpl",
	)
}

func TemplatesInput_validators_pythonTmpl() (*asset, error) {
	bytes, err := TemplatesInput_validators_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/input_validators_python.tmpl", size: 349, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesOauth2_middlewareTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\x5b\x4f\xdb\x4c\x10\x7d\xce\xfe\x8a\xf9\xfc\xf0\xd5\x46\x60\xe8\xe5\x09\x29\x2f\xad\xda\x52\xa9\xa5\x14\x52\xf1\x50\x55\x68\xb1\xc7\xd8\xc2\xd9\x75\x77\x37\xb8\xc8\xf2\x7f\xef\xec\x2d\x04\x12\xd3\x46\x49\x64\xcf\xe5\x9c\xd9\x33\x33\xf6\x30\x1c\x40\x89\x55\x23\x10\x12\xc9\x57\xa6\x7e\x75\xb5\x6c\xca\xb2\xc5\x9e\x2b\x4c\xe0\x60\x1c\x59\xc7\x8b\x5b\x7e\x83\x30\x0c\xf9\x99\xbf\x3c\xe5\x4b\x24\x07\x6b\x96\x9d\x54\x06\x52\x36\x4b\x04\x9a\xc3\xda\x98\x2e\x61\x19\x63\x87\x87\xf0\xd5\x61\x51\x8a\x8f\xfd\xb2\xc6\x84\x46\x83\x27\x82\x07\x22\xa8\xa4\x82\x75\x30\x33\xf7\x1d\x3e\x83\xa0\x8d\x5a\x15\x06\x06\x36\x2b\x51\x17\xaa\xb9\xc6\xf2\xed\xbd\xb5\x36\xe2\x86\xcd\xaa\x06\xdb\x12\xfc\x27\xda\x74\x21\x3b\xd4\xde\xf6\xe3\x67\xb0\x8e\xae\xd0\x53\xec\x27\x99\x0a\x85\xdc\x20\x08\xec\xff\x5a\x0d\xab\x56\xa2\x78\x16\x2c\x0d\x45\x44\xfe\x0c\xf6\xa6\x41\x07\x66\x4b\x95\x4b\x38\x9e\x4f\x53\x93\x00\xe1\x64\xc7\xe1\xb8\xee\x66\x9f\xcd\x46\x97\x3e\x0c\xd0\x54\x90\x9f\x20\x2f\x51\x8d\x63\x80\xcc\x37\x45\x9b\x43\x52\x3b\xb7\x4e\xa2\xdb\xeb\x47\x0e\x62\xf4\xa9\x81\x38\x89\xa0\xd8\x6a\x74\xc8\xdf\x56\xa8\xee\xcf\xb8\xe2\x4b\x0d\x93\xf8\xbf\xd6\x41\x68\xa6\x78\x36\x80\xb6\xc8\x44\x19\xb1\x15\x9a\x95\x12\xf0\xbf\x5c\x86\xde\xbd\xab\xb1\xb8\xbd\xf0\xb2\x16\xf6\x5a\x43\x5f\xa3\xa9\x51\xc1\x4a\xd3\x5f\xcd\x35\x35\x0f\x4b\x2c\x83\x34\xbe\x4b\x29\xe9\x3a\xad\x7d\xb6\x09\xbb\xdd\xb4\x6b\x29\x5b\x3b\x7a\x74\xfe\x16\x05\x41\xe5\x3e\x24\x83\xf9\x1c\x8e\xac\x67\x16\xea\xa4\xb9\x40\xdb\x0a\x1a\x49\x9a\xee\xab\x7d\xe0\x6d\x2b\x7b\xaa\x85\x7a\xaa\xb8\xa0\x8d\x5a\x27\xbb\xb4\x10\xe5\x2c\x0f\x31\x1b\x01\x96\xd3\x7b\x89\x2a\x82\x39\xc7\x63\xca\x19\x91\xba\x1f\x7d\x83\xa3\xe2\xd4\xb3\xa0\xda\x09\x17\x74\x54\x15\xe5\x3c\x59\x2c\xce\x48\xa9\x68\xeb\x14\x6a\x14\x86\x9b\x46\x0a\x90\x15\x98\x9a\x16\xf6\x61\x53\xff\x4d\xc1\x40\x91\x0a\xfc\x6d\xc0\x3e\x16\xf2\x60\xc9\x1e\xdd\xd9\xe2\x43\x15\x9b\xe6\x0f\x44\x91\x5a\x9e\xb4\xf7\xf6\x73\xd4\x9d\x14\x1a\x2f\x55\x43\x23\xb4\x0f\x0a\xf6\x82\x9d\x86\x4b\x9b\xcc\x89\x70\xc7\x15\xf0\xa2\x40\xad\x17\xf2\x16\x45\xdc\x7d\xf2\xd0\x99\xbd\x03\x8c\xf3\xb8\x51\x71\xcf\x05\xab\xe8\xd3\x89\xdd\x31\xb2\x5e\xe4\x4d\x70\xea\x4e\xfe\xfd\xfc\xb3\x1f\xdc\x34\xcb\x3f\xa2\x49\xe3\x4c\x67\x56\xfc\xf5\x92\xec\x80\x8f\x1b\xb7\x1b\x36\xec\xdc\x16\xa2\xaf\xf6\x51\x34\x61\x05\x90\x3e\x77\xda\xf8\xdc\xf4\xcd\xd1\x4b\x9b\x12\xb4\x75\xc9\x5e\x86\xcb\xf3\x4f\x8b\xf7\x50\x48\xaa\x88\xb4\xf0\x42\xb8\x55\x79\xa1\xe3\x86\x78\x21\x9f\x8c\x7d\x48\xf7\xf1\xeb\x40\x2a\xe7\x3f\x2a\x71\x7b\x5d\xb2\xdd\x45\xbd\xde\x51\x94\x9d\x90\xfc\x02\xd5\x1d\xda\x39\x4c\x7b\x6a\x2e\x45\x8d\x19\xcd\xaa\x7d\x35\xd9\xed\xb7\xef\xa0\x3f\x01\x00\x00\xff\xff\xa1\x9b\x07\xa6\xa7\x06\x00\x00")

func TemplatesOauth2_middlewareTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesOauth2_middlewareTmpl,
		"../templates/oauth2_middleware.tmpl",
	)
}

func TemplatesOauth2_middlewareTmpl() (*asset, error) {
	bytes, err := TemplatesOauth2_middlewareTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/oauth2_middleware.tmpl", size: 1703, mode: os.FileMode(420), modTime: time.Unix(1463718157, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesOauth2_middleware_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\xee\xc5\x09\x5e\xb3\xfd\x38\x2d\x2c\xf4\x54\x7a\x5a\x5a\xe8\xad\x14\xa3\x95\x46\x89\x1a\x45\xca\x4a\x72\x43\x30\xf9\xef\x95\x64\x39\x91\x63\x2f\x2c\xac\x0f\x89\x91\xde\xbc\xf7\xe6\x69\xac\xbe\xbf\x03\x86\x5c\x28\x84\x52\x93\xce\x6d\x3f\xb5\x7b\xc1\x98\xc4\x23\x31\xd8\x1e\x4e\x6e\xab\x55\x09\x77\xe7\x73\xc1\x8d\xde\x03\xef\x14\x75\x5a\x4b\x0b\x62\x7f\xd0\xc6\xc1\xd1\x90\x83\x4d\x7b\x92\xd8\xdd\xb8\xbe\xa9\xc1\xe0\x4b\x87\xd6\xd5\xf0\xd7\x6a\x25\xf8\xa9\x28\xa8\x47\x58\x48\x32\x7d\xdf\x3c\x91\x3d\x9e\xcf\x0f\x05\xf8\xc7\x9b\x80\xb6\x15\x4a\xb8\xb6\xad\x2c\x4a\x5e\x83\xa5\xfa\x80\xf6\xf1\x49\x2b\x5c\x0d\xa0\xf0\xf4\xbd\xe0\xd0\x7c\x47\xc2\xd0\x78\x5b\xe3\x72\x28\x69\x18\x5a\x6a\xc4\x33\xb2\xf6\xf9\x04\x8f\x50\x6e\x23\xca\x96\x53\x14\x17\x28\x59\xd8\xf6\x16\x06\x9e\xe4\xa4\xcc\x44\x50\x5a\x84\xa0\xf4\xb3\x43\x73\xfa\x41\x0c\xd9\xdb\xf7\xcb\x65\x64\x0b\x9a\x80\x8a\xc1\xad\x08\x91\x52\x1f\xbd\xc4\x90\x86\xe7\x19\x5e\x8a\x2c\x35\xea\x31\x97\xd4\x78\x96\xd5\xd7\x78\x3c\x15\x5f\x5d\x56\x42\x01\x43\xaa\x0d\x71\x9e\x33\x1e\xa7\xd0\xaa\x5a\x13\xb3\xb1\x35\xac\xd7\xbb\x63\x78\xcb\x28\xc2\xe3\xf4\x0e\x55\xe8\xa0\x9c\x2c\xfb\x74\x16\x62\xc8\x72\x98\xb2\xe4\x4c\x69\x36\x9a\x84\x6c\x36\xe8\xaa\x6b\x58\xb5\x57\x5a\x4d\x6a\x51\xbe\x2a\xf6\x72\x89\x14\xdd\xdb\x44\x43\x87\x51\xb1\x24\x94\xa2\xb5\x6d\x04\x94\x83\xea\x6d\x87\xa9\x38\x34\x3f\x67\x36\xe8\x3a\xa3\xc6\x01\xaf\x56\x35\x7c\xb9\xff\x38\xa5\xd8\x34\xb9\x88\x77\x11\xff\xa7\x98\x0f\x70\x30\xfa\x9f\x60\x08\x54\xfb\x1f\xa7\x81\x6e\x91\xee\xd2\x49\x83\xf6\x2e\xb6\x08\x39\xcf\xa4\xfc\x32\x19\xbf\xff\xcc\xec\xc7\xcc\x22\x5b\x1a\xa0\x6a\xf8\x5b\x85\x96\xbe\x11\x3f\xe4\x6f\xeb\xea\x73\xb1\x80\xe0\xb3\xb9\x29\x6e\x10\xf3\x51\xbb\xce\xed\xd4\x55\xf6\xc5\x67\xd3\x37\x76\x70\xf3\x11\x08\x0b\xe1\x56\x00\x6d\x40\xa2\xaa\x16\x20\xb1\xbf\xfb\x87\x25\xd7\xbf\x4c\x87\xd7\x9c\xb8\xe7\x48\xa5\x20\xd4\x92\xda\x94\x24\xe0\x6d\x44\x2e\x6c\x8e\x96\x83\x78\x22\x99\x03\x5e\xb5\x92\x16\xe3\xa9\x14\xe1\x62\x0e\xd7\x41\xb8\x7a\xff\x07\x00\x00\xff\xff\xfb\x91\x93\x2b\xa5\x05\x00\x00")

func TemplatesOauth2_middleware_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesOauth2_middleware_pythonTmpl,
		"../templates/oauth2_middleware_python.tmpl",
	)
}

func TemplatesOauth2_middleware_pythonTmpl() (*asset, error) {
	bytes, err := TemplatesOauth2_middleware_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/oauth2_middleware_python.tmpl", size: 1445, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesPython_clientTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x92\xcd\xee\xda\x30\x0c\xc0\xef\x79\x0a\xab\xe2\x00\xfa\x43\x1f\x00\x89\x03\x20\x26\x21\x6d\x13\x62\x1f\xd7\x28\xb4\x2e\x44\x6b\x92\xce\x49\x98\x50\x96\x77\x5f\xd2\x96\xaa\x87\xf9\xd0\xda\x96\xfd\xf3\x57\x42\xd8\x40\x8d\x8d\xd4\x08\x45\xf7\x72\x0f\xa3\x79\xd5\x4a\xd4\x8e\x3b\x54\x5d\x2b\x1c\x16\xb0\x89\x91\x49\xd5\x19\x72\x40\xf8\xdb\xa3\x75\x96\x35\x64\x14\x8c\x91\xde\xc9\xd6\xc2\x18\x71\xf3\xb2\xad\x79\x8a\xa2\x17\xb7\x8e\xa4\xbe\x33\x76\xd8\x7f\x3b\xf1\x1f\xd7\x33\xec\xa0\x08\xa1\x3c\x08\x8b\xc9\x8a\xb1\x60\x8c\x55\xad\xb0\x16\x8e\x3d\x69\xcb\x20\x49\x6a\x07\x38\x97\x5a\x3a\xce\x97\x16\xdb\x66\x35\xf8\xb3\x64\xb3\xf4\xd4\x26\xd2\x1b\xca\x42\x00\x12\xfa\x8e\xb0\xf8\xb5\x86\xc5\x13\xb6\x3b\x28\xbf\x60\x1a\xa5\xb6\x90\x3a\x7f\x23\x43\x58\x3c\x47\xff\x57\xa1\x30\xc6\x65\xef\xb9\x08\x12\xca\xc6\x38\x2b\x52\x14\xc5\x8c\xd9\x64\x68\x93\xa9\x29\xfa\x93\xd7\xd5\xd1\x28\x95\x9a\x9d\xe0\x59\x32\xaa\x89\x31\x04\xd4\xf5\xcc\x7d\x76\x20\x2d\xa8\xbe\x28\x34\x86\x86\x26\x7e\x22\xdd\x62\x1c\xf4\x93\xae\x3b\x23\xb5\x9b\x25\xa5\xf2\x93\xee\x49\xa6\x51\xa7\xa9\x3f\x86\xa4\x2b\x5a\xe3\xa9\xc2\x8b\x70\x8f\x59\xe2\x10\x9c\xbf\x1f\xff\x39\xc3\x72\x30\xba\x7e\xde\xd5\x94\x44\xe8\x3c\xe9\xe9\xb0\xe5\xd4\x21\xfc\x85\xef\xe6\xb3\xf9\x83\x94\x56\x95\xa0\xc3\xb6\xae\x7b\xba\xa7\x6d\xad\xe1\x81\xa2\x46\xb2\xbb\xf1\xbf\xca\x67\x48\xc3\xe7\xa5\xe4\x37\x95\xd5\xfc\x6e\xfe\x05\x00\x00\xff\xff\x10\xb7\xfd\xe9\x60\x02\x00\x00")

func TemplatesPython_clientTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesPython_clientTmpl,
		"../templates/python_client.tmpl",
	)
}

func TemplatesPython_clientTmpl() (*asset, error) {
	bytes, err := TemplatesPython_clientTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/python_client.tmpl", size: 608, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesPython_client_utilsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xcd\x6e\xdb\x46\x10\xbe\xeb\x29\x06\x0c\x14\x93\xb5\xa8\xd0\x52\x90\x1f\x21\x6a\x0e\x45\x51\xf4\x92\x93\x73\x0a\x02\x79\x45\x0e\x2d\xd6\xe4\x2e\xbd\xbb\xb4\xc3\x04\x79\xf7\xce\xec\x92\x14\x29\x2b\x69\x0e\x35\x0c\x6a\xb5\xf3\xff\xcd\x7c\x43\x7d\xfb\x16\x43\x86\x79\x21\x11\x82\xba\xb5\x07\x25\x77\x69\x59\xa0\xb4\xbb\xc6\x16\xa5\x09\x20\xfe\xfe\x7d\x56\x54\xb5\xd2\x16\x32\x61\xd1\x16\x15\xf6\xdf\xdd\x79\x36\x23\x73\xd8\x37\x45\x99\xed\xee\x1b\xd4\xed\xce\x58\x5d\xc8\xdb\xd0\x7f\xa9\x85\x16\x95\xd9\x7e\x50\x12\xa3\xcd\x0c\xe8\x2f\x08\x02\xf7\xe9\x4c\xc0\x69\x81\xd3\x42\x8b\xda\x49\x0a\x59\x37\x16\xe0\x66\xec\xe1\x06\x36\x90\x15\xa9\x2d\x94\x14\xba\x75\x6a\xaa\xb1\xac\xe7\xc3\xc1\x63\x61\x0f\x90\x2b\x5d\x09\x0b\x37\xef\xef\xb0\xdd\x3e\x88\xf2\x39\x7d\xae\xf8\xb0\xba\x99\xc4\x2e\x72\x18\x3b\x87\xc2\x00\x67\xe8\x13\xe4\x3f\x8d\xb6\xd1\x92\xf4\x67\xee\xea\xde\xc0\x16\x82\xf7\xde\x98\x82\x00\xf9\x5d\x00\x96\x58\x51\xb2\x13\x57\x47\x17\x64\x73\xb9\x65\x45\xb8\x84\x60\x1b\xd0\x93\x32\x0d\xd9\x26\xe2\x9b\xe7\x9d\xeb\x2e\xd2\xbd\xf9\xb4\x89\xaf\x3e\x77\x70\xde\xa2\x44\x4d\x68\xef\x74\x9e\xae\xd7\xeb\xb7\x61\xb6\x80\x52\xa5\xa2\xdc\xd9\xaf\xdb\x6b\xdd\x9c\x62\xd9\xeb\x43\xa7\xef\x5a\xd3\xa1\x31\x82\xd4\x1b\x65\x54\x0b\xb7\x12\x6c\x5b\xa3\xbb\xe9\x5d\x93\xa0\x31\xe8\xbf\x7a\x17\x5f\x09\x15\x46\xcb\x52\xcc\x85\x47\xdd\x1e\x50\x3f\x16\xa4\x56\x09\x7d\x07\xc2\x40\x63\xd3\xd9\xb8\x21\x3e\x4a\x9f\x49\xd7\x1e\x17\xd0\x27\xb4\x04\xfc\x42\xdd\xbc\x59\x25\xc9\x9b\x38\x79\x19\x27\xab\xeb\x55\xb2\x49\xf8\xff\x32\x79\x4d\xcf\x69\xaf\xac\x6e\x8f\xa0\x52\x2a\x7d\xb2\xc7\xcb\x71\x51\x9c\xf5\x72\x38\xe4\x5a\x55\x7c\x30\x56\x54\x75\x98\x45\x83\x09\x96\x06\x7f\xc5\x01\xd5\x76\xd6\x07\x7e\x49\xb1\xb6\x70\x4d\x08\xfe\xa9\xb5\xd2\x47\x5f\xb5\x30\x66\xd6\x0f\x99\x54\x96\x66\xab\x90\x64\x2b\x53\xe4\x2e\x4e\x42\x44\xa3\x81\x13\x0c\xe9\xe0\x2f\xbc\xf8\xa0\x3c\xc1\x5c\x58\xa0\x91\x73\x08\xaa\xfd\x3f\x98\x12\x82\x7f\x91\x74\xae\x97\x17\x30\x77\x5d\xa4\xb4\xa2\x5f\x0d\xca\x87\x51\xe0\xb3\x75\x87\xbf\x65\x4b\xfe\xb4\x4d\x5d\x62\x18\x7d\xda\xac\x3f\x47\x93\x71\x0d\x2f\xe6\xc9\xcb\x2c\x9e\x27\x2b\xff\xb8\xe6\xc7\x66\x78\xcc\x0d\x65\x36\x81\x37\xcc\x96\x2d\x0a\x4d\xb9\x2c\x2b\x25\xed\x81\x0f\x99\x68\xf9\xe3\xa0\x1a\x7f\x5f\xc8\xc6\x22\x9f\x0c\xa6\x4a\x66\x8b\x89\x03\xd8\x0d\xa4\xe0\xcc\x78\x30\xc7\xac\x88\x18\x00\xc7\x9d\x1d\x5d\xa4\x4d\xc9\x8a\x2a\xcf\x0d\xda\x90\xab\x1a\x69\x4e\xa9\x33\x61\x06\x43\xbc\xf9\x11\x39\x36\x03\x11\x1c\x4b\x4c\x6b\x2c\xf1\xbf\x4f\x66\x31\x62\x46\x07\x52\x32\x81\x8c\xa4\x5d\x0f\x73\xf8\x78\xfd\x07\xf8\xe4\x96\x4e\xe5\xef\xdc\x8b\x32\x85\xc6\xf5\xef\x20\x1e\x10\x84\x6c\x07\xf7\x94\x67\xae\x16\xf0\x88\x27\x0c\x75\xa1\x4f\x88\x39\x84\x9f\xd4\x79\x8e\x39\xcf\x0e\x42\x66\x25\x02\xb7\x06\xf6\x48\xfc\x44\xb8\x7a\xfb\x3a\x81\x4a\x19\xda\xac\xad\x2b\x90\xdc\x22\x6f\x48\xa9\xa6\xd9\x30\x97\x69\x1d\x8f\xed\x96\x63\xa2\x72\x45\xae\xe9\xf0\xce\x09\xa7\x7c\x7b\x06\x1f\x8d\x33\x5a\x91\x83\x54\x34\xa6\x8b\xcc\x10\xc8\x8b\x1e\x01\x28\x51\xd4\xe4\xa9\x9d\xd8\x5a\x9a\x59\x37\xaf\xd5\x9d\x9b\x56\x17\x49\x63\x5d\x0a\x9a\x77\x8e\xb8\x65\xbf\xd1\x71\x84\x7f\x46\xfc\xb3\xce\x46\xc3\xdf\x0d\xbe\xcf\xb9\xc3\x8b\x12\x2a\x8b\xdb\x83\x35\xe2\x81\x96\xdb\xc2\x57\x3b\xbe\x72\x5d\x12\xa5\x3d\x9d\x0c\xbe\xee\x41\x1c\x63\xe5\x12\x70\xfd\x71\x39\x58\xca\xbd\xda\x15\x26\x33\x76\x9a\x6c\xd7\xda\xd8\xe9\x77\xfe\x7f\x52\xdb\x44\x7d\x12\x77\xaa\x7b\x1c\x58\x4f\xa1\x33\x54\xfb\xbf\x38\xb4\x57\xaa\xec\x5e\x17\x8e\x00\xc3\xbb\x2b\x03\xde\xb4\x4f\xe9\x3b\xd6\xa5\x97\xad\xdf\x0d\x66\x7c\xbb\x85\x04\xe2\xdf\xe1\xd2\xbd\x42\xa6\x82\xab\x37\xc9\x20\x5b\x9f\xc8\xe2\xf5\x2b\x2f\x8c\x93\xab\xde\xb0\xaf\x68\x50\xfa\xcf\x6d\xe2\x6b\xe1\x1d\x46\xda\x62\x6f\x42\xaf\x16\xc1\x8b\x17\xc0\x01\x9c\xd8\xaf\xb6\x13\x85\xb9\x93\xb3\xde\xab\x64\x58\xde\x5d\xe0\x77\x90\x3c\xe9\xce\xc5\x3c\x1d\x16\x2c\x2f\xfe\x30\x88\x83\x05\xf8\xed\xe9\x03\x44\x3f\x6e\xed\x53\xe3\xcb\x27\xc6\xfc\x5b\x10\x65\xe6\x7e\xf2\xfd\x1b\x00\x00\xff\xff\x4b\x7e\x1f\x35\x18\x0a\x00\x00")

func TemplatesPython_client_utilsTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesPython_client_utilsTmpl,
		"../templates/python_client_utils.tmpl",
	)
}

func TemplatesPython_client_utilsTmpl() (*asset, error) {
	bytes, err := TemplatesPython_client_utilsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/python_client_utils.tmpl", size: 2584, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesPython_server_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x53\x4d\x6b\xdb\x40\x10\xbd\xe7\x57\x0c\xc1\x20\x09\x64\x91\x43\x4f\x01\x41\x93\xd2\x42\xa0\x2d\xa1\x94\x5e\x42\x11\xdb\x68\x64\x6f\xa3\xdd\x55\x66\x57\x0e\xc6\xd5\x7f\xef\xec\x57\xe3\x3a\xd6\xc5\xb3\xf3\xf1\xde\xbc\xe1\xf9\x70\x58\x43\x8f\x83\xd4\x08\x97\x84\xd6\xcc\xf4\x88\xdd\xb4\x77\x5b\xa3\x3b\x87\x6a\x1a\x85\xc3\x4b\x58\x2f\xcb\x85\xef\x5c\x89\x49\x7e\x15\x0a\xe1\xba\x85\x26\x04\xbe\x32\x90\x51\x30\x8c\xc2\x3e\x81\x54\x93\x21\x07\xb7\xe3\x8c\x13\x49\xed\x6a\xf8\x6d\x8d\x96\xc3\xbe\x06\xc2\xe7\x19\xad\x63\x1c\x20\xa1\x37\x08\xab\xa7\x1a\x56\xbb\x00\xf5\x45\xf6\xfd\x88\x2f\x82\x37\xb8\x21\x0a\xa0\x09\xe9\x70\x58\xed\x9a\xbb\x10\xdf\x0b\xb7\x5d\x16\x10\x36\x26\x3d\x7d\x58\x0b\x50\xf7\x10\xa3\x37\xc0\xdf\xf0\xf9\xd6\xf4\x12\x2d\xe4\x3d\xfd\x2c\xa3\x1c\xc1\xff\x07\xc2\x61\x14\xf6\x07\xbe\x9b\xcf\xe6\x05\x89\xb3\x1d\xcb\x86\xf6\x55\x55\x59\xbc\xe9\x8a\x4d\x45\x0d\x5d\xa7\xb9\xd0\x75\xd5\x79\xa1\xc8\x97\xed\xc3\x36\x17\xef\x99\x3c\xdf\xf3\x04\xa7\x21\x33\x3b\xf4\x34\x2c\xf4\xa3\xee\x27\xc3\xac\xcb\xc2\xf0\x2a\x02\xb4\x0f\xb1\xf6\x03\xe9\x17\xe7\x7f\x7a\xb6\x4c\xa6\x3c\x9b\xf2\x74\xdc\x70\xe6\xb2\x9e\x77\xa7\xd2\xfd\x9a\xe3\x47\xf9\x10\x5f\x37\xb4\xb1\xcb\x12\x40\xfd\x59\xfc\x10\x7b\x24\x9e\x3d\x2a\x48\xfd\x21\x73\x2f\x48\x28\xee\xaf\xae\x2f\x80\xbf\xa2\x28\xc2\xef\xeb\x42\x83\x5f\x68\x48\x0b\x7d\x9a\xf5\xe3\x07\xa3\x14\x6a\x67\x03\x72\xec\xe5\x86\x7f\x71\xe6\xf4\xaf\x3b\x07\xd2\xc2\x56\x68\x56\x41\x30\x18\x82\x23\xdd\x70\x72\x9f\x13\x7e\x90\x43\x76\xc0\x1e\x52\x55\xea\x69\x66\xe2\x96\xcb\xb9\xc4\x47\xf0\xce\xe8\xbc\x53\xcb\xe4\xd2\x66\x83\x2e\x26\xaa\x2a\xce\x0d\xa0\x8d\x4b\xe3\xcd\x4e\x8c\xb2\xe7\x7f\x46\x99\x34\xfb\x8f\xd0\xcd\xa4\xb3\xdf\x4b\x24\x32\x64\xdb\x34\x10\x5f\x55\x0d\xef\xae\xae\xf2\x76\xc9\x71\x67\x66\xab\x6c\xc8\x75\x74\x64\x0e\xff\x06\x00\x00\xff\xff\xce\xc6\xbe\xec\xad\x03\x00\x00")

func TemplatesPython_server_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesPython_server_resourceTmpl,
		"../templates/python_server_resource.tmpl",
	)
}

func TemplatesPython_server_resourceTmpl() (*asset, error) {
	bytes, err := TemplatesPython_server_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/python_server_resource.tmpl", size: 941, mode: os.FileMode(420), modTime: time.Unix(1463734030, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xc1\x6a\xdc\x30\x10\x3d\xaf\xbe\x62\x10\x39\xd8\xb0\x91\x43\x4f\x21\xd0\x43\x60\x09\x5d\x68\xd3\x65\x17\x7a\x0d\xaa\x3d\xf6\x0e\x2b\x4b\x46\x1e\x6f\x03\xc6\xff\xde\x91\x9c\x6e\x4e\xf5\xc5\xd2\xe8\xbd\xa7\xf7\x66\x34\xcf\xf7\xd0\x60\x4b\x1e\x41\x8f\x18\xaf\x18\xdf\x7a\x4b\xfe\x8d\xb1\x1f\x9c\x65\xd4\x70\xbf\x2c\x6a\xb0\xf5\xc5\x76\x08\xf3\x6c\x0e\xeb\xf2\xd5\xf6\x28\x07\x8a\xfa\x21\x44\x86\x42\x6d\xb4\x0b\x9d\x96\x9f\x47\xae\xce\xcc\x83\x56\x0a\xe4\xd3\xc2\x39\x86\xc0\xfb\x0c\x3c\x58\x3e\x2f\x4b\xd5\x85\x68\x7b\x27\x88\x8d\xee\x88\xcf\xd3\x6f\x53\x87\x3e\x55\xc9\x39\x5b\xf5\xd3\xbb\x5e\xb9\x5d\x18\x2e\x9d\x21\x5f\x5d\xad\xa3\xc6\x72\x88\xe6\xfa\x45\xab\x52\xa9\x76\xf2\x35\x24\xa7\x45\x09\x73\x06\x57\x15\x90\x1f\x26\x86\x1b\x36\x97\x3f\x99\x27\xe4\x5f\xeb\x86\x82\x7f\x11\x7e\xa1\xfb\xc9\x31\x0d\x0e\x7f\xb6\x7a\x0b\xab\x29\xf3\xe3\x56\x93\x6b\x36\x11\x9e\xbe\x82\x18\x32\xaf\xf8\xe7\x18\x26\xc6\x58\x94\x6b\xb0\x79\x06\x6a\xc1\x3c\x1f\xf6\xbb\x50\x8f\x3b\x8a\x20\xfd\xf8\x30\x62\x07\x6a\xa4\x98\xb7\xd1\xa4\xd0\x87\x28\x4d\x7e\x2f\x74\x25\xed\xf8\xa4\x48\x2b\x74\x69\xbe\x59\xdf\x38\x11\x4e\x5d\x33\x27\x8e\x34\xfc\x1f\xbd\x85\x8c\x7a\x21\x87\xa7\x3c\xae\x95\x25\xa7\x85\x36\xd5\xc7\xbd\x22\x2a\xdf\x3f\x97\xe8\x9b\x64\x4d\x6d\x64\x1d\xad\x97\x31\xde\x5d\xb6\x70\x77\x4d\xc9\xcc\x11\xc7\x30\xc5\x1a\xc7\x1d\xb6\x09\x25\x20\xb3\xce\x76\xef\x25\x6c\x6b\x6b\xcc\xb1\xc7\x22\x6e\xe1\x76\x26\x9e\xe6\xa5\xcc\x8a\x37\x75\x19\xbf\x39\x44\xf2\xec\x7c\xa1\x47\xb6\x91\xc9\x77\xb0\xbe\x29\x2d\xd8\xec\xf3\x3b\x8d\x8c\xfe\xd9\x37\xd9\x7c\xa1\x9f\x1e\x1f\x1e\x1f\x24\x54\x2c\x95\x68\xa4\xc7\x98\xf4\xd2\x93\xfb\x1b\x00\x00\xff\xff\x57\x34\xca\x9d\x99\x02\x00\x00")

func TemplatesServer_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_mainTmpl,
		"../templates/server_main.tmpl",
	)
}

func TemplatesServer_mainTmpl() (*asset, error) {
	bytes, err := TemplatesServer_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_main.tmpl", size: 665, mode: os.FileMode(420), modTime: time.Unix(1463372706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_python_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x51\xeb\xda\x30\x14\xc5\xdf\xf3\x29\x2e\xe5\x0f\x6d\x41\xeb\xbb\xac\x63\x6e\x55\x18\x88\x0c\x27\xec\x61\x8c\x10\xdb\xdb\x1a\xd7\x26\x21\x49\x15\xc9\xfa\xdd\x97\xb4\x8a\x63\x13\xd6\x87\x42\x73\xef\x39\xf7\xd7\x73\xe3\xdc\x1c\x2a\xac\xb9\x40\x88\x0c\xea\x0b\x6a\xaa\x6e\xf6\x24\x05\xed\x18\x17\xd4\x62\xa7\x5a\x66\x31\x82\xf9\x30\x90\x5a\xcb\x0e\xea\x96\x99\x9f\xc0\x3b\x25\xb5\x85\x4d\xf8\x98\x81\x41\x51\xd1\x50\xa5\x15\xd7\x58\x5a\xa9\x6f\xe4\xde\x71\xb5\xb5\xd4\x9d\xa1\x67\x23\x05\x71\x0e\x34\x13\x0d\xc2\x9b\x17\xbd\x5d\x60\x99\x43\xb6\x47\x23\x7b\x5d\xa2\x29\xb0\x7e\x4e\x71\x2e\xdb\xb1\x0e\xe1\x17\x1c\xe4\x56\x5e\x51\x0f\xc3\x63\xe6\x8b\x12\x65\x8a\x7b\x73\x4f\x01\xde\x80\x30\xa5\x20\x9f\xd8\x12\x4a\x85\x6f\xa6\x34\x1d\x8f\xb3\x52\x8a\x9a\x37\xdf\xa3\x6f\x87\x0d\xfd\xf4\x75\xbf\xa1\xeb\xdd\xea\xe3\x76\x5d\x44\x3f\x82\x82\xb5\x06\xc9\x9f\xc4\x19\x17\xdc\x26\x5e\xeb\xdc\xff\xc1\x83\xbf\xc6\x86\x1b\xeb\x53\x3c\xb6\x3d\x2a\xcd\x85\x4d\xfe\xe1\x85\x09\x38\x9d\x88\x03\xb0\xcf\x85\xd7\x90\xad\xbe\x7c\x2e\x64\x69\x0a\x1e\x5a\xc8\x87\xd1\x4f\xf6\x16\x93\x78\xe1\x4d\x9e\xd5\x61\x58\xbc\x53\xcc\x9e\x96\xe1\xf5\x3e\x4e\x89\xdf\xe0\xb4\x83\xb3\x49\xc2\x59\xba\x24\xe0\x1f\x8d\xb6\xd7\xe2\xd5\x76\x92\xf8\x2f\xc3\x78\x06\xa3\x30\xa0\x3c\x62\xf4\x48\x8f\xf4\x20\xcf\x21\xa2\xd3\x9d\xa0\xd1\xe4\x3e\xe2\xf5\x22\xa9\xf0\xd8\x37\xf9\x41\xf7\x78\xff\xa3\x31\x8c\xdf\x01\x00\x00\xff\xff\x9a\x9f\xf1\x9f\x59\x02\x00\x00")

func TemplatesServer_python_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_python_mainTmpl,
		"../templates/server_python_main.tmpl",
	)
}

func TemplatesServer_python_mainTmpl() (*asset, error) {
	bytes, err := TemplatesServer_python_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_python_main.tmpl", size: 601, mode: os.FileMode(420), modTime: time.Unix(1462867148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_resources_apiTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xdb\x30\x0c\x3d\xc7\xbf\x82\x13\x82\xc1\x5e\x5b\xb5\x87\x9d\x5a\xf4\xb0\x8f\x16\x2b\xb0\x15\xd9\x06\x74\x87\x61\x68\x94\x98\x5e\xbc\x38\x92\x23\xcb\x09\x02\xc3\xff\x7d\xa4\x24\xcf\x4d\xd7\x5c\x4c\x89\xe4\x7b\x8f\x4f\x52\xba\xee\x0c\x72\x2c\x4a\x8d\x20\x2c\x36\xa6\xb5\x4b\x7c\x54\x75\xf9\xe8\x70\x53\x57\xca\xa1\x80\xb3\xbe\x4f\x6a\xb5\x5c\xab\xdf\x08\x5d\x27\x67\x21\xbc\x57\x1b\xa4\x44\x52\x6e\x6a\x63\x1d\xa4\x09\xd0\xaf\xeb\xc0\x2a\x4d\x75\xd3\xf5\x29\x4c\x77\x70\x79\x0d\xf2\xdd\xec\xee\x73\xb9\xb8\xf3\x65\x33\xe5\x56\x8d\x07\x84\xf8\x13\x5d\x37\xdd\xf5\xbd\x18\xda\x51\xe7\x3e\x9f\x25\x94\x20\x1d\x4c\xe3\x61\x22\xdf\xf9\x39\x6b\x08\x0b\x42\x86\xb2\x01\xff\x21\xb1\xb8\x41\xed\x94\x2b\x8d\x06\x53\x70\xd5\x8d\xce\x6b\x53\x6a\xd7\xf7\x60\x8d\x71\x8c\xed\xd7\x89\x3b\xd4\x78\x0c\xd3\x38\xdb\x2e\x1d\x74\x09\x4d\x94\xbc\x34\xc5\x17\x74\x2b\x93\x37\x30\x48\x98\xee\xe2\x56\xc0\x60\x1d\x6e\x85\xb0\x52\x3a\xaf\xd0\x42\x61\x6c\x28\x7a\x40\xbb\xa0\xb4\x8f\x47\x3d\x09\xdb\x3e\x70\x14\x4c\x52\x30\x0b\xd5\xdc\xb6\x7a\xf9\xc1\x6c\x78\x94\x66\xe4\x2a\xfa\xbe\xeb\x48\x3e\xed\x14\x54\x90\x92\x31\x30\xfa\xe3\x47\xc8\xfe\x17\x95\xee\x61\xe5\x5c\x2d\xbf\x61\x53\x1b\xdd\xe0\x0f\x5b\x3a\xb4\xa7\x60\xe1\x4d\xdc\xdf\xb6\xd8\x38\xea\x4c\x26\x4f\x05\x6d\x59\xd0\x36\x0a\xfa\xda\xa2\x3d\xcc\x94\x25\x44\x6a\x1e\x0f\x2f\x28\x5b\x6f\x69\x38\x2a\xb4\xb8\x95\xb7\xc6\x6e\x1e\x54\xd5\x62\x2a\x62\x46\x64\x01\x98\x0f\x95\xda\x7c\x5c\x16\xc0\xc4\xef\x4d\x7e\xf0\x58\x93\x9d\xb2\xdc\xee\x37\xe8\x4c\x62\x8e\xaf\x56\xa4\xc9\x71\x69\x72\xe4\x1a\x56\x9b\x4c\x08\x01\xad\x65\xd6\x3f\x8d\xd1\xf2\x1e\xf7\x1f\x7d\x85\x4d\xad\xe4\xd6\x4c\x86\x75\xfa\x3a\xc2\x66\x57\xbe\xe1\xd5\x35\xe8\xb2\xe2\x61\x27\x7b\xe9\xbd\xf8\x84\x8a\xdb\xde\x5e\x5c\x90\xd0\x89\x45\xd7\x5a\x9d\x4c\x46\xe6\x9d\xaa\xca\x9c\xde\xc0\x3f\x6e\xde\x1f\xe9\x23\xbc\x7c\x88\x65\xe9\x73\xa2\xe1\x92\xbf\x40\xf7\x2c\x95\xfe\xfc\xb5\x38\xd0\x67\xde\x09\x42\x30\x56\x5c\x8a\xf9\x09\x45\xf2\x86\x57\x69\x76\x32\x17\xfd\x3c\x1b\xdb\xa2\x56\x0e\xfb\x23\x8f\x9f\x9a\xdc\xd4\xde\xd4\xd1\xe4\xb8\xe1\x5d\x0e\x31\xe7\x06\x17\x6f\x74\x70\x71\x9f\xc9\x10\xb2\x81\xa1\x2c\xbb\x3a\x3e\x48\xf2\x86\xae\x61\xb8\xa6\xb0\xc0\xca\xec\xa1\xe2\xbf\x10\x67\x40\xe5\x39\xac\xfc\xa0\xbe\x6c\x2f\xe3\xd4\x99\xfc\x8e\x2e\x15\x6b\x3c\x88\x53\xb1\xe3\x6b\x42\xb7\x23\x3c\x84\xe1\xcd\x1f\x2d\xfe\x06\x00\x00\xff\xff\xa7\x39\xf1\xd8\x99\x04\x00\x00")

func TemplatesServer_resources_apiTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_resources_apiTmpl,
		"../templates/server_resources_api.tmpl",
	)
}

func TemplatesServer_resources_apiTmpl() (*asset, error) {
	bytes, err := TemplatesServer_resources_apiTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_resources_api.tmpl", size: 1177, mode: os.FileMode(420), modTime: time.Unix(1463718157, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesServer_resources_interfaceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\x3c\x8b\x5f\xb1\x10\x72\x90\x02\x5b\xb9\x17\xe8\xa9\x0f\x34\x87\x06\x41\x10\xb4\xc7\x80\x96\x56\x16\x11\x89\x54\xc9\x95\x9d\x80\xe0\xbf\x77\x49\xc9\x8e\xd3\x38\x6d\x79\xf1\x92\x1c\xce\xce\xce\x58\xde\xaf\xa1\xc1\x56\x69\x84\xdc\xa2\x33\x93\xad\xf1\x41\xb5\x0f\x84\xc3\xd8\x4b\xc2\x1c\xd6\x21\x88\x51\xd6\x8f\x72\x8b\xe0\x7d\x75\x3b\x97\x37\x72\x40\xbe\x10\x57\x57\xf7\x9d\x72\xd0\xaa\x1e\x81\x7f\xe5\x44\x66\xbd\x45\x8d\x96\xdf\x36\xb0\x79\x86\xad\x59\x5b\x39\xf4\x0c\xfc\x6c\x40\x1b\x02\x6c\x14\x01\x1d\x1f\x31\xa4\x93\xba\x01\xa7\x74\xcd\x14\x04\x7b\xd5\xf7\xb0\x41\x30\x3b\xb4\x7b\xab\x88\x50\x43\x33\x59\xa5\xb7\xfc\x0a\x41\xe3\x13\xc1\xd2\x41\x19\x2d\x84\x1a\x46\x63\x09\x0a\x01\xbc\xbc\x07\x2b\x35\x2b\xbd\x78\x5c\xc1\xc5\x0e\x3e\x7c\x84\xea\x5a\x13\xda\x56\xd6\x78\x9d\x90\xb7\x92\x3a\x97\xa6\x82\x65\xe5\xde\x5f\xec\x42\xc8\x0f\x0c\xc8\x72\xe2\x7d\x19\xc7\x8b\x33\xcf\xc3\x1e\x79\xe2\xa0\xea\xb8\x69\x8d\x8d\x98\x2f\xba\x19\x0d\x9f\x86\x00\xd6\xc4\x31\x97\xbd\xa0\xe7\x11\xcf\x92\x1c\x2a\x7f\x14\x12\xc3\x78\x23\xff\x3b\x52\x67\x9a\xd7\x8a\x93\x2c\x06\x2c\x97\x33\x75\x94\x15\x1d\x8a\x76\xf6\x68\x17\x61\x0c\xfa\x81\x76\xc3\xd7\xa9\x7e\x91\x29\x32\x80\xec\xb4\x63\x1b\x5b\xb6\xb1\x27\xe3\xbe\x4e\xba\xfe\x64\x86\x01\x35\xb9\x05\x9b\x9a\x32\x22\x04\xef\x79\xba\x78\x9a\x25\xce\x53\x11\x45\x47\x34\x56\x77\xe8\x46\xa3\x1d\xfe\xe4\xfc\xd0\xae\xe0\x72\x39\xfd\x35\xa1\xa3\x52\x64\x8b\xc9\x4c\x11\xde\xf1\xf8\xce\x4c\x84\x2e\x8e\x64\xb9\x8a\xe1\xff\xcb\xe7\x96\x15\xbf\x4b\x54\x58\xb8\x1c\xa6\xa7\x2a\xed\x58\x90\x3a\x83\x2c\x39\x00\x91\xfd\x35\x83\x93\x08\x22\x4e\xb5\x29\x03\xd5\xb0\xdf\x7b\xc9\x9f\xcf\x29\xc0\x56\xdf\x52\x10\x45\xfe\x87\xf1\xf9\x0a\x64\xaf\x6a\xac\x6e\x70\x5f\xcc\x06\xbe\x30\x84\x50\x56\xf7\x1d\xea\xd9\xc7\x99\xc1\xc6\x30\x0a\x55\xbd\x31\xbb\x2c\xcb\x83\xb4\xa5\xcb\x1c\x75\x5e\xbe\x92\x89\xbd\x43\x48\x71\x1d\x34\x25\xc2\x33\xba\xce\xf5\xf8\xaf\x0e\x73\x98\xd9\x49\x1d\xc4\x61\x13\xff\xb8\xbf\x03\x00\x00\xff\xff\xd6\x21\x2f\x89\x67\x04\x00\x00")

func TemplatesServer_resources_interfaceTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesServer_resources_interfaceTmpl,
		"../templates/server_resources_interface.tmpl",
	)
}

func TemplatesServer_resources_interfaceTmpl() (*asset, error) {
	bytes, err := TemplatesServer_resources_interfaceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/server_resources_interface.tmpl", size: 1127, mode: os.FileMode(420), modTime: time.Unix(1463718157, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesStructTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x5f\x4f\xdb\x3e\x14\x7d\x6e\x3f\xc5\xfd\x45\x7d\x68\x10\x4d\xdf\x11\xe5\xe1\x37\x36\xa9\xd2\x06\x3c\xb0\xbd\x20\x04\x5e\x7a\x03\x5e\x1d\xa7\xd8\x4e\x34\x14\xe5\xbb\xef\xfa\x4f\x5a\x37\xe9\x36\x2d\x42\x10\xfb\xfe\xf1\x39\xe7\x9e\x98\xb6\xdd\x60\xc1\x25\x42\xa2\x8d\xaa\x73\xf3\x64\xb0\xdc\x09\x66\x30\xe9\xba\xe9\x8e\xe5\x5b\xf6\x82\xd0\xb6\xd9\x9d\x7f\xbd\x61\x25\x52\x60\xca\xcb\x5d\xa5\x0c\xcc\xa7\x40\x4f\xdb\x82\x62\x92\xf2\x66\xdb\x73\x98\x35\x70\xb1\x82\x6c\xed\x12\xee\x98\x79\xd5\xb0\xa0\x0a\x08\x4f\x42\xc9\xb3\x2d\x74\x5d\xd2\x97\xa2\xdc\xb8\x8c\x74\x3a\x3d\x34\xf2\x4d\xae\x51\xe7\x8a\xef\x0c\xaf\x24\x55\x4c\x97\x4b\xca\x9f\x35\x5d\x47\x7f\xa8\x8a\x76\xa8\x80\x17\x90\xdd\x4a\xfc\x4c\x1c\xae\xb1\x70\x9d\x68\x37\xde\x72\x3b\x0b\x40\xa1\xd1\x85\xcd\xfb\xce\x52\x82\xcc\x92\xa1\x28\x78\xe6\xd0\x0e\xc9\xe0\xbb\xa5\xc3\x44\x8d\x0e\xcd\x27\x8e\x62\xa3\x21\x22\x63\xd1\xd8\x70\xe6\x65\xb1\x1b\x04\x07\xdf\x42\x55\xb6\xd6\x1f\x2a\xd2\x41\x73\xc7\xa0\x60\x84\xc0\x81\x0f\xe1\x7b\x02\x42\xeb\xe7\x1f\xba\x92\x17\x24\x8c\x3d\xb1\xeb\x46\x3d\x6e\x4b\x6e\x0c\x6e\x80\x50\x52\xfa\x79\x45\x4b\x9a\x91\x79\x0f\x22\x24\xae\x20\x64\x7f\x63\x82\x6f\x98\xa9\x94\xa6\xc6\x8d\x5f\xa0\xeb\x3d\x8e\x27\xa1\xc1\xf3\x5e\x4e\xcf\x69\x01\x7e\x15\x64\x73\xef\xbd\xd2\x37\x95\xf9\x9f\x29\x5c\x4b\x83\xaa\x60\xb9\xf5\x42\x51\xcb\x1c\xe6\xda\x9a\xc4\xcb\x90\x42\x38\x05\xe7\x29\xa0\x52\x95\xda\x4b\xbb\x3c\x83\xc2\xaa\x08\x02\x1b\x14\x3d\x40\x2b\xce\xd9\x72\x7f\xfe\xd8\x4c\xc7\xca\x7b\x28\xb3\x26\xfb\x2a\xf9\x5b\x8d\x6b\x52\x63\x1f\x2b\x2d\xd3\x7e\x1c\x54\x5a\xb2\xdd\x03\xef\xc1\xb6\xdd\xa3\x1f\x75\xdb\xb5\x3e\xbd\x20\x6c\x4f\xe7\xe0\x4e\xf1\xa7\xea\x2c\xee\xd0\xee\x47\x1d\x37\x7e\x68\x1e\x61\x05\x83\x56\xfe\x37\x01\x13\x28\xe7\x71\x76\x0a\xff\xad\xdc\xe6\x51\xeb\x34\xea\xad\xd0\xd4\x8a\xfc\x51\x9a\xec\xa3\x95\xab\x98\x27\x31\x88\xb2\xd6\x06\xbe\x23\xd4\x8e\x6e\x92\x46\xc7\xf9\xcf\xa7\x8b\x17\x07\x95\x48\xec\xb3\xe8\x01\xe7\xfb\xb1\xf0\x21\x1a\x0d\xc0\x0e\xfa\x3e\xfb\xc2\xa5\x97\xb6\xff\x7c\x03\x37\x9d\xc2\xa5\x1d\xf6\x21\xe3\x48\xa8\x13\x64\xa8\x0a\xf4\x6b\x55\xd3\xdc\x89\xc6\xd5\x0a\x86\xe5\x03\x4e\x8b\x23\x52\x01\x0d\xfb\xf9\x3b\x34\x57\xa1\x5d\xc8\xf8\x37\x34\x97\xab\x61\xf5\x1f\xc1\x80\x47\x33\x70\xde\x84\x6e\xa6\x92\x6d\xc9\x3d\xb5\x42\xe0\x06\xb8\x0e\xd3\xf2\xa6\xfc\x8b\x13\x27\x27\x6c\x48\x1c\x26\x93\x72\xe4\xb4\x09\xfd\xf4\x1e\x3b\x18\x2b\x75\xd9\x27\xb8\xe6\x95\x10\x98\xbb\x39\x13\x24\x59\x99\x83\x89\x26\x47\x04\x8f\x5c\x93\x33\x21\xe0\xa5\x5a\x34\xfd\x65\xd1\x5f\x1b\x68\xe9\xdb\x2e\xd1\xed\x3a\xf0\xcd\xe0\x2a\x8e\x66\x20\xb9\xd8\xdb\xb4\xbf\x8a\xa3\xf0\xf8\x30\xe2\x35\xfc\x1f\xe1\xee\xf6\x00\xb7\xbf\xb4\x7e\x05\x00\x00\xff\xff\xc3\xc1\x18\x45\xc2\x06\x00\x00")

func TemplatesStructTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesStructTmpl,
		"../templates/struct.tmpl",
	)
}

func TemplatesStructTmpl() (*asset, error) {
	bytes, err := TemplatesStructTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/struct.tmpl", size: 1730, mode: os.FileMode(420), modTime: time.Unix(1463373932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _TemplatesStruct_input_validatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xc1\x8a\xe3\x30\x0c\x86\xcf\xf1\x53\x68\x03\x65\x63\x28\xe9\x2e\x94\x1e\x0a\x3d\xee\xde\x76\x67\xde\xa0\x78\x1c\xb9\x35\x93\x38\xc1\x91\x3d\x0c\x26\xef\x3e\x72\x92\x76\x4a\x2f\x6d\x90\xf4\xff\xfa\x3f\x39\xa5\x06\x8d\x75\x08\xe5\x48\x3e\x68\x3a\x5b\x37\x04\x3a\x47\xd5\xda\x46\x51\xef\xcf\x84\xdd\xd0\x2a\xc2\x72\x9a\xc4\xa0\xf4\xbb\xba\x20\xa4\x54\xbf\x2e\x9f\xff\x55\x87\xdc\x10\xb6\x1b\x7a\x4f\x50\x89\xa2\x34\x1d\x95\xfc\xc7\x76\xba\x77\xb1\x14\x52\x08\x13\x9c\x86\x7f\xa1\x25\x3b\xb4\xf8\x62\x2a\x17\x3a\xb0\x8e\xd0\x1b\xa5\x31\x4d\x5b\xe0\x75\x01\x81\x25\xd6\x5d\x24\xa0\xf7\xbd\x87\x24\x8a\xa8\x3c\xf0\xec\xdf\xb6\x57\x04\x26\xff\x1e\xf6\x42\x14\xe3\x87\x25\x7d\x85\x08\xc7\x53\x6e\xd7\x15\x7d\x0e\x28\xb3\x40\xab\x11\xb3\xf3\x51\x14\xc5\x5d\x78\xba\x49\xab\x28\xd7\x91\xb5\xf0\x34\x16\x45\xc1\xc7\x50\x9c\x33\x37\x3c\x52\xf0\x0e\x18\xa7\xfe\x93\x03\x99\xaa\xdc\x44\xd0\xca\xfd\x24\x78\x43\x08\x23\x36\xc0\x41\xae\xd0\xdd\xc1\x4a\x26\xe1\x15\x7c\x8f\x62\x26\x9a\x8d\xb7\x99\x27\x47\x5d\x2f\xc2\xa7\xf3\xe3\xd2\xaa\xe6\xa9\x2d\x1c\xf6\xac\xb2\x66\x1e\xfc\xc1\x4c\xb6\xcd\x30\xb7\x04\x5c\x5d\x3c\x3d\x8e\x2b\xf2\x92\x78\x07\xdf\x5b\x66\x7d\x95\x27\x76\x77\x5c\x3e\x44\xae\x48\x29\xb3\xeb\xef\xfa\xd7\xa3\xeb\x13\x97\x1d\xc1\xf5\xf4\xc0\x02\x9b\xc8\x38\xbc\x6b\x7d\x1d\x79\xcb\x30\xab\x39\xa2\x98\x44\x4a\xe8\x1a\x7e\xfe\xaf\x00\x00\x00\xff\xff\x16\xec\x5e\x2d\x45\x02\x00\x00")

func TemplatesStruct_input_validatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_TemplatesStruct_input_validatorTmpl,
		"../templates/struct_input_validator.tmpl",
	)
}

func TemplatesStruct_input_validatorTmpl() (*asset, error) {
	bytes, err := TemplatesStruct_input_validatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../templates/struct_input_validator.tmpl", size: 581, mode: os.FileMode(420), modTime: time.Unix(1463372452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../templates/class_python.tmpl": TemplatesClass_pythonTmpl,
	"../templates/client_helper_resource.tmpl": TemplatesClient_helper_resourceTmpl,
	"../templates/client_resource.tmpl": TemplatesClient_resourceTmpl,
	"../templates/date.tmpl": TemplatesDateTmpl,
	"../templates/generic_main.tmpl": TemplatesGeneric_mainTmpl,
	"../templates/input_validators_python.tmpl": TemplatesInput_validators_pythonTmpl,
	"../templates/oauth2_middleware.tmpl": TemplatesOauth2_middlewareTmpl,
	"../templates/oauth2_middleware_python.tmpl": TemplatesOauth2_middleware_pythonTmpl,
	"../templates/python_client.tmpl": TemplatesPython_clientTmpl,
	"../templates/python_client_utils.tmpl": TemplatesPython_client_utilsTmpl,
	"../templates/python_server_resource.tmpl": TemplatesPython_server_resourceTmpl,
	"../templates/server_main.tmpl": TemplatesServer_mainTmpl,
	"../templates/server_python_main.tmpl": TemplatesServer_python_mainTmpl,
	"../templates/server_resources_api.tmpl": TemplatesServer_resources_apiTmpl,
	"../templates/server_resources_interface.tmpl": TemplatesServer_resources_interfaceTmpl,
	"../templates/struct.tmpl": TemplatesStructTmpl,
	"../templates/struct_input_validator.tmpl": TemplatesStruct_input_validatorTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"class_python.tmpl": &bintree{TemplatesClass_pythonTmpl, map[string]*bintree{}},
			"client_helper_resource.tmpl": &bintree{TemplatesClient_helper_resourceTmpl, map[string]*bintree{}},
			"client_resource.tmpl": &bintree{TemplatesClient_resourceTmpl, map[string]*bintree{}},
			"date.tmpl": &bintree{TemplatesDateTmpl, map[string]*bintree{}},
			"generic_main.tmpl": &bintree{TemplatesGeneric_mainTmpl, map[string]*bintree{}},
			"input_validators_python.tmpl": &bintree{TemplatesInput_validators_pythonTmpl, map[string]*bintree{}},
			"oauth2_middleware.tmpl": &bintree{TemplatesOauth2_middlewareTmpl, map[string]*bintree{}},
			"oauth2_middleware_python.tmpl": &bintree{TemplatesOauth2_middleware_pythonTmpl, map[string]*bintree{}},
			"python_client.tmpl": &bintree{TemplatesPython_clientTmpl, map[string]*bintree{}},
			"python_client_utils.tmpl": &bintree{TemplatesPython_client_utilsTmpl, map[string]*bintree{}},
			"python_server_resource.tmpl": &bintree{TemplatesPython_server_resourceTmpl, map[string]*bintree{}},
			"server_main.tmpl": &bintree{TemplatesServer_mainTmpl, map[string]*bintree{}},
			"server_python_main.tmpl": &bintree{TemplatesServer_python_mainTmpl, map[string]*bintree{}},
			"server_resources_api.tmpl": &bintree{TemplatesServer_resources_apiTmpl, map[string]*bintree{}},
			"server_resources_interface.tmpl": &bintree{TemplatesServer_resources_interfaceTmpl, map[string]*bintree{}},
			"struct.tmpl": &bintree{TemplatesStructTmpl, map[string]*bintree{}},
			"struct_input_validator.tmpl": &bintree{TemplatesStruct_input_validatorTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

