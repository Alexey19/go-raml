package theclient

import (
	"encoding/json"
	"net/http"

	"examples.com/theclient/libraries/file_type"
)

type ConfigsService service

// get config files
func (s *ConfigsService) ConfigsGet(headers, queryParams map[string]interface{}) (file_type.File, *http.Response, error) {
	var u file_type.File

	resp, err := s.client.doReqNoBody("GET", s.client.BaseURI+"/configs", headers, queryParams)
	if err != nil {
		return u, nil, err
	}
	defer resp.Body.Close()

	return u, resp, json.NewDecoder(resp.Body).Decode(&u)
}

func (s *ConfigsService) ConfigsPost(headers, queryParams map[string]interface{}) (Place, *http.Response, error) {
	var u Place

	resp, err := s.client.doReqWithBody("POST", s.client.BaseURI+"/configs", nil, headers, queryParams)
	if err != nil {
		return u, nil, err
	}
	defer resp.Body.Close()

	return u, resp, json.NewDecoder(resp.Body).Decode(&u)
}

func (s *ConfigsService) ConfigsPut(headers, queryParams map[string]interface{}) (*http.Response, error) {

	resp, err := s.client.doReqWithBody("PUT", s.client.BaseURI+"/configs", nil, headers, queryParams)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	return resp, nil
}
