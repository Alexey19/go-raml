// Code generated by go-bindata.
// sources:
// codegen/templates/bindata.go
// codegen/templates/class_python.tmpl
// codegen/templates/client_go.tmpl
// codegen/templates/client_python.tmpl
// codegen/templates/client_utils_go.tmpl
// codegen/templates/client_utils_python.tmpl
// codegen/templates/date.tmpl
// codegen/templates/generic_main.tmpl
// codegen/templates/index.html.tmpl
// codegen/templates/init_py.tmpl
// codegen/templates/input_validators_python.tmpl
// codegen/templates/oauth2_middleware.tmpl
// codegen/templates/oauth2_middleware_python.tmpl
// codegen/templates/python_server_resource.tmpl
// codegen/templates/requirements_python.tmpl
// codegen/templates/server_main_go.tmpl
// codegen/templates/server_main_python.tmpl
// codegen/templates/server_resources_api.tmpl
// codegen/templates/server_resources_interface.tmpl
// codegen/templates/struct.tmpl
// codegen/templates/struct_input_validator.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesBindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesBindataGo,
		"templates/bindata.go",
	)
}

func templatesBindataGo() (*asset, error) {
	bytes, err := templatesBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/bindata.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClass_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7e\x8a\x25\xe4\xd0\x82\x93\x07\x08\xe4\x52\x8a\x21\x10\x72\x30\x86\x1e\x8d\x5a\xaf\x1d\x11\xfd\x55\x92\xdd\x18\xe1\x77\xef\x4a\xfe\x81\x52\x5f\x34\x5a\x7d\x9a\x19\x2b\x84\x06\x5b\xae\x10\x76\x5f\x82\x39\x57\x9b\xd1\xdf\xb5\xda\x4d\x53\xd6\x5a\x2d\xa1\xa5\xe1\xa3\xfe\xf1\x2d\x70\x69\xb4\xf5\x50\x68\x2b\xe7\x23\x1a\x92\x76\xc7\x81\x09\xde\x30\xaf\xad\x5b\x99\x77\xe6\x59\x89\xdf\x3d\xb7\xd8\xe4\x70\x45\xd5\xf9\x7b\x0e\x25\x76\xf8\x34\x39\xdc\x7a\xf9\x89\xb6\x64\xaa\xc3\x1c\xec\x82\xfd\xb1\x5c\x7d\x2a\x7c\xfa\x82\xa3\x20\x93\x18\xbb\xc8\x8b\xf2\xe4\x64\xd7\x03\xa1\xd9\x06\x71\x81\x8b\x7c\xd3\x5a\x20\x53\xcb\x8e\x0a\xe1\xc6\xd0\x72\xe5\xce\xcf\x89\x5c\x99\xde\xd7\xff\x7f\x41\xf6\xc2\x73\x23\xb0\xd6\x6d\x96\x85\x60\x63\x5b\xd8\x3f\x72\xd8\x0f\x70\x3a\xc3\xf1\x92\x30\x07\x07\x7a\xa8\x10\xf6\x43\x5a\x00\x55\x43\x22\x4b\x2f\x09\x21\x1c\x6f\x4c\xe2\x34\xbd\xc4\xf2\xaf\xa7\x0c\xe8\x23\x68\xf5\xc2\x31\xba\x31\x91\xfc\x52\x2d\x47\x97\x67\x28\xce\x97\xdb\x70\x5e\xf7\x1f\x55\x51\x8d\x06\x37\xe8\x10\xf3\x20\x25\xcf\xc1\xbf\x01\x00\x00\xff\xff\xef\xd0\x1b\xa6\xcc\x01\x00\x00")

func templatesClass_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClass_pythonTmpl,
		"templates/class_python.tmpl",
	)
}

func templatesClass_pythonTmpl() (*asset, error) {
	bytes, err := templatesClass_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/class_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\x4d\x6f\xdb\x46\x10\x3d\x93\xbf\x62\x4a\xa8\x06\x99\xd2\xd4\xdd\x80\x0f\x4d\xac\xb6\x01\xd4\xc0\x95\x9d\xf6\x58\xac\x96\x43\x8b\xb1\xc4\xa5\x96\x4b\x09\x2a\xcb\xff\xde\x99\x5d\x7e\x49\x4e\x02\x34\x45\xd0\x4b\x7c\xe2\xce\xce\xc7\x7b\xf3\x66\xd6\x6a\x9a\x6b\x48\x31\xcb\x0b\x84\x40\x6e\x73\x2c\xcc\x9f\x4f\x2a\x80\xeb\xb6\xf5\x4b\x21\x9f\xc5\x13\x42\xd3\x24\xf7\xee\xf3\x9d\xd8\x21\x5d\xf8\xf9\xae\x54\xda\x40\xe8\x7b\x41\x81\x66\xbe\x31\xa6\x0c\xe8\x1b\x0b\xa9\xd2\xbc\x78\x9a\x7f\xa8\x54\xc1\x86\x6c\x67\x02\xdf\x07\xfa\x6b\x1a\xd0\xa2\xa0\x64\xb3\xe7\x18\x66\x07\xb8\xb9\x85\x64\x99\xaf\xdf\xda\x44\xf7\xc2\x6c\x2a\x5b\x92\x5d\x83\xa6\x99\x3d\xb7\x6d\xd0\xc5\x61\x91\xda\xab\xc8\xf7\xa5\x2a\x2a\x5b\x95\x00\x8b\x7a\x6b\x5e\x8b\x0a\xdf\xaf\xde\xc2\x2d\xc7\x24\xdd\x89\x23\xc9\x97\x92\x88\x32\x67\xc0\xb6\x56\x87\xdc\x9c\x4a\xcb\xc7\x1d\xa1\x32\xba\x96\x06\x1a\xdf\x73\xd4\x81\x99\x24\x6f\xec\xb7\x2d\xff\x63\x6d\x36\xbf\xa0\x48\x51\xb3\x2f\x51\x83\xf9\xdc\x1a\x95\xce\xff\x12\x26\x57\x05\x6c\xec\x75\x0c\xc7\x7c\xbb\x85\x35\x42\xc5\x79\xc8\x8e\x42\x6e\x40\xe3\xbe\x46\xc2\x9c\x67\x50\x28\x03\xb8\x2b\xcd\xc9\x26\xee\xa1\xbb\xac\x3e\xf5\x34\xab\x0b\x09\xef\xf0\x38\xa0\x0b\x23\x78\x35\x42\x6d\x6c\x98\x64\x32\x57\x83\xd5\x19\x27\xf9\x6e\xe0\xbc\x35\xf1\xe0\xe0\x08\xde\x4c\x19\x36\xad\xbb\x6e\x7d\x4f\xa3\xa9\x75\x01\x92\x81\x7c\x4c\xaa\x5f\x91\x28\xa7\x15\x50\x0b\x27\xd7\x19\xdf\x67\xec\x30\x3b\x24\x3f\x11\xfe\x37\x6a\xb7\xa3\xc4\xd6\x8f\x1a\x45\x1a\x1c\x32\xc6\xce\x22\x92\x89\x29\x86\x92\x59\xf5\xda\xb4\x6d\x64\xbd\xba\x02\x1d\x71\x6b\xb9\x17\x5a\xec\x2a\x72\x70\xc7\x15\x56\xe5\x6b\x95\x9e\x6c\x3a\x6e\x27\xc2\xc4\x0a\x41\x40\x35\xe3\xbe\xd2\x2b\xcb\x92\x2f\x69\x62\x30\x46\xad\x95\x8e\x58\x66\x9e\x76\x0a\xc6\x3d\x07\xff\x8e\x7a\x0d\xc1\xcf\x8b\x47\x8e\xf5\x3d\xef\x93\x79\xe1\x20\x34\xd4\xf0\x12\x87\xa3\x45\xa1\x44\x56\x6a\x14\x06\x07\xc5\xd5\xfa\x03\x4a\x43\x57\x64\x88\x81\x10\x70\x9b\x2c\x2c\xd2\x78\xe5\x9c\x42\x5b\x3c\x06\xd9\xcf\xee\x05\x35\x55\x6b\x89\xbc\x1c\x1d\x8c\x1f\xfa\x92\x03\x94\xc1\x83\xc9\x17\xf9\x36\xa2\x82\xcc\x8f\xca\x7d\x77\xcb\x06\x26\xfd\x39\x66\x9d\xf0\xb5\x8d\xb6\x38\x9d\x3f\x6e\x2b\x1c\xaf\xcf\xef\xae\xa1\xdf\x49\xcf\x6b\x87\x01\x23\x9e\xc9\xfb\xd5\x32\x59\x89\xe3\x6f\x35\xea\x13\x6d\xe5\xba\xce\xb7\xa9\x3d\x3c\xd8\x31\x0f\x6d\x2f\xf6\x6c\x70\xea\x46\xfe\x10\x4e\x00\x65\x32\x59\x37\x82\x4f\x08\xc7\x01\xef\x4b\xb8\xeb\xe4\x01\xa9\x7b\x67\x8b\x68\xfb\x38\x26\x88\x86\x48\x2b\x50\xa6\x34\xd0\x38\xdb\x69\x76\xe3\xeb\xf6\xb6\x9a\x96\xb8\xc8\x4f\xfe\xf4\x80\x25\x0f\x25\x61\x37\x59\x18\x7c\x7f\xa0\x1a\x87\xe8\x22\xf3\x7c\x9e\x2a\x30\x9b\x41\x79\x2b\x79\x55\x0e\x9a\xcb\xc4\xad\x5e\x72\xa7\x98\xff\xff\xa0\x90\xc7\xef\x25\xb5\x94\x61\x25\x9c\x99\xf6\x5f\x55\x18\x46\xfe\xe7\x86\x9e\x33\x8d\xb5\x1d\x25\x7e\xd7\x79\x7e\xef\x90\x1e\x7a\xd4\xe1\x90\x31\x4a\x9c\x29\xbc\xaa\x23\x7f\x44\x37\xc9\xe1\x12\x10\x4c\xff\x02\xa0\xf3\xbd\xdc\xca\xbb\xc5\x72\xf1\xb8\x08\x6c\x8a\x2f\x5d\xae\x2e\xc7\x64\xbf\xbe\xd2\x7a\xbd\xd4\xe0\x3f\xaf\xc5\x57\x98\xd8\x4f\x4f\xab\x7b\xfb\x5f\xcc\xe9\x44\xc5\x2f\x7e\x1a\x47\xa0\x67\x2b\x91\x2a\x52\xe9\x8f\xdc\x6c\xd8\x3f\x0c\x6c\x38\x0b\x4f\xff\xbc\xff\xbd\x5c\x1f\x55\xeb\x2c\x76\xdf\x01\x6e\xdb\xab\xce\xd9\x59\xfe\x86\x47\xb5\x54\x47\xd4\x9c\xc4\x91\x25\x11\xbb\xb4\x71\xdf\xf0\x0b\x6d\xbe\xed\xef\xc5\xfe\x8e\x07\xfe\x75\x30\x9e\xce\x0e\xff\x04\x00\x00\xff\xff\xbf\xf1\x4d\x57\x68\x0a\x00\x00")

func templatesClient_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_goTmpl,
		"templates/client_go.tmpl",
	)
}

func templatesClient_goTmpl() (*asset, error) {
	bytes, err := templatesClient_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x93\xdd\x8e\x9b\x30\x10\x85\xef\xfd\x14\x23\x2b\x12\x44\xcd\xf2\x00\x91\x72\x91\x5d\x6d\xa5\x95\xda\x6a\x95\x6d\x7b\x6b\xb9\x61\xd8\x58\x05\x9b\xfa\x27\xd5\xd6\xf5\xbb\x77\x0c\x84\x92\x54\xe5\x06\xdb\x73\xf8\xe6\x70\x06\x62\xbc\x83\x1a\x1b\xa5\x11\xf8\xb1\x55\xa8\xbd\xe8\xdf\xfc\xc9\x68\x0e\x77\x29\x31\xd5\xf5\xc6\x7a\xb0\xf8\x23\xa0\xf3\x8e\xb1\xfb\xfd\xcb\xa3\xf8\x72\x78\x82\x1d\xf0\x18\xab\x7b\xe9\x90\x76\x29\x71\xc6\xd8\xb1\x95\xce\xc1\xc3\x40\xd9\x32\xa0\x8b\xc8\x20\x84\xd2\xca\x0b\x51\x3a\x6c\x9b\xf5\x78\x9e\xaf\xbc\xad\x82\x6d\x89\x74\x81\x5e\xd7\x1c\x3a\xa7\x8c\xa6\xfa\xa5\x7d\xf5\x32\x1e\x95\xeb\x6b\xa5\x0c\xfe\x24\x4e\x28\x6b\xb4\xa4\x2e\x8a\xa1\x3a\x1b\x70\xe8\xc5\x42\x31\xf8\xd8\xc0\x59\xb6\x0b\x33\x45\x51\x64\x1d\x64\x9d\xb1\xea\x97\xf4\xb9\xf3\x84\x24\x69\xc0\x62\xc2\xfe\xa7\x29\x69\x58\x8c\x60\xa5\x7e\x45\x58\x7d\xdf\xc0\xea\x0c\xdb\x1d\x54\x1f\x91\x80\xb5\x03\xca\x72\x36\x14\xe3\xea\x3c\x15\x3e\xc9\x0e\x53\x2a\x87\x93\x67\x69\x65\xe7\x52\x5a\xd8\xe2\x9c\x2f\xa0\x4d\xa6\x36\x19\x4b\xea\xf7\x41\x1f\x1f\x4c\xd7\x51\xd6\x03\xfd\xf2\x48\x46\x35\x29\xc5\x88\xba\x5e\x1c\x3f\x79\x50\x0e\xba\xa1\x29\x34\xc6\x8e\x26\xbe\xa2\xfd\x96\xd2\xb8\x7e\xd4\x75\x6f\x94\xf6\x8b\x87\xa8\xfd\xbc\x56\xcd\x3f\xaf\xfd\xd7\xe7\xed\xcc\xaa\x51\xe0\xaa\xd0\xd7\xd2\x63\x19\xf9\x7e\x19\x2c\xdf\xde\xa2\xd2\x9a\xcd\xb0\x60\x15\x05\x3a\x7f\x1e\xef\x46\x7b\x07\x74\x26\xd8\x23\x3e\x4b\x7f\x5a\x58\xb4\xe8\x83\xd5\xd7\xcd\xe7\x57\x83\xdf\xf0\xd9\x7c\x30\x3f\x89\x9f\x4a\xc2\x8e\x31\x1f\xf6\xf6\x95\x62\xde\x4c\xe3\x75\xbb\xe9\xbe\x81\x7e\x98\xc0\x8e\x3e\x36\xfb\x26\xc6\xcd\x3a\x4f\x95\xa2\xcc\x11\xe7\x7f\x25\x2f\xf3\x8f\xf1\x27\x00\x00\xff\xff\xcb\xd6\xff\xa2\x38\x03\x00\x00")

func templatesClient_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_pythonTmpl,
		"templates/client_python.tmpl",
	)
}

func templatesClient_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_utils_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\x4f\x6f\xfa\x46\x10\x3d\xe3\x4f\x31\xb5\x54\x69\x4d\xfc\x33\x87\x9c\x52\x29\x87\x5f\x9b\x46\x55\xd5\xa6\x29\x24\xea\x21\x8a\x92\xc5\x1e\xc2\x36\x78\xd7\xac\xc7\xa4\x14\xf1\xdd\x3b\xb3\x36\x2e\x90\x3f\xca\xa5\x52\x39\x80\x77\x77\xfe\xbc\xf7\x76\x1e\xde\x6c\xbe\x40\x81\x33\x63\x11\xe2\x7c\x61\xd0\xd2\x43\x43\x66\x51\x3f\x3c\xb9\x18\xbe\x6c\xb7\x51\xa5\xf3\x67\xfd\x84\xb0\xd9\x64\xd7\xed\xe3\x95\x2e\x91\x0f\x22\x53\x56\xce\x13\xa8\x68\x10\x4f\xd7\x84\x75\xcc\x0f\x68\x73\x57\x18\xfb\x34\xfa\xb3\x76\x56\x36\x8c\x93\x6f\x8b\x34\x9a\x13\x55\xf2\x3c\x2b\x49\x7e\xc8\x94\x18\x47\x49\x14\xcd\x1a\x9b\x43\xc8\xc3\xef\x5d\xb1\x56\x85\x26\x0d\xc6\x12\xfa\x99\xce\x71\xb3\x4d\x40\x19\x97\x8d\x51\x17\xe8\x53\x40\xef\x9d\x4f\x60\x13\x0d\xa6\x61\x01\xdf\x9d\x83\xf4\xca\x7e\xd5\xbe\x9e\xeb\x45\x48\x4f\xa2\x81\x99\x85\xd3\x6f\xce\xc1\x9a\x85\x84\x0f\x3c\x52\xe3\xad\x2c\x43\x62\x34\xd8\x46\xbb\xbd\x00\x3f\xbb\xc2\x97\xb6\x8b\x9a\x26\xa9\xc4\x45\xdb\x0e\x9d\xca\x85\x7e\xcb\x3b\x29\xdc\x18\x97\x7f\x18\x9a\x07\xb4\x25\xd2\xdc\x15\x29\x34\x7e\x31\x21\x0f\x35\x79\x66\x9f\xc2\x31\x89\x14\xe6\xa1\x74\x9d\xc2\xb2\x41\xbf\xbe\xd6\x5e\x97\x35\x94\xba\xba\x6b\x53\xee\x0f\x19\x0f\x45\x2d\x26\x5d\x57\xce\xd6\x78\x40\x9b\xbb\xf6\xcc\x8f\x64\xfb\x2c\xef\x68\x30\x1a\x41\xee\x51\x13\x02\xcd\x11\x3c\x32\xa8\x9a\x44\x8f\x65\x5f\x3b\x20\x08\x9a\x84\xc3\x23\xa6\x29\x08\x90\xcf\x36\x04\xfe\x70\xed\xec\x76\xfc\x4b\x36\xd6\x2f\xbf\x8b\x04\x70\x0e\xd3\xc6\x2c\x8a\xb0\x98\x04\x11\x54\xe8\xbf\x27\x10\x8f\x87\xa4\x72\x8f\x3c\xfb\xda\xd0\xfc\xa7\x20\xa2\x34\x8b\x63\xee\x05\xdd\x47\x4a\xb7\x47\xd9\x04\x49\xc5\x12\xea\xbc\xf9\x5b\x93\xe1\x29\x4c\x0f\x92\x93\x90\xc5\x77\x3f\x73\x1e\x9e\x53\x58\x09\x57\xaf\x2d\x8f\x78\x77\x45\x81\xc4\xe0\xb8\x28\x87\xf2\xe4\x66\x93\x8a\x81\xd2\x4c\xc5\xdf\xae\xe2\x74\x95\x24\xad\x9c\x1d\xe5\x3c\x6b\x2d\x94\x5d\x38\xa1\x92\xf4\x03\xf4\x16\x51\xd8\xdd\x71\x90\x97\x69\xbf\x3f\x0e\xed\x5e\xcb\x77\x19\xf0\x76\x5a\x86\x92\x8a\x41\x84\xa3\xd7\x8c\x96\xf5\x9e\x4a\xcb\xec\x6b\x51\xbc\xc9\x03\x3a\x22\xad\x96\x81\xca\x32\xfb\x31\xcc\x96\x0a\x24\x46\xa3\x0b\x99\x15\x8f\x95\xc7\x9a\x09\xc2\xf8\xf2\x87\xd3\xd3\xb3\x33\x99\x73\x8c\x68\x5d\x21\x84\x00\x31\x75\x76\xc3\x5f\x92\xd2\x39\xf2\xe7\xc9\x6f\x57\xe0\x56\x3c\x09\xa6\x40\xa6\xd8\x6f\x76\xde\x22\x18\x4a\x6e\x02\x7b\xf1\x8a\x2d\x70\x77\x2f\xb6\xdc\x1f\xfd\x0e\x5a\x7b\xa0\xfa\x5e\x6a\x48\x49\x76\xe9\x7c\xa9\x49\x3d\xc6\x8f\x70\xd2\xc2\x08\x10\x4f\xcf\x78\xc9\x9b\xc9\xbf\x8e\xee\x81\xdd\xe0\x5f\xf4\x0a\x98\x6c\xbe\x03\x4c\x8e\xfe\x5b\x60\xb7\xb6\x7c\x4b\xb3\xc6\x7e\xa0\xda\x41\x8e\x9a\x76\x20\x92\x16\x9d\x80\xa3\xba\xb7\x74\x68\xcf\xce\xaa\x51\xf0\x9c\xec\xa3\x39\xe1\x8d\xb4\x1b\x34\xfe\xff\xfb\xc8\xd8\xfd\x9f\xc8\x90\xd8\xc3\x82\x42\x11\x3b\x75\xcf\xf7\x47\x6c\x0e\x85\x6e\xec\x07\x52\x1f\xe4\xfc\x8f\xd8\x1c\xc1\xec\x5c\xbc\x73\xe6\xde\x0c\x1c\x5e\xfe\x2e\x4e\x4a\xc8\x9b\x16\x6d\x11\x5e\xaa\xff\x04\x00\x00\xff\xff\x80\x1c\x03\x82\x76\x07\x00\x00")

func templatesClient_utils_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_utils_goTmpl,
		"templates/client_utils_go.tmpl",
	)
}

func templatesClient_utils_goTmpl() (*asset, error) {
	bytes, err := templatesClient_utils_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_utils_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_utils_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4b\x8f\xdb\x36\x10\xbe\xfb\x57\x0c\x1c\x18\x96\xba\x96\xa3\xb5\x83\x3c\x8c\x6c\x2f\x45\x51\xf4\xd2\x93\x73\x2a\x0a\x87\x2b\x8d\xd6\x6c\x24\x52\x20\xa9\x24\x4e\x90\xff\xde\xe1\x50\x92\x45\xaf\x93\xee\x21\x8b\x85\x4c\x73\x5e\xdf\x3c\xbe\x91\xbf\x7e\xcd\xa0\xc4\x4a\x2a\x84\x79\x51\x4b\x54\xee\xd0\x39\x59\xdb\x43\x7b\x72\x47\xad\xe6\x90\x7d\xfb\x36\x93\x4d\xab\x8d\x83\x52\x38\x74\xb2\xc1\xe1\x3b\x9f\x67\x33\x32\x87\x07\x54\x68\x48\x7c\x30\x55\xb1\xdd\x6e\xdf\x24\xe5\x0a\x6a\x5d\x88\xfa\xe0\xbe\xdc\xed\x4d\x87\xe9\x6e\x06\xf4\x37\x9f\xcf\xf9\x73\xd0\x87\x5e\x9f\x7d\x41\xa5\x4d\x23\x1c\x2b\x48\xd5\x76\x0e\x82\x51\x09\x77\x1c\x1b\xdc\xa9\x45\xbe\x19\x5c\x93\xa0\xb3\x18\xbe\x06\x17\x5f\x34\x65\x22\x2b\x70\x14\x73\xc5\xba\xda\x1d\xd1\x7c\x92\xa4\xd6\x08\xf3\x01\x84\x85\xce\x15\xb3\x20\xea\xdc\x39\xca\x80\xc4\x3a\x23\xd5\x43\x08\x18\x00\xad\x01\x3f\xc3\x0e\xde\x6f\xf2\xfc\x75\x96\xbf\xc8\xf2\xcd\x7e\x93\xef\x72\xff\x7f\x93\xbf\xa2\xe7\xfb\x28\x37\x67\x4e\xc1\x23\xe7\x51\x8d\x60\xcf\x97\xd3\xa4\x3c\xea\xf5\x78\xa8\x8c\x6e\xfc\xc1\x3a\xd1\xb4\x49\x99\x8e\x26\x58\x5b\x7c\x8a\x03\xca\xed\xaa\x0f\xfc\x5c\x60\xeb\x60\x4f\x15\xfc\xdd\x18\x6d\xce\xbe\x5a\x61\x6d\x28\x07\x61\x55\xda\x81\xb4\x52\x91\xad\x2a\xd0\x77\x31\x0a\x91\x9e\xcd\x8c\xf0\x25\x1d\xfd\x25\xcb\xbf\x74\x98\x08\x0e\x0b\xda\x84\x0a\xea\xfb\x7f\xb1\xa0\x0a\xfe\x41\xd2\x85\x59\x2f\x61\xc1\x5d\x24\x58\xe9\x53\x83\xfa\xc3\x24\xf0\xd5\xbc\x93\x5f\xca\xb5\xff\x74\x5d\x5b\x63\x92\xfe\xbd\xdb\xfe\xd3\xfb\x37\x74\x67\x14\x24\xcb\x45\xfe\xa2\xcc\x16\xf9\x26\x3c\xf6\xfe\xb1\x1b\x1f\x0b\x4b\xc8\xa2\xf2\x26\xe5\xfa\x84\xc2\x10\x96\x75\xa3\x95\x3b\xfa\x43\x29\x4e\xfe\xe3\xa8\xbb\x70\x2f\x55\xe7\xd0\x9f\x2c\x16\x5a\x95\xab\xc8\x01\x1c\x46\x52\x78\x64\x7e\x30\xa7\xac\x48\x7d\x01\x98\x3b\x07\xba\x28\xba\xda\x2b\xea\xaa\xb2\xe8\x12\x9f\xd5\x44\x33\xa6\x4e\xc4\x0c\x5f\xe2\xdd\xf7\xc8\xb1\x1b\x89\xc0\x2c\xb1\x27\xeb\xb0\x81\x01\xcc\x6a\xc2\x8c\xbe\x48\x79\x54\x32\x92\xf6\x3d\xac\xe0\xdd\xfe\x37\x08\xe0\xd6\xac\xf2\x67\x15\x44\xa5\x46\xcb\xfd\x3b\x8a\x8f\x08\x42\x9d\x46\xf7\x84\xb3\xd2\x2b\xf8\x84\x17\x0c\xe5\xd0\x17\xc4\x1c\xc3\x47\x79\x5e\x63\xce\xb3\xa3\x50\x65\x8d\xe0\x5b\x03\xf7\x48\xfc\x44\xb8\x7d\xf3\x2a\x87\x46\x5b\x47\x19\x72\x82\xe4\x96\xc2\x7b\x5c\x31\x1a\xcf\x65\xa9\xd5\xd4\x6e\x3d\x25\xaa\xcf\x88\x9b\x0e\x6f\x59\x18\xf3\xed\x19\xbc\xb3\x6c\xb4\x21\x07\x85\xe8\x6c\x1f\xd9\x97\x40\x2d\x87\x0a\x40\x8d\xa2\x25\x4f\xa7\xc8\xd6\xd1\xcc\xf2\xbc\x36\x1f\x78\x5a\x39\x92\xc1\xb6\x16\x34\xef\x3e\xe2\x9d\xf7\x9b\x9e\x47\xf8\x47\xc4\xbf\xea\x6c\x32\xfc\xfd\xe0\x07\xcc\x7d\xbd\x08\x50\x2d\x1f\x8e\xce\x8a\x8f\xb4\xdc\x56\x21\xdb\xe9\x15\x77\x49\xd4\xee\x72\x32\xfc\xf5\x50\xc4\x69\xad\x18\x00\xf7\x87\x31\x38\xc2\xde\x1c\xa4\x2d\xad\x8b\xc1\xf6\xad\xcd\x58\xbf\xf7\xff\x83\xdc\x22\xf5\x28\x6e\xac\x7b\x1e\xd8\x40\xa1\x2b\x54\xfb\x59\x1c\xba\xd7\xba\xee\x5f\x17\x4c\x80\xf1\xdd\x55\x82\xdf\xb4\x8f\xe9\x3b\xd5\x95\x0a\xc2\x6e\xb0\xd3\xdb\x3b\xc8\x21\xfb\x15\x6e\xf8\x15\x12\x0b\x6e\x5f\xe7\xa3\x6c\x7b\x21\xcb\xb6\x2f\x83\x30\xcb\x6f\x07\xc3\x21\xa3\x51\xe9\x7f\xb7\x49\xc8\xc5\xef\x30\xd2\x16\xf7\x36\x09\x6a\x29\x3c\x7f\x0e\x3e\x00\x8b\xc3\x6a\xbb\x50\x58\xb0\xdc\xeb\xbd\xcc\xc7\xe5\xdd\x07\x7e\x0b\xf9\xa3\xee\x2c\x17\xc5\xb8\x60\xfd\xe2\x4f\xe6\xd9\x7c\x05\x61\x7b\x86\x00\xe9\xf7\x5b\xfb\xd8\xf8\xe6\x91\xb1\xff\xf1\x82\xaa\xe4\xdf\x28\xff\x05\x00\x00\xff\xff\xeb\x57\xd3\xe7\xc9\x08\x00\x00")

func templatesClient_utils_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_utils_pythonTmpl,
		"templates/client_utils_python.tmpl",
	)
}

func templatesClient_utils_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_utils_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_utils_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xa8\xae\xd6\x0b\x80\x30\xfd\x12\x73\x53\x81\x12\x5c\x40\x11\xe7\xfc\xbc\x92\xd4\xbc\x12\x08\x2f\x35\x2f\x05\xc8\x00\x04\x00\x00\xff\xff\x38\x57\x68\x75\x42\x00\x00\x00")

func templatesDateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDateTmpl,
		"templates/date.tmpl",
	)
}

func templatesDateTmpl() (*asset, error) {
	bytes, err := templatesDateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/date.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGeneric_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4f\xcd\x4b\x2d\xca\x4c\x8e\xcf\x4d\xcc\xcc\x8b\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x00\x49\x70\x71\xa5\x95\xe6\x25\x83\x99\x1a\x9a\xd5\x5c\x5c\xb5\x5c\xd5\xd5\xa9\x79\x29\x40\x55\x80\x00\x00\x00\xff\xff\xdc\x57\x73\x81\x49\x00\x00\x00")

func templatesGeneric_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGeneric_mainTmpl,
		"templates/generic_main.tmpl",
	)
}

func templatesGeneric_mainTmpl() (*asset, error) {
	bytes, err := templatesGeneric_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/generic_main.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIndexHtmlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xc1\x6e\xb5\x20\x10\x85\xf7\xf7\x29\x26\xee\x7f\xc8\x7f\x97\x0d\x97\xa6\x49\x37\xed\xaa\x49\xef\x0b\xa0\x8c\x42\x03\x62\x10\x9b\x1a\xe2\xbb\x77\x94\x36\xb8\xa8\xab\xcf\x61\xce\xcc\xe1\x90\xb3\xc6\xde\x8e\x08\x8d\x1d\x35\x7e\x31\x93\xbc\x6b\xb6\xed\x22\x76\x90\x17\xa0\x4f\x18\x54\xba\xe0\xf1\x9b\x6c\x72\x28\x73\x66\xf7\x1d\xb6\x0d\xde\x31\x7e\x62\x14\xbc\x1c\x14\x0d\xaf\x22\xd1\x06\xbd\x9e\xf4\xe6\xbf\x84\x3f\xd4\x54\xae\x3d\x53\xe5\xbb\xb1\x33\xcc\x47\x13\x10\xa9\x25\x05\xaf\x92\xed\x94\x73\x2b\x0c\x38\x62\x54\x09\x35\xf4\x31\x78\x60\x51\x79\x07\xbd\x75\x08\xed\x0a\x42\x81\x89\xd8\xdf\x1a\x93\xd2\x34\x3f\x70\x3e\xd8\x64\x96\x96\x75\xc1\xf3\xd7\xc5\x4f\x33\xcd\x40\x3e\x84\x7f\xbb\xaa\x91\x3f\x20\xb8\x92\x30\xc5\xf0\x81\x5d\x62\xd5\x11\x3f\x59\x22\xb3\xf1\x7c\xa1\xab\xac\xbb\xd4\x64\x75\xe8\x66\x5e\xe3\x7c\xdc\xa7\xde\xa8\xce\xca\x9e\xa7\xb7\x17\x78\xa6\x16\xd8\x37\xd1\xa8\xeb\x6f\x64\x25\x27\xaa\x1c\xd1\xe7\x8c\xa3\xa6\x97\xf8\x0e\x00\x00\xff\xff\x56\x0e\xa1\x8a\xa2\x01\x00\x00")

func templatesIndexHtmlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIndexHtmlTmpl,
		"templates/index.html.tmpl",
	)
}

func templatesIndexHtmlTmpl() (*asset, error) {
	bytes, err := templatesIndexHtmlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/index.html.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInit_pyTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\xcb\x2c\x89\x2f\xa8\x54\x52\xd0\xad\xad\xe5\x02\x49\xa4\xe6\xa5\x80\xd9\x80\x00\x00\x00\xff\xff\x6d\xcf\x4b\xe3\x25\x00\x00\x00")

func templatesInit_pyTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInit_pyTmpl,
		"templates/init_py.tmpl",
	)
}

func templatesInit_pyTmpl() (*asset, error) {
	bytes, err := templatesInit_pyTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/init_py.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInput_validators_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xf9\x14\xcf\x42\x49\x05\x29\x9e\x85\x1e\x3d\x7a\xf5\xba\xc4\x66\x62\x07\x37\x99\x65\x92\x28\xb2\xf4\xbb\x9b\x74\x17\xab\x7d\xa7\x65\xf8\xbd\x3f\x9b\x79\xf6\x14\x38\x11\x36\x9c\xa6\x5a\x86\x4f\x37\xb2\x77\x45\x34\x0f\xd3\x77\x39\x49\xda\x9c\xcf\x26\xa8\x44\x7c\x95\x20\x1a\xf3\xfe\x4a\x80\xe3\x24\x5a\xf0\xba\x5c\x58\xd2\xb3\xaa\xa8\x31\x2d\x12\xb1\x8e\x85\xa7\x91\x06\x09\xbb\xfe\x7d\xff\x64\xd0\x64\xad\xc5\xf1\x44\xc7\x0f\x70\x40\x8b\xaa\x04\xce\x2b\x4c\x90\xc5\xd7\x20\x73\xa1\x23\xe5\xec\xde\x09\x07\xd8\x97\x9a\x0b\xde\xe8\x37\xb7\xb3\x5b\x6f\xb1\xc5\x12\xbf\x18\x7a\xf3\xf0\xb7\xba\x6f\x7e\x40\x60\x1a\xfd\xba\xa0\xab\x75\x5f\x4e\xfb\x36\xdb\xb5\x88\xee\xc0\xdd\x01\x8f\x57\xa4\x4b\x1d\x67\xba\xfd\xbd\xdd\x3a\x6a\x6d\x54\x2a\x55\xd3\xbf\x52\x33\xcf\x94\x7c\x7b\xb7\x9f\x00\x00\x00\xff\xff\x71\x8f\x4e\xd5\x5d\x01\x00\x00")

func templatesInput_validators_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInput_validators_pythonTmpl,
		"templates/input_validators_python.tmpl",
	)
}

func templatesInput_validators_pythonTmpl() (*asset, error) {
	bytes, err := templatesInput_validators_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/input_validators_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_middlewareTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\x5b\x4f\xdb\x4c\x10\x7d\xce\xfe\x8a\xf9\xfc\xf0\xd5\x46\x60\xe8\xe5\x09\x29\x2f\xad\xda\x52\xa9\xa5\x14\x52\xf1\x50\x55\x68\xb1\xc7\xd8\xc2\xd9\x75\x77\x37\xb8\xc8\xf2\x7f\xef\xec\x2d\x04\x12\xd3\x46\x49\x64\xcf\xe5\x9c\xd9\x33\x33\xf6\x30\x1c\x40\x89\x55\x23\x10\x12\xc9\x57\xa6\x7e\x75\xb5\x6c\xca\xb2\xc5\x9e\x2b\x4c\xe0\x60\x1c\x59\xc7\x8b\x5b\x7e\x83\x30\x0c\xf9\x99\xbf\x3c\xe5\x4b\x24\x07\x6b\x96\x9d\x54\x06\x52\x36\x4b\x04\x9a\xc3\xda\x98\x2e\x61\x19\x63\x87\x87\xf0\xd5\x61\x51\x8a\x8f\xfd\xb2\xc6\x84\x46\x83\x27\x82\x07\x22\xa8\xa4\x82\x75\x30\x33\xf7\x1d\x3e\x83\xa0\x8d\x5a\x15\x06\x06\x36\x2b\x51\x17\xaa\xb9\xc6\xf2\xed\xbd\xb5\x36\xe2\x86\xcd\xaa\x06\xdb\x12\xfc\x27\xda\x74\x21\x3b\xd4\xde\xf6\xe3\x67\xb0\x8e\xae\xd0\x53\xec\x27\x99\x0a\x85\xdc\x20\x08\xec\xff\x5a\x0d\xab\x56\xa2\x78\x16\x2c\x0d\x45\x44\xfe\x0c\xf6\xa6\x41\x07\x66\x4b\x95\x4b\x38\x9e\x4f\x53\x93\x00\xe1\x64\xc7\xe1\xb8\xee\x66\x9f\xcd\x46\x97\x3e\x0c\xd0\x54\x90\x9f\x20\x2f\x51\x8d\x63\x80\xcc\x37\x45\x9b\x43\x52\x3b\xb7\x4e\xa2\xdb\xeb\x47\x0e\x62\xf4\xa9\x81\x38\x89\xa0\xd8\x6a\x74\xc8\xdf\x56\xa8\xee\xcf\xb8\xe2\x4b\x0d\x93\xf8\xbf\xd6\x41\x68\xa6\x78\x36\x80\xb6\xc8\x44\x19\xb1\x15\x9a\x95\x12\xf0\xbf\x5c\x86\xde\xbd\xab\xb1\xb8\xbd\xf0\xb2\x16\xf6\x5a\x43\x5f\xa3\xa9\x51\xc1\x4a\xd3\x5f\xcd\x35\x35\x0f\x4b\x2c\x83\x34\xbe\x4b\x29\xe9\x3a\xad\x7d\xb6\x09\xbb\xdd\xb4\x6b\x29\x5b\x3b\x7a\x74\xfe\x16\x05\x41\xe5\x3e\x24\x83\xf9\x1c\x8e\xac\x67\x16\xea\xa4\xb9\x40\xdb\x0a\x1a\x49\x9a\xee\xab\x7d\xe0\x6d\x2b\x7b\xaa\x85\x7a\xaa\xb8\xa0\x8d\x5a\x27\xbb\xb4\x10\xe5\x2c\x0f\x31\x1b\x01\x96\xd3\x7b\x89\x2a\x82\x39\xc7\x63\xca\x19\x91\xba\x1f\x7d\x83\xa3\xe2\xd4\xb3\xa0\xda\x09\x17\x74\x54\x15\xe5\x3c\x59\x2c\xce\x48\xa9\x68\xeb\x14\x6a\x14\x86\x9b\x46\x0a\x90\x15\x98\x9a\x16\xf6\x61\x53\xff\x4d\xc1\x40\x91\x0a\xfc\x6d\xc0\x3e\x16\xf2\x60\xc9\x1e\xdd\xd9\xe2\x43\x15\x9b\xe6\x0f\x44\x91\x5a\x9e\xb4\xf7\xf6\x73\xd4\x9d\x14\x1a\x2f\x55\x43\x23\xb4\x0f\x0a\xf6\x82\x9d\x86\x4b\x9b\xcc\x89\x70\xc7\x15\xf0\xa2\x40\xad\x17\xf2\x16\x45\xdc\x7d\xf2\xd0\x99\xbd\x03\x8c\xf3\xb8\x51\x71\xcf\x05\xab\xe8\xd3\x89\xdd\x31\xb2\x5e\xe4\x4d\x70\xea\x4e\xfe\xfd\xfc\xb3\x1f\xdc\x34\xcb\x3f\xa2\x49\xe3\x4c\x67\x56\xfc\xf5\x92\xec\x80\x8f\x1b\xb7\x1b\x36\xec\xdc\x16\xa2\xaf\xf6\x51\x34\x61\x05\x90\x3e\x77\xda\xf8\xdc\xf4\xcd\xd1\x4b\x9b\x12\xb4\x75\xc9\x5e\x86\xcb\xf3\x4f\x8b\xf7\x50\x48\xaa\x88\xb4\xf0\x42\xb8\x55\x79\xa1\xe3\x86\x78\x21\x9f\x8c\x7d\x48\xf7\xf1\xeb\x40\x2a\xe7\x3f\x2a\x71\x7b\x5d\xb2\xdd\x45\xbd\xde\x51\x94\x9d\x90\xfc\x02\xd5\x1d\xda\x39\x4c\x7b\x6a\x2e\x45\x8d\x19\xcd\xaa\x7d\x35\xd9\xed\xb7\xef\xa0\x3f\x01\x00\x00\xff\xff\xa1\x9b\x07\xa6\xa7\x06\x00\x00")

func templatesOauth2_middlewareTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_middlewareTmpl,
		"templates/oauth2_middleware.tmpl",
	)
}

func templatesOauth2_middlewareTmpl() (*asset, error) {
	bytes, err := templatesOauth2_middlewareTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_middleware.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_middleware_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\xee\xc5\x09\x5e\xb3\xfd\x38\x2d\x2c\xf4\x54\x7a\x5a\x5a\xe8\xad\x14\xa3\x95\x46\x89\x1a\x45\xca\x4a\x72\x43\x30\xf9\xef\x95\x64\x39\x91\x63\x2f\x2c\xac\x0f\x89\x91\xde\xbc\xf7\xe6\x69\xac\xbe\xbf\x03\x86\x5c\x28\x84\x52\x93\xce\x6d\x3f\xb5\x7b\xc1\x98\xc4\x23\x31\xd8\x1e\x4e\x6e\xab\x55\x09\x77\xe7\x73\xc1\x8d\xde\x03\xef\x14\x75\x5a\x4b\x0b\x62\x7f\xd0\xc6\xc1\xd1\x90\x83\x4d\x7b\x92\xd8\xdd\xb8\xbe\xa9\xc1\xe0\x4b\x87\xd6\xd5\xf0\xd7\x6a\x25\xf8\xa9\x28\xa8\x47\x58\x48\x32\x7d\xdf\x3c\x91\x3d\x9e\xcf\x0f\x05\xf8\xc7\x9b\x80\xb6\x15\x4a\xb8\xb6\xad\x2c\x4a\x5e\x83\xa5\xfa\x80\xf6\xf1\x49\x2b\x5c\x0d\xa0\xf0\xf4\xbd\xe0\xd0\x7c\x47\xc2\xd0\x78\x5b\xe3\x72\x28\x69\x18\x5a\x6a\xc4\x33\xb2\xf6\xf9\x04\x8f\x50\x6e\x23\xca\x96\x53\x14\x17\x28\x59\xd8\xf6\x16\x06\x9e\xe4\xa4\xcc\x44\x50\x5a\x84\xa0\xf4\xb3\x43\x73\xfa\x41\x0c\xd9\xdb\xf7\xcb\x65\x64\x0b\x9a\x80\x8a\xc1\xad\x08\x91\x52\x1f\xbd\xc4\x90\x86\xe7\x19\x5e\x8a\x2c\x35\xea\x31\x97\xd4\x78\x96\xd5\xd7\x78\x3c\x15\x5f\x5d\x56\x42\x01\x43\xaa\x0d\x71\x9e\x33\x1e\xa7\xd0\xaa\x5a\x13\xb3\xb1\x35\xac\xd7\xbb\x63\x78\xcb\x28\xc2\xe3\xf4\x0e\x55\xe8\xa0\x9c\x2c\xfb\x74\x16\x62\xc8\x72\x98\xb2\xe4\x4c\x69\x36\x9a\x84\x6c\x36\xe8\xaa\x6b\x58\xb5\x57\x5a\x4d\x6a\x51\xbe\x2a\xf6\x72\x89\x14\xdd\xdb\x44\x43\x87\x51\xb1\x24\x94\xa2\xb5\x6d\x04\x94\x83\xea\x6d\x87\xa9\x38\x34\x3f\x67\x36\xe8\x3a\xa3\xc6\x01\xaf\x56\x35\x7c\xb9\xff\x38\xa5\xd8\x34\xb9\x88\x77\x11\xff\xa7\x98\x0f\x70\x30\xfa\x9f\x60\x08\x54\xfb\x1f\xa7\x81\x6e\x91\xee\xd2\x49\x83\xf6\x2e\xb6\x08\x39\xcf\xa4\xfc\x32\x19\xbf\xff\xcc\xec\xc7\xcc\x22\x5b\x1a\xa0\x6a\xf8\x5b\x85\x96\xbe\x11\x3f\xe4\x6f\xeb\xea\x73\xb1\x80\xe0\xb3\xb9\x29\x6e\x10\xf3\x51\xbb\xce\xed\xd4\x55\xf6\xc5\x67\xd3\x37\x76\x70\xf3\x11\x08\x0b\xe1\x56\x00\x6d\x40\xa2\xaa\x16\x20\xb1\xbf\xfb\x87\x25\xd7\xbf\x4c\x87\xd7\x9c\xb8\xe7\x48\xa5\x20\xd4\x92\xda\x94\x24\xe0\x6d\x44\x2e\x6c\x8e\x96\x83\x78\x22\x99\x03\x5e\xb5\x92\x16\xe3\xa9\x14\xe1\x62\x0e\xd7\x41\xb8\x7a\xff\x07\x00\x00\xff\xff\xfb\x91\x93\x2b\xa5\x05\x00\x00")

func templatesOauth2_middleware_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_middleware_pythonTmpl,
		"templates/oauth2_middleware_python.tmpl",
	)
}

func templatesOauth2_middleware_pythonTmpl() (*asset, error) {
	bytes, err := templatesOauth2_middleware_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_middleware_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPython_server_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x53\x4d\x6b\xdb\x40\x10\xbd\xe7\x57\x0c\xc1\x20\x09\x64\x91\x43\x4f\x01\x41\x93\xd2\x42\xa0\x2d\xa1\x94\x5e\x42\x11\xdb\x68\x64\x6f\xa3\xdd\x55\x66\x57\x0e\xc6\xd5\x7f\xef\xec\x57\xe3\x3a\xd6\xc5\xb3\xf3\xf1\xde\xbc\xe1\xf9\x70\x58\x43\x8f\x83\xd4\x08\x97\x84\xd6\xcc\xf4\x88\xdd\xb4\x77\x5b\xa3\x3b\x87\x6a\x1a\x85\xc3\x4b\x58\x2f\xcb\x85\xef\x5c\x89\x49\x7e\x15\x0a\xe1\xba\x85\x26\x04\xbe\x32\x90\x51\x30\x8c\xc2\x3e\x81\x54\x93\x21\x07\xb7\xe3\x8c\x13\x49\xed\x6a\xf8\x6d\x8d\x96\xc3\xbe\x06\xc2\xe7\x19\xad\x63\x1c\x20\xa1\x37\x08\xab\xa7\x1a\x56\xbb\x00\xf5\x45\xf6\xfd\x88\x2f\x82\x37\xb8\x21\x0a\xa0\x09\xe9\x70\x58\xed\x9a\xbb\x10\xdf\x0b\xb7\x5d\x16\x10\x36\x26\x3d\x7d\x58\x0b\x50\xf7\x10\xa3\x37\xc0\xdf\xf0\xf9\xd6\xf4\x12\x2d\xe4\x3d\xfd\x2c\xa3\x1c\xc1\xff\x07\xc2\x61\x14\xf6\x07\xbe\x9b\xcf\xe6\x05\x89\xb3\x1d\xcb\x86\xf6\x55\x55\x59\xbc\xe9\x8a\x4d\x45\x0d\x5d\xa7\xb9\xd0\x75\xd5\x79\xa1\xc8\x97\xed\xc3\x36\x17\xef\x99\x3c\xdf\xf3\x04\xa7\x21\x33\x3b\xf4\x34\x2c\xf4\xa3\xee\x27\xc3\xac\xcb\xc2\xf0\x2a\x02\xb4\x0f\xb1\xf6\x03\xe9\x17\xe7\x7f\x7a\xb6\x4c\xa6\x3c\x9b\xf2\x74\xdc\x70\xe6\xb2\x9e\x77\xa7\xd2\xfd\x9a\xe3\x47\xf9\x10\x5f\x37\xb4\xb1\xcb\x12\x40\xfd\x59\xfc\x10\x7b\x24\x9e\x3d\x2a\x48\xfd\x21\x73\x2f\x48\x28\xee\xaf\xae\x2f\x80\xbf\xa2\x28\xc2\xef\xeb\x42\x83\x5f\x68\x48\x0b\x7d\x9a\xf5\xe3\x07\xa3\x14\x6a\x67\x03\x72\xec\xe5\x86\x7f\x71\xe6\xf4\xaf\x3b\x07\xd2\xc2\x56\x68\x56\x41\x30\x18\x82\x23\xdd\x70\x72\x9f\x13\x7e\x90\x43\x76\xc0\x1e\x52\x55\xea\x69\x66\xe2\x96\xcb\xb9\xc4\x47\xf0\xce\xe8\xbc\x53\xcb\xe4\xd2\x66\x83\x2e\x26\xaa\x2a\xce\x0d\xa0\x8d\x4b\xe3\xcd\x4e\x8c\xb2\xe7\x7f\x46\x99\x34\xfb\x8f\xd0\xcd\xa4\xb3\xdf\x4b\x24\x32\x64\xdb\x34\x10\x5f\x55\x0d\xef\xae\xae\xf2\x76\xc9\x71\x67\x66\xab\x6c\xc8\x75\x74\x64\x0e\xff\x06\x00\x00\xff\xff\xce\xc6\xbe\xec\xad\x03\x00\x00")

func templatesPython_server_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPython_server_resourceTmpl,
		"templates/python_server_resource.tmpl",
	)
}

func templatesPython_server_resourceTmpl() (*asset, error) {
	bytes, err := templatesPython_server_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python_server_resource.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRequirements_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8f\xcd\x6a\xc3\x30\x10\x84\xef\xfb\x14\x26\x77\x09\x4b\x4e\xa1\x17\x5d\x03\x0d\xb4\x3d\xa4\x90\x63\x11\xf1\xda\x51\x1c\xaf\x5c\xad\x44\x7f\x8c\xdf\xbd\xb2\xdc\x82\x2e\x3b\xfa\xf8\x98\x99\x67\x51\xb5\xd8\x39\xc2\x6a\x17\xf0\x23\xb9\x80\x23\x52\xe4\xf7\xe9\x3b\x5e\x3d\xed\x2a\xb1\x2c\x70\xb8\x5b\x1e\x8c\xa9\xa5\xca\x6f\xbb\xc4\x13\x4d\x29\xf2\x1a\x6a\x59\xff\x65\xe7\xb7\x43\xa1\x34\x1c\x1d\xdd\xac\x36\x46\xcb\x47\x78\xb6\x61\x48\xd3\xc9\x76\x58\xe8\x06\x32\xe6\xc3\xc8\xeb\xaf\xfa\x3f\xc4\xf1\xf4\xfa\xb2\xd9\x54\x0d\x67\x0c\xc3\x0f\xa6\xbe\xd8\x94\xdc\x43\x97\xe8\x12\xbd\xbf\x73\x93\xa5\x4d\x86\x1a\xa1\xc1\x45\x6e\x2d\xf5\x18\x7c\xda\x8a\xec\xe1\xc6\x9e\xf8\x72\xc5\xd1\xae\xf6\x87\xec\x67\xf7\x65\x8c\x5a\x9b\xd7\xf0\xc9\x7d\xde\xd7\x15\xab\xd4\x30\xcf\x48\x6d\x19\xf8\x1b\x00\x00\xff\xff\x6e\x92\x79\xc4\x06\x01\x00\x00")

func templatesRequirements_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRequirements_pythonTmpl,
		"templates/requirements_python.tmpl",
	)
}

func templatesRequirements_pythonTmpl() (*asset, error) {
	bytes, err := templatesRequirements_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/requirements_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x53\xc1\x8a\xdb\x30\x10\x3d\x5b\x5f\x31\x88\x3d\xc8\x25\x2b\x87\x42\x2f\x0b\x3d\x2c\x84\xa5\x81\x76\x1b\xb2\xd0\x1e\x17\xd5\x1e\x3b\x43\x6c\x49\x95\xe5\x24\x60\xf2\xef\x1d\xd9\xde\x6c\x2f\xab\x8b\xa5\xd1\x9b\x37\x4f\x6f\xc6\xe3\x78\x0f\x15\xd6\x64\x11\x64\x8f\xe1\x84\xe1\xb5\x33\x64\x5f\x1b\x27\xe1\xfe\x7a\x15\xde\x94\x47\xd3\x20\x8c\xa3\xde\xcd\xdb\x67\xd3\x21\x5f\x08\xea\xbc\x0b\x11\x94\xc8\x64\xeb\x1a\xc9\x1f\x8b\xb1\x38\xc4\xe8\xa5\x10\xc0\x4b\x72\xce\xde\xb9\xb8\x9d\x80\x3b\x13\x0f\xd7\x6b\xd1\xb8\x60\xba\x96\x11\x99\x6c\x28\x1e\x86\x3f\xba\x74\x5d\x8a\x52\xdb\x9a\xa2\x1b\x2e\x72\xce\x6d\x9c\x3f\x36\x9a\x6c\x71\x32\x2d\x55\x26\xba\xa0\x4f\x9f\xa5\xc8\x85\xa8\x07\x5b\x42\xd2\xa8\x72\x18\x27\x70\x51\x00\x59\x3f\x44\xb8\x61\xa7\xf0\x7b\xe6\x0b\xc6\x5f\xf3\x81\x9c\x7d\xe2\x7c\x25\xbb\xa1\x8d\xe4\x5b\xfc\x59\xcb\x15\xcc\xa2\xf4\x8f\x5b\x8c\xcb\x64\x01\x1e\xbe\x02\x0b\xd2\xcf\x78\xde\xbb\x21\x62\x50\xb9\x78\xab\x77\x70\x1d\x82\x67\x37\x18\xa7\xbf\x19\x5b\xb5\x38\xf3\x16\x4c\x97\x14\xaa\x33\x24\x2b\xf4\x1e\x7b\xef\x6c\x8f\xbf\x03\x31\xc3\x0a\x02\x7c\x5a\xe2\x7f\x07\xec\x63\x7a\x42\x96\x4d\x91\x97\xe4\xfe\x13\xb5\xa8\xce\x0c\x5b\x81\x24\x5b\xe1\x45\x1f\x22\xdb\x95\x8b\xec\xba\x14\x1f\x47\xa0\x1a\xf4\xe3\x6e\xbb\x71\x65\xbf\xa1\x00\xdc\x8c\x45\x95\xf1\x54\x71\x70\x3a\x06\x9d\x1c\xdf\x05\xee\xed\x85\x65\x71\x2f\xde\x53\xb8\x0f\x32\x5f\x64\x07\x35\x57\x8f\x81\xfc\xc7\xe8\xd5\xfc\x9a\x24\x6f\xd2\xb9\x64\xf1\xad\x92\xba\x58\xea\x32\x29\xaf\x37\x95\x68\xab\x24\x4d\x64\xbc\x0f\xc6\xf2\x0c\xdd\x1d\x57\x70\x77\x4a\xb6\x26\x5b\xdc\x10\x4a\xec\x37\x58\x27\x14\x83\xf4\x3c\x58\x5b\xcb\x3e\xd5\xa6\xc4\xc9\xf3\x5e\xb1\x13\xb7\x3b\xd6\x34\xb2\x0f\xd9\xff\xec\x3c\x7b\x7a\x17\xc8\xc6\xd6\x2a\xd9\x47\x13\x22\xd9\x06\xe6\x51\x4e\xbe\x4d\x3a\xbf\x53\x1f\xd1\x3e\xda\x6a\x12\xaf\xe4\xc3\x97\xf5\x7a\xcd\x8f\x0a\xb9\x60\x8e\xf4\x0f\x24\xbe\x34\xef\xff\x02\x00\x00\xff\xff\xcc\x4a\x63\xcd\x10\x03\x00\x00")

func templatesServer_main_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_goTmpl,
		"templates/server_main_go.tmpl",
	)
}

func templatesServer_main_goTmpl() (*asset, error) {
	bytes, err := templatesServer_main_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\xcd\x6a\xdc\x30\x10\xbe\xeb\x29\x06\x13\xb0\x16\x12\xe7\xbe\xd4\xa5\x69\x77\xb7\x14\x42\x28\xe9\x42\x0f\x21\x08\x65\x3d\xb6\x95\x5a\x92\x91\xe4\xa4\x41\xf5\xbb\x77\x64\xc7\x6c\x7f\x16\xe2\x83\xc1\x33\xf3\xfd\xf8\x9b\x89\xf1\x02\x2a\xac\x95\x41\xc8\x3c\xba\x27\x74\x42\x4b\x65\x44\xff\x12\x5a\x6b\x32\xb8\x18\x47\x56\x3b\xab\xa1\xee\xa4\xff\x01\x4a\xf7\xd6\x05\xd8\xa5\x8f\x73\xf0\x68\x2a\x91\xba\xa2\x52\x0e\x0f\xc1\xba\x97\xa5\xa8\x3a\x64\xaf\xc3\xcf\xa1\xb6\x4e\x7b\xf1\xe8\xad\x61\x31\x82\x93\xa6\x41\x38\x23\xfc\xd9\x13\xac\x4b\x28\x6e\xd1\xdb\xc1\x1d\xd0\x6f\xb0\x3e\x0a\xc6\x58\xdc\x48\x8d\xf0\x0b\xf6\xf6\xda\x3e\xa3\x1b\xc7\x45\xfe\x44\x4b\xc8\x5e\x11\x39\x69\x03\x11\x30\xd9\xf7\x50\xce\x36\xb9\x10\x86\x86\x85\x58\x4d\xe5\xe2\x60\x4d\xad\x9a\xbb\xec\xfb\x7e\x27\x3e\x7d\xbb\xdd\x89\xed\xcd\xd5\xc7\xeb\xed\x26\xbb\x4f\x08\xd9\x79\x64\x7f\x3a\x2e\x94\x51\x81\x13\x36\xc6\xb7\x8d\x27\x7e\x87\x8d\xf2\x81\x72\x7c\xe8\x06\xec\x9d\x32\x81\xff\xe7\x17\x66\xc3\xab\xd9\x71\x32\x4c\xb9\xa8\x1a\x8a\xab\xaf\x5f\x36\xf6\xe0\x37\x2a\x8d\xb0\x0f\x13\x9f\x1d\x02\xf2\xfc\x92\x48\x8e\xdd\x71\xbc\x7c\xd7\xcb\xd0\xae\xd3\xeb\x7d\xbe\x62\xb4\xc3\x39\xf9\x47\xcf\x53\x6d\xb5\x66\x40\x8f\xc3\x30\x38\x73\x6a\x51\x3c\xff\x87\x30\x3f\x87\x09\x98\xac\x2c\x31\xfe\x65\x80\x06\x34\xd2\x55\x54\xbe\xbc\xcb\x3f\x6f\xf7\xf9\xfd\x2c\xdb\x5a\x8d\xfc\x94\x1e\xdd\x00\xcf\x95\xa9\xf0\x67\xd1\x06\xdd\x91\x4b\x46\xff\xb8\xac\x03\xca\x12\x32\x31\x5f\x9b\xc8\x66\xf8\x24\x37\x18\x5e\xe1\xc3\xd0\x94\x7b\x37\xe0\x6b\x44\x53\xba\xbf\x03\x00\x00\xff\xff\xae\x29\x40\x74\xac\x02\x00\x00")

func templatesServer_main_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_pythonTmpl,
		"templates/server_main_python.tmpl",
	)
}

func templatesServer_main_pythonTmpl() (*asset, error) {
	bytes, err := templatesServer_main_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_apiTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xdb\x30\x0c\x3d\xc7\xbf\x82\x13\x82\xc1\x5e\x5b\xb5\x87\x9d\x5a\xf4\xb0\x8f\x16\x2b\xb0\x15\xd9\x06\x74\x87\x61\x68\x94\x98\x5e\xbc\x38\x92\x23\xcb\x09\x02\xc3\xff\x7d\xa4\x24\xcf\x4d\xd7\x5c\x4c\x89\xe4\x7b\x8f\x4f\x52\xba\xee\x0c\x72\x2c\x4a\x8d\x20\x2c\x36\xa6\xb5\x4b\x7c\x54\x75\xf9\xe8\x70\x53\x57\xca\xa1\x80\xb3\xbe\x4f\x6a\xb5\x5c\xab\xdf\x08\x5d\x27\x67\x21\xbc\x57\x1b\xa4\x44\x52\x6e\x6a\x63\x1d\xa4\x09\xd0\xaf\xeb\xc0\x2a\x4d\x75\xd3\xf5\x29\x4c\x77\x70\x79\x0d\xf2\xdd\xec\xee\x73\xb9\xb8\xf3\x65\x33\xe5\x56\x8d\x07\x84\xf8\x13\x5d\x37\xdd\xf5\xbd\x18\xda\x51\xe7\x3e\x9f\x25\x94\x20\x1d\x4c\xe3\x61\x22\xdf\xf9\x39\x6b\x08\x0b\x42\x86\xb2\x01\xff\x21\xb1\xb8\x41\xed\x94\x2b\x8d\x06\x53\x70\xd5\x8d\xce\x6b\x53\x6a\xd7\xf7\x60\x8d\x71\x8c\xed\xd7\x89\x3b\xd4\x78\x0c\xd3\x38\xdb\x2e\x1d\x74\x09\x4d\x94\xbc\x34\xc5\x17\x74\x2b\x93\x37\x30\x48\x98\xee\xe2\x56\xc0\x60\x1d\x6e\x85\xb0\x52\x3a\xaf\xd0\x42\x61\x6c\x28\x7a\x40\xbb\xa0\xb4\x8f\x47\x3d\x09\xdb\x3e\x70\x14\x4c\x52\x30\x0b\xd5\xdc\xb6\x7a\xf9\xc1\x6c\x78\x94\x66\xe4\x2a\xfa\xbe\xeb\x48\x3e\xed\x14\x54\x90\x92\x31\x30\xfa\xe3\x47\xc8\xfe\x17\x95\xee\x61\xe5\x5c\x2d\xbf\x61\x53\x1b\xdd\xe0\x0f\x5b\x3a\xb4\xa7\x60\xe1\x4d\xdc\xdf\xb6\xd8\x38\xea\x4c\x26\x4f\x05\x6d\x59\xd0\x36\x0a\xfa\xda\xa2\x3d\xcc\x94\x25\x44\x6a\x1e\x0f\x2f\x28\x5b\x6f\x69\x38\x2a\xb4\xb8\x95\xb7\xc6\x6e\x1e\x54\xd5\x62\x2a\x62\x46\x64\x01\x98\x0f\x95\xda\x7c\x5c\x16\xc0\xc4\xef\x4d\x7e\xf0\x58\x93\x9d\xb2\xdc\xee\x37\xe8\x4c\x62\x8e\xaf\x56\xa4\xc9\x71\x69\x72\xe4\x1a\x56\x9b\x4c\x08\x01\xad\x65\xd6\x3f\x8d\xd1\xf2\x1e\xf7\x1f\x7d\x85\x4d\xad\xe4\xd6\x4c\x86\x75\xfa\x3a\xc2\x66\x57\xbe\xe1\xd5\x35\xe8\xb2\xe2\x61\x27\x7b\xe9\xbd\xf8\x84\x8a\xdb\xde\x5e\x5c\x90\xd0\x89\x45\xd7\x5a\x9d\x4c\x46\xe6\x9d\xaa\xca\x9c\xde\xc0\x3f\x6e\xde\x1f\xe9\x23\xbc\x7c\x88\x65\xe9\x73\xa2\xe1\x92\xbf\x40\xf7\x2c\x95\xfe\xfc\xb5\x38\xd0\x67\xde\x09\x42\x30\x56\x5c\x8a\xf9\x09\x45\xf2\x86\x57\x69\x76\x32\x17\xfd\x3c\x1b\xdb\xa2\x56\x0e\xfb\x23\x8f\x9f\x9a\xdc\xd4\xde\xd4\xd1\xe4\xb8\xe1\x5d\x0e\x31\xe7\x06\x17\x6f\x74\x70\x71\x9f\xc9\x10\xb2\x81\xa1\x2c\xbb\x3a\x3e\x48\xf2\x86\xae\x61\xb8\xa6\xb0\xc0\xca\xec\xa1\xe2\xbf\x10\x67\x40\xe5\x39\xac\xfc\xa0\xbe\x6c\x2f\xe3\xd4\x99\xfc\x8e\x2e\x15\x6b\x3c\x88\x53\xb1\xe3\x6b\x42\xb7\x23\x3c\x84\xe1\xcd\x1f\x2d\xfe\x06\x00\x00\xff\xff\xa7\x39\xf1\xd8\x99\x04\x00\x00")

func templatesServer_resources_apiTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_apiTmpl,
		"templates/server_resources_api.tmpl",
	)
}

func templatesServer_resources_apiTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_apiTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_api.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_interfaceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\x3c\x8b\x5f\xb1\x10\x72\x90\x02\x5b\xb9\x17\xe8\xa9\x0f\x34\x87\x06\x41\x10\xb4\xc7\x80\x96\x56\x16\x11\x89\x54\xc9\x95\x9d\x80\xe0\xbf\x77\x49\xc9\x8e\xd3\x38\x6d\x79\xf1\x92\x1c\xce\xce\xce\x58\xde\xaf\xa1\xc1\x56\x69\x84\xdc\xa2\x33\x93\xad\xf1\x41\xb5\x0f\x84\xc3\xd8\x4b\xc2\x1c\xd6\x21\x88\x51\xd6\x8f\x72\x8b\xe0\x7d\x75\x3b\x97\x37\x72\x40\xbe\x10\x57\x57\xf7\x9d\x72\xd0\xaa\x1e\x81\x7f\xe5\x44\x66\xbd\x45\x8d\x96\xdf\x36\xb0\x79\x86\xad\x59\x5b\x39\xf4\x0c\xfc\x6c\x40\x1b\x02\x6c\x14\x01\x1d\x1f\x31\xa4\x93\xba\x01\xa7\x74\xcd\x14\x04\x7b\xd5\xf7\xb0\x41\x30\x3b\xb4\x7b\xab\x88\x50\x43\x33\x59\xa5\xb7\xfc\x0a\x41\xe3\x13\xc1\xd2\x41\x19\x2d\x84\x1a\x46\x63\x09\x0a\x01\xbc\xbc\x07\x2b\x35\x2b\xbd\x78\x5c\xc1\xc5\x0e\x3e\x7c\x84\xea\x5a\x13\xda\x56\xd6\x78\x9d\x90\xb7\x92\x3a\x97\xa6\x82\x65\xe5\xde\x5f\xec\x42\xc8\x0f\x0c\xc8\x72\xe2\x7d\x19\xc7\x8b\x33\xcf\xc3\x1e\x79\xe2\xa0\xea\xb8\x69\x8d\x8d\x98\x2f\xba\x19\x0d\x9f\x86\x00\xd6\xc4\x31\x97\xbd\xa0\xe7\x11\xcf\x92\x1c\x2a\x7f\x14\x12\xc3\x78\x23\xff\x3b\x52\x67\x9a\xd7\x8a\x93\x2c\x06\x2c\x97\x33\x75\x94\x15\x1d\x8a\x76\xf6\x68\x17\x61\x0c\xfa\x81\x76\xc3\xd7\xa9\x7e\x91\x29\x32\x80\xec\xb4\x63\x1b\x5b\xb6\xb1\x27\xe3\xbe\x4e\xba\xfe\x64\x86\x01\x35\xb9\x05\x9b\x9a\x32\x22\x04\xef\x79\xba\x78\x9a\x25\xce\x53\x11\x45\x47\x34\x56\x77\xe8\x46\xa3\x1d\xfe\xe4\xfc\xd0\xae\xe0\x72\x39\xfd\x35\xa1\xa3\x52\x64\x8b\xc9\x4c\x11\xde\xf1\xf8\xce\x4c\x84\x2e\x8e\x64\xb9\x8a\xe1\xff\xcb\xe7\x96\x15\xbf\x4b\x54\x58\xb8\x1c\xa6\xa7\x2a\xed\x58\x90\x3a\x83\x2c\x39\x00\x91\xfd\x35\x83\x93\x08\x22\x4e\xb5\x29\x03\xd5\xb0\xdf\x7b\xc9\x9f\xcf\x29\xc0\x56\xdf\x52\x10\x45\xfe\x87\xf1\xf9\x0a\x64\xaf\x6a\xac\x6e\x70\x5f\xcc\x06\xbe\x30\x84\x50\x56\xf7\x1d\xea\xd9\xc7\x99\xc1\xc6\x30\x0a\x55\xbd\x31\xbb\x2c\xcb\x83\xb4\xa5\xcb\x1c\x75\x5e\xbe\x92\x89\xbd\x43\x48\x71\x1d\x34\x25\xc2\x33\xba\xce\xf5\xf8\xaf\x0e\x73\x98\xd9\x49\x1d\xc4\x61\x13\xff\xb8\xbf\x03\x00\x00\xff\xff\xd6\x21\x2f\x89\x67\x04\x00\x00")

func templatesServer_resources_interfaceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_interfaceTmpl,
		"templates/server_resources_interface.tmpl",
	)
}

func templatesServer_resources_interfaceTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_interfaceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_interface.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x5f\x4f\xdb\x3e\x14\x7d\x6e\x3f\xc5\xfd\x45\x7d\x68\x10\x4d\xdf\x11\xe5\xe1\x37\x36\xa9\xd2\x06\x3c\xb0\xbd\x20\x04\x5e\x7a\x03\x5e\x1d\xa7\xd8\x4e\x34\x14\xe5\xbb\xef\xfa\x4f\x5a\x37\xe9\x36\x2d\x42\x10\xfb\xfe\xf1\x39\xe7\x9e\x98\xb6\xdd\x60\xc1\x25\x42\xa2\x8d\xaa\x73\xf3\x64\xb0\xdc\x09\x66\x30\xe9\xba\xe9\x8e\xe5\x5b\xf6\x82\xd0\xb6\xd9\x9d\x7f\xbd\x61\x25\x52\x60\xca\xcb\x5d\xa5\x0c\xcc\xa7\x40\x4f\xdb\x82\x62\x92\xf2\x66\xdb\x73\x98\x35\x70\xb1\x82\x6c\xed\x12\xee\x98\x79\xd5\xb0\xa0\x0a\x08\x4f\x42\xc9\xb3\x2d\x74\x5d\xd2\x97\xa2\xdc\xb8\x8c\x74\x3a\x3d\x34\xf2\x4d\xae\x51\xe7\x8a\xef\x0c\xaf\x24\x55\x4c\x97\x4b\xca\x9f\x35\x5d\x47\x7f\xa8\x8a\x76\xa8\x80\x17\x90\xdd\x4a\xfc\x4c\x1c\xae\xb1\x70\x9d\x68\x37\xde\x72\x3b\x0b\x40\xa1\xd1\x85\xcd\xfb\xce\x52\x82\xcc\x92\xa1\x28\x78\xe6\xd0\x0e\xc9\xe0\xbb\xa5\xc3\x44\x8d\x0e\xcd\x27\x8e\x62\xa3\x21\x22\x63\xd1\xd8\x70\xe6\x65\xb1\x1b\x04\x07\xdf\x42\x55\xb6\xd6\x1f\x2a\xd2\x41\x73\xc7\xa0\x60\x84\xc0\x81\x0f\xe1\x7b\x02\x42\xeb\xe7\x1f\xba\x92\x17\x24\x8c\x3d\xb1\xeb\x46\x3d\x6e\x4b\x6e\x0c\x6e\x80\x50\x52\xfa\x79\x45\x4b\x9a\x91\x79\x0f\x22\x24\xae\x20\x64\x7f\x63\x82\x6f\x98\xa9\x94\xa6\xc6\x8d\x5f\xa0\xeb\x3d\x8e\x27\xa1\xc1\xf3\x5e\x4e\xcf\x69\x01\x7e\x15\x64\x73\xef\xbd\xd2\x37\x95\xf9\x9f\x29\x5c\x4b\x83\xaa\x60\xb9\xf5\x42\x51\xcb\x1c\xe6\xda\x9a\xc4\xcb\x90\x42\x38\x05\xe7\x29\xa0\x52\x95\xda\x4b\xbb\x3c\x83\xc2\xaa\x08\x02\x1b\x14\x3d\x40\x2b\xce\xd9\x72\x7f\xfe\xd8\x4c\xc7\xca\x7b\x28\xb3\x26\xfb\x2a\xf9\x5b\x8d\x6b\x52\x63\x1f\x2b\x2d\xd3\x7e\x1c\x54\x5a\xb2\xdd\x03\xef\xc1\xb6\xdd\xa3\x1f\x75\xdb\xb5\x3e\xbd\x20\x6c\x4f\xe7\xe0\x4e\xf1\xa7\xea\x2c\xee\xd0\xee\x47\x1d\x37\x7e\x68\x1e\x61\x05\x83\x56\xfe\x37\x01\x13\x28\xe7\x71\x76\x0a\xff\xad\xdc\xe6\x51\xeb\x34\xea\xad\xd0\xd4\x8a\xfc\x51\x9a\xec\xa3\x95\xab\x98\x27\x31\x88\xb2\xd6\x06\xbe\x23\xd4\x8e\x6e\x92\x46\xc7\xf9\xcf\xa7\x8b\x17\x07\x95\x48\xec\xb3\xe8\x01\xe7\xfb\xb1\xf0\x21\x1a\x0d\xc0\x0e\xfa\x3e\xfb\xc2\xa5\x97\xb6\xff\x7c\x03\x37\x9d\xc2\xa5\x1d\xf6\x21\xe3\x48\xa8\x13\x64\xa8\x0a\xf4\x6b\x55\xd3\xdc\x89\xc6\xd5\x0a\x86\xe5\x03\x4e\x8b\x23\x52\x01\x0d\xfb\xf9\x3b\x34\x57\xa1\x5d\xc8\xf8\x37\x34\x97\xab\x61\xf5\x1f\xc1\x80\x47\x33\x70\xde\x84\x6e\xa6\x92\x6d\xc9\x3d\xb5\x42\xe0\x06\xb8\x0e\xd3\xf2\xa6\xfc\x8b\x13\x27\x27\x6c\x48\x1c\x26\x93\x72\xe4\xb4\x09\xfd\xf4\x1e\x3b\x18\x2b\x75\xd9\x27\xb8\xe6\x95\x10\x98\xbb\x39\x13\x24\x59\x99\x83\x89\x26\x47\x04\x8f\x5c\x93\x33\x21\xe0\xa5\x5a\x34\xfd\x65\xd1\x5f\x1b\x68\xe9\xdb\x2e\xd1\xed\x3a\xf0\xcd\xe0\x2a\x8e\x66\x20\xb9\xd8\xdb\xb4\xbf\x8a\xa3\xf0\xf8\x30\xe2\x35\xfc\x1f\xe1\xee\xf6\x00\xb7\xbf\xb4\x7e\x05\x00\x00\xff\xff\xc3\xc1\x18\x45\xc2\x06\x00\x00")

func templatesStructTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructTmpl,
		"templates/struct.tmpl",
	)
}

func templatesStructTmpl() (*asset, error) {
	bytes, err := templatesStructTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStruct_input_validatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xc1\x8a\xe3\x30\x0c\x86\xcf\xf1\x53\x68\x03\x65\x63\x28\xe9\x2e\x94\x1e\x0a\x3d\xee\xde\x76\x67\xde\xa0\x78\x1c\xb9\x35\x93\x38\xc1\x91\x3d\x0c\x26\xef\x3e\x72\x92\x76\x4a\x2f\x6d\x90\xf4\xff\xfa\x3f\x39\xa5\x06\x8d\x75\x08\xe5\x48\x3e\x68\x3a\x5b\x37\x04\x3a\x47\xd5\xda\x46\x51\xef\xcf\x84\xdd\xd0\x2a\xc2\x72\x9a\xc4\xa0\xf4\xbb\xba\x20\xa4\x54\xbf\x2e\x9f\xff\x55\x87\xdc\x10\xb6\x1b\x7a\x4f\x50\x89\xa2\x34\x1d\x95\xfc\xc7\x76\xba\x77\xb1\x14\x52\x08\x13\x9c\x86\x7f\xa1\x25\x3b\xb4\xf8\x62\x2a\x17\x3a\xb0\x8e\xd0\x1b\xa5\x31\x4d\x5b\xe0\x75\x01\x81\x25\xd6\x5d\x24\xa0\xf7\xbd\x87\x24\x8a\xa8\x3c\xf0\xec\xdf\xb6\x57\x04\x26\xff\x1e\xf6\x42\x14\xe3\x87\x25\x7d\x85\x08\xc7\x53\x6e\xd7\x15\x7d\x0e\x28\xb3\x40\xab\x11\xb3\xf3\x51\x14\xc5\x5d\x78\xba\x49\xab\x28\xd7\x91\xb5\xf0\x34\x16\x45\xc1\xc7\x50\x9c\x33\x37\x3c\x52\xf0\x0e\x18\xa7\xfe\x93\x03\x99\xaa\xdc\x44\xd0\xca\xfd\x24\x78\x43\x08\x23\x36\xc0\x41\xae\xd0\xdd\xc1\x4a\x26\xe1\x15\x7c\x8f\x62\x26\x9a\x8d\xb7\x99\x27\x47\x5d\x2f\xc2\xa7\xf3\xe3\xd2\xaa\xe6\xa9\x2d\x1c\xf6\xac\xb2\x66\x1e\xfc\xc1\x4c\xb6\xcd\x30\xb7\x04\x5c\x5d\x3c\x3d\x8e\x2b\xf2\x92\x78\x07\xdf\x5b\x66\x7d\x95\x27\x76\x77\x5c\x3e\x44\xae\x48\x29\xb3\xeb\xef\xfa\xd7\xa3\xeb\x13\x97\x1d\xc1\xf5\xf4\xc0\x02\x9b\xc8\x38\xbc\x6b\x7d\x1d\x79\xcb\x30\xab\x39\xa2\x98\x44\x4a\xe8\x1a\x7e\xfe\xaf\x00\x00\x00\xff\xff\x16\xec\x5e\x2d\x45\x02\x00\x00")

func templatesStruct_input_validatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStruct_input_validatorTmpl,
		"templates/struct_input_validator.tmpl",
	)
}

func templatesStruct_input_validatorTmpl() (*asset, error) {
	bytes, err := templatesStruct_input_validatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct_input_validator.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/bindata.go": templatesBindataGo,
	"templates/class_python.tmpl": templatesClass_pythonTmpl,
	"templates/client_go.tmpl": templatesClient_goTmpl,
	"templates/client_python.tmpl": templatesClient_pythonTmpl,
	"templates/client_utils_go.tmpl": templatesClient_utils_goTmpl,
	"templates/client_utils_python.tmpl": templatesClient_utils_pythonTmpl,
	"templates/date.tmpl": templatesDateTmpl,
	"templates/generic_main.tmpl": templatesGeneric_mainTmpl,
	"templates/index.html.tmpl": templatesIndexHtmlTmpl,
	"templates/init_py.tmpl": templatesInit_pyTmpl,
	"templates/input_validators_python.tmpl": templatesInput_validators_pythonTmpl,
	"templates/oauth2_middleware.tmpl": templatesOauth2_middlewareTmpl,
	"templates/oauth2_middleware_python.tmpl": templatesOauth2_middleware_pythonTmpl,
	"templates/python_server_resource.tmpl": templatesPython_server_resourceTmpl,
	"templates/requirements_python.tmpl": templatesRequirements_pythonTmpl,
	"templates/server_main_go.tmpl": templatesServer_main_goTmpl,
	"templates/server_main_python.tmpl": templatesServer_main_pythonTmpl,
	"templates/server_resources_api.tmpl": templatesServer_resources_apiTmpl,
	"templates/server_resources_interface.tmpl": templatesServer_resources_interfaceTmpl,
	"templates/struct.tmpl": templatesStructTmpl,
	"templates/struct_input_validator.tmpl": templatesStruct_input_validatorTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"bindata.go": &bintree{templatesBindataGo, map[string]*bintree{}},
		"class_python.tmpl": &bintree{templatesClass_pythonTmpl, map[string]*bintree{}},
		"client_go.tmpl": &bintree{templatesClient_goTmpl, map[string]*bintree{}},
		"client_python.tmpl": &bintree{templatesClient_pythonTmpl, map[string]*bintree{}},
		"client_utils_go.tmpl": &bintree{templatesClient_utils_goTmpl, map[string]*bintree{}},
		"client_utils_python.tmpl": &bintree{templatesClient_utils_pythonTmpl, map[string]*bintree{}},
		"date.tmpl": &bintree{templatesDateTmpl, map[string]*bintree{}},
		"generic_main.tmpl": &bintree{templatesGeneric_mainTmpl, map[string]*bintree{}},
		"index.html.tmpl": &bintree{templatesIndexHtmlTmpl, map[string]*bintree{}},
		"init_py.tmpl": &bintree{templatesInit_pyTmpl, map[string]*bintree{}},
		"input_validators_python.tmpl": &bintree{templatesInput_validators_pythonTmpl, map[string]*bintree{}},
		"oauth2_middleware.tmpl": &bintree{templatesOauth2_middlewareTmpl, map[string]*bintree{}},
		"oauth2_middleware_python.tmpl": &bintree{templatesOauth2_middleware_pythonTmpl, map[string]*bintree{}},
		"python_server_resource.tmpl": &bintree{templatesPython_server_resourceTmpl, map[string]*bintree{}},
		"requirements_python.tmpl": &bintree{templatesRequirements_pythonTmpl, map[string]*bintree{}},
		"server_main_go.tmpl": &bintree{templatesServer_main_goTmpl, map[string]*bintree{}},
		"server_main_python.tmpl": &bintree{templatesServer_main_pythonTmpl, map[string]*bintree{}},
		"server_resources_api.tmpl": &bintree{templatesServer_resources_apiTmpl, map[string]*bintree{}},
		"server_resources_interface.tmpl": &bintree{templatesServer_resources_interfaceTmpl, map[string]*bintree{}},
		"struct.tmpl": &bintree{templatesStructTmpl, map[string]*bintree{}},
		"struct_input_validator.tmpl": &bintree{templatesStruct_input_validatorTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

