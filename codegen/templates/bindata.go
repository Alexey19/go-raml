// Code generated by go-bindata.
// sources:
// codegen/templates/bindata.go
// codegen/templates/class_python.tmpl
// codegen/templates/client_go.tmpl
// codegen/templates/client_nim.tmpl
// codegen/templates/client_python.tmpl
// codegen/templates/client_service_go.tmpl
// codegen/templates/client_service_nim.tmpl
// codegen/templates/client_service_python.tmpl
// codegen/templates/client_utils_go.tmpl
// codegen/templates/client_utils_python.tmpl
// codegen/templates/date.tmpl
// codegen/templates/enum_go.tmpl
// codegen/templates/generic_main.tmpl
// codegen/templates/index.html.tmpl
// codegen/templates/init_py.tmpl
// codegen/templates/input_validators_python.tmpl
// codegen/templates/oauth2_middleware.tmpl
// codegen/templates/oauth2_middleware_python.tmpl
// codegen/templates/object_nim.tmpl
// codegen/templates/python_server_resource.tmpl
// codegen/templates/requirements_python.tmpl
// codegen/templates/server_main_go.tmpl
// codegen/templates/server_main_nim.tmpl
// codegen/templates/server_main_python.tmpl
// codegen/templates/server_resources_api.tmpl
// codegen/templates/server_resources_api_nim.tmpl
// codegen/templates/server_resources_interface.tmpl
// codegen/templates/struct.tmpl
// codegen/templates/struct_input_validator.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesBindataGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesBindataGo,
		"templates/bindata.go",
	)
}

func templatesBindataGo() (*asset, error) {
	bytes, err := templatesBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/bindata.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClass_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xcf\x6a\x02\x31\x10\xc6\xef\x79\x8a\x41\x3c\xb4\xb0\xfa\x00\x82\x97\x22\x82\x20\x1e\x44\xe8\x71\x99\x76\x27\x6b\x30\xff\x9a\xcc\xfa\x87\x90\x77\x2f\x1b\xb3\x42\xe9\x29\x33\x99\x5f\xbe\xef\xcb\xa4\xd4\x91\x54\x96\x60\xf6\xad\x31\xc6\xd6\x3f\xf8\xec\xec\x2c\x67\x21\x83\x33\x20\x35\xc6\x4b\x7b\x63\x09\xca\x78\x17\x18\xb6\x2e\x98\xe7\xe8\xc6\xd2\x05\x13\x97\x57\xd4\xaa\x43\x76\x21\x4e\xcc\x06\x19\x8f\xf4\x33\xa8\x40\x5d\x03\x7b\xb2\x3d\x9f\x1b\x38\x52\x4f\x77\xdf\xc0\x61\x30\x5f\x14\x8e\x68\x7b\x6a\x20\x54\xec\x8f\xe4\xa4\x73\xa2\x3b\x6f\x15\xe9\xae\x29\xb6\xb5\xdc\x59\xa6\x9e\xc2\x34\xd0\x0e\x5f\x90\xd2\x54\xcb\x0f\xe7\x34\xa1\xad\xdd\x06\x99\x5e\x0c\xe9\x6e\xaf\x22\x3f\x1d\x95\xf5\x03\xb7\xff\xbf\x60\x06\xcd\xca\x6b\x6a\x9d\x14\x22\xa5\x30\xa6\x85\xf9\xa5\x81\xf9\x15\x56\x6b\x58\xee\x0a\x16\x61\x91\xb3\x48\x69\x7e\x2d\x07\x90\xed\x72\x16\xa2\x6c\x12\x52\x5a\x1e\xd0\x50\xce\x6f\x63\xf8\xf7\x95\x00\x00\x48\x09\x26\x2d\x7a\x8c\x6a\xa8\x8b\x5e\x89\x15\x73\xae\xd0\x78\x5f\x5f\xc3\x7a\xea\x3f\x4f\xdb\xd3\xc3\xd3\x0b\x5a\x8c\x7e\x50\x9c\x9f\xc6\xbf\x01\x00\x00\xff\xff\xef\xd0\x1b\xa6\xcc\x01\x00\x00")

func templatesClass_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClass_pythonTmpl,
		"templates/class_python.tmpl",
	)
}

func templatesClass_pythonTmpl() (*asset, error) {
	bytes, err := templatesClass_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/class_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x41\x8b\xdb\x3e\x14\xc4\xcf\xd1\xa7\x18\x4c\x58\x92\x25\xeb\xdc\x03\x39\xfc\xff\xa5\xd0\x5e\x96\xb2\xa5\xe7\xa2\xca\xcf\xb6\x58\xfb\xc9\x95\xe4\x2c\x5b\xa1\xef\x5e\x24\xd9\x26\x85\x1e\x7a\x93\x46\xcf\x33\xe3\x9f\x50\x08\x4f\x68\xa8\xd5\x4c\xa8\xd4\xa0\x89\xfd\xf7\xce\x54\x78\x8a\x51\x4c\x52\xbd\xca\x8e\x10\x42\xfd\xa5\x2c\x9f\xe5\x48\x31\x0a\xa1\xc7\xc9\x58\x8f\x83\xd8\x55\x4c\xfe\xdc\x7b\x3f\x55\xe2\x28\x84\x32\xec\xb2\xdc\x50\x2b\xe7\xc1\xff\x2f\x1d\x7d\x7b\xf9\x8c\x2b\xaa\x10\xea\x65\x17\x63\x9e\x0d\x61\x2f\x27\x9d\x1c\x71\xb9\xa2\x5e\xac\xfd\xfb\x94\x03\xcb\x16\xce\xdb\x59\x79\x04\xb1\x2b\xdd\x90\xa2\xea\x0f\x79\x2d\x00\xe0\xbf\xd9\xf7\x9f\x48\x36\x64\xd3\xac\xe6\x0e\xe7\x73\x16\x8d\xd5\xbf\xa4\xd7\x86\xd1\xe7\xe3\x13\xde\xf4\x30\xe0\x07\xc1\x25\x1f\xc3\x20\xa9\x7a\x58\xfa\x39\x93\xf3\xd0\x2d\xd8\x78\xd0\x38\xf9\xf7\x6c\xbc\x56\x2f\xae\x59\x52\x66\x1c\x0d\xc3\x91\xbd\x69\x45\x29\xe8\x85\x66\x47\x90\x70\x9a\xbb\x81\xd6\xb6\x9a\x9d\x27\xd9\xc0\xb4\x90\xc3\x60\x94\xf4\xa9\x97\x61\x42\x6b\x6c\x89\x5d\x3d\x0c\xc3\xf7\x94\x2a\x4e\x75\xce\x08\x01\x56\x72\x47\xd8\xbf\x9e\xb0\xbf\x65\x34\x5f\xcb\xb0\x43\x8c\x58\x86\xf6\xb7\xfa\x23\x37\x93\xd1\xec\x17\x52\x8f\x59\x2c\x9b\x10\x88\x9b\x18\x45\x14\x85\xe7\x9a\xb6\xd1\xcc\x7f\x53\x80\x3e\x6e\xb0\x45\x14\xed\xcc\x0a\xcf\xf4\xb6\x69\x87\xe3\xdd\xc0\xfa\x61\x2a\xf5\xb0\xa9\x45\xbc\x43\x76\xc1\x9f\xb7\x7f\xda\x06\x4a\xe4\xe5\xfe\x12\x43\x2c\xc7\xb1\x58\xd7\x85\x71\xbd\x94\xbb\x42\xfd\x3b\x15\x55\xff\x8d\xcb\x15\x38\xdc\xb3\x39\x1e\x1e\xd6\x94\x23\x56\x50\xbb\x6c\x60\xc9\xcf\x96\xa1\x12\xb7\xf4\x2c\x88\x9b\xfc\x0e\x7e\x07\x00\x00\xff\xff\xe4\xf6\x2f\xa1\x23\x03\x00\x00")

func templatesClient_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_goTmpl,
		"templates/client_go.tmpl",
	)
}

func templatesClient_goTmpl() (*asset, error) {
	bytes, err := templatesClient_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x91\xc1\x4e\x83\x40\x10\x86\xef\xfb\x14\x7f\x30\x31\xd0\x50\x1e\x80\x84\x83\x56\xa3\x3d\x98\x98\x46\xcf\x06\x96\xa9\x60\xda\xd9\x75\x77\x6a\xd3\x10\xde\xdd\x40\x77\x6b\x3d\xee\xc0\xfc\xdf\x37\x33\xc3\xb0\x44\x4b\xdb\x9e\x09\x89\xde\xf5\xc4\xf2\xc1\xfd\x3e\xc1\x72\x1c\x55\xbf\xb7\xc6\x09\x3a\x11\x7b\xfe\xa4\x94\x9c\x2c\x29\x60\x35\x3f\x17\xa8\x60\x9a\x2f\xd2\xa2\x00\xa0\xa9\x3d\xbd\x6f\xd6\x8b\x12\x5e\x5c\xcf\x9f\x73\xb1\xd3\x25\x9e\x45\xec\x2a\x04\x68\xc3\x5e\x26\x62\x7d\xd8\xc9\xfd\xb9\x03\x15\x92\x61\x28\xee\x5e\xd7\x0f\xb4\x2d\x42\x71\x1c\x13\xa5\xac\x33\x1a\x4c\xc7\xc0\x4b\x9b\x4b\xc3\xff\x84\xac\x0c\x4a\xa8\x14\x70\x03\xed\xa8\x16\xf2\x53\x2b\x82\x3a\xf0\x53\x3b\x68\x54\xe1\xcf\x98\x55\x46\xef\x7c\x76\x65\x3a\xfe\xe9\xa6\x59\xa6\x00\x47\x72\x70\x0c\x1d\x74\x1c\x7d\x1f\xc8\xcb\x22\xd5\x11\x9a\x83\xb8\xb5\xa6\x67\x89\xa3\xe7\xf3\xd2\x5e\x48\x3a\xd3\x4e\xd3\x3d\x3d\xbe\x25\x39\x1a\xd3\x9e\xa6\x57\x92\x95\x57\x4b\x2d\x36\xe4\xad\x61\x4f\xb3\x7b\x84\x15\x9d\x2e\x02\x29\xd5\x45\x9c\xfb\xf6\x42\xba\x26\x9c\x93\x33\x35\xdd\x92\xb8\x9d\x6f\xf7\x1b\x00\x00\xff\xff\xb6\x6a\x89\xc7\xd8\x01\x00\x00")

func templatesClient_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_nimTmpl,
		"templates/client_nim.tmpl",
	)
}

func templatesClient_nimTmpl() (*asset, error) {
	bytes, err := templatesClient_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\xeb\x1a\x31\x10\xc5\xef\xf9\x14\x43\x10\x56\x41\xd3\xfb\xc2\x1e\x54\x2c\x78\xf1\xa0\xf5\x1c\xd2\xdd\xb1\xa6\xcd\x4e\xb6\x49\x76\xa9\x0d\xf9\xee\x25\xbb\x6a\x15\x0a\xfd\xe7\x96\xc9\x9b\x97\x37\x3f\x26\xc6\x15\x34\x78\xd1\x84\xc0\x6b\xa3\x91\x82\xec\x6e\xe1\x6a\x89\xc3\x2a\x25\xa6\xdb\xce\xba\x00\x0e\x7f\xf6\xe8\x83\x67\x31\x82\x53\xf4\x0d\x61\xf6\x63\x09\xb3\x01\xca\x0a\xc4\x09\xdd\xa0\x6b\xf4\x90\x12\xbb\x38\xdb\x82\x88\x71\x36\x88\xcf\xda\x20\xa9\x16\x0f\x76\xf7\x2b\xa4\x04\x77\x2b\x18\x1f\x0f\xaa\xc5\x94\x20\x46\xa4\x26\x25\xc6\x36\xeb\xd3\x4e\x9e\x8f\x7b\xa8\x80\xc7\x28\x36\xca\xe3\xf9\xb8\x4f\x89\x33\xc6\x6a\xa3\xbc\x87\xed\x18\xae\x64\x00\x90\x03\x83\x94\x9a\x74\x90\x72\xee\xd1\x5c\x16\x53\x3d\x9f\x7c\x15\x5f\x95\x47\xd9\x3b\x03\x15\x3c\x9c\xdf\x05\x1e\xbd\xd7\x96\xa0\x7a\x8e\x26\x4e\x53\x69\xbe\xf8\xa7\x52\x5c\x51\x35\xe8\xbc\xe8\xbb\x46\x05\x9c\x47\xbe\xb5\x14\x90\xc2\xea\xcb\xad\x43\x5e\x02\x57\x5d\x67\x74\xad\x82\xb6\xf4\xe9\xbb\xb7\xc4\xd3\x5f\xa7\xff\x61\x7b\xfb\x71\x04\xb4\xa3\xa6\xb3\x9a\xc2\x1d\x54\xf5\x8a\x6d\x1a\xf9\xc1\x2e\xf7\x3d\xa9\x78\x0c\x52\xf5\xe1\x2a\xa7\xb8\xa3\x72\x09\x83\x32\x2f\x84\x8a\xa2\xc8\x3a\xc8\x3a\xeb\xf4\xef\x31\x32\x4c\x0d\x59\xda\x63\x51\x14\x1f\x84\xb0\x7e\xf5\xe0\xe5\xa0\x4c\x5a\x30\x96\x97\x0a\xa9\x19\x37\xe8\x4f\x00\x00\x00\xff\xff\xa6\x2f\x33\xac\x61\x02\x00\x00")

func templatesClient_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_pythonTmpl,
		"templates/client_python.tmpl",
	)
}

func templatesClient_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_service_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5f\x6b\xdb\x3e\x14\x7d\xb6\x3e\xc5\xfd\x09\x53\xec\xdf\x1c\xfb\x7d\xd0\x97\xb6\xd9\x28\x74\xa5\x94\x6c\x7b\x2c\xae\x7d\x9d\xa8\x75\x24\x47\x92\x53\x82\xa6\xef\x3e\xf4\xa7\x89\x9b\x96\x32\x06\x7d\x5b\x20\x10\xe9\x1c\x9d\x7b\xce\xbd\x97\x18\x33\x83\x16\x3b\xc6\x11\x68\xd3\x33\xe4\xfa\x4e\xa1\xdc\xb2\x06\xef\x96\x82\xc2\xcc\x5a\x32\xd4\xcd\x63\xbd\x44\x30\xa6\xbc\x09\x3f\xaf\xeb\x35\x5a\x4b\x88\x31\x69\x24\x33\x77\x05\x9f\x4f\xa1\x8c\x18\x5b\x0f\x42\x6a\xc8\x48\x42\x91\x37\xa2\x65\x7c\x59\x3d\x28\xc1\x29\x49\x28\x47\x5d\xad\xb4\x1e\x28\x21\x00\x00\xc6\x80\xac\xf9\x12\x21\x7d\x2c\x20\xdd\x7a\x95\x2b\x76\x7f\xe9\x15\x6e\x6a\xbd\x52\xde\x86\xa3\x52\x63\xd2\x47\x6b\x69\x7c\x87\xbc\xf5\x50\x4e\x88\xde\x0d\xde\x61\x28\x0f\xd1\x16\x71\x1e\x5f\xab\x7f\x43\xbd\x12\xad\x02\x6b\xa7\x70\xe7\xf0\xce\x11\xd2\x6d\xf9\x65\xe4\xcd\xb9\x58\xaf\x91\x6b\xcf\xab\x2a\x30\x26\xdd\x76\xd6\x86\xba\xd6\x92\x6e\xe4\x0d\x64\x0a\xfe\x3f\x6a\x83\xb5\xb9\xe7\xc6\x32\xe1\x2a\xf3\x37\x37\xb5\xac\xd7\xca\xda\xdc\x9f\x6e\x51\x8f\x92\x2f\x76\x03\x2a\x27\x1b\x43\xcd\x80\x75\x80\x1b\x67\xe2\x07\xca\x7b\xa0\x5f\xe7\x0b\xea\x2c\x24\x89\x31\xac\x03\x8e\xe0\xdf\xaa\xe1\x4c\xb4\x3b\xa0\x0e\x83\x6d\x2d\x61\x84\xa8\x1a\x90\x89\x53\xaf\xec\x3e\x12\xd5\x50\x00\x4a\xe9\x52\xaa\x32\x0c\xbc\x6c\xc5\x2d\x6e\xae\x85\x7b\x94\xf9\x6a\xc5\x01\x3b\xab\x15\x7e\xbf\xbd\x84\x97\xa5\xc5\x28\x1b\x74\xa3\x89\xe5\x3f\x3d\x97\xda\x5b\xd8\x33\xac\x2d\x60\x85\x75\x8b\x52\x15\xb0\x19\x51\xee\x42\x13\x72\x92\x24\x2e\xa8\x94\xf0\xdf\x29\x70\xd6\x83\x21\xc9\x7b\x11\xa5\xef\x16\x8c\x85\x23\xfb\x10\x81\x8f\xbd\xc2\x03\xfc\x12\x9b\xc1\xf3\x8a\x24\x89\xfb\xb6\xd8\xa1\xf4\x5d\x28\x9d\x72\x79\xde\x0b\x85\x59\x4e\xde\xeb\xad\x53\x3a\xd4\x0e\x1d\x74\x9b\x5c\x5e\xe3\xd3\x05\x36\xa2\x45\x99\xed\x15\xf3\x32\x5c\x65\x27\x63\x4e\x0e\xee\x26\x1a\x41\x80\xb3\x9e\x1c\x19\x0c\xdc\xe3\xe1\x5f\xcc\xaf\xe6\x8b\x39\xf5\x12\x55\x05\x8d\xc4\x5a\x23\x48\xdc\x8c\xa8\x34\x88\xfb\x07\x6c\x34\xd9\x8b\xbf\x3d\xd2\xa8\xf1\x7a\xaa\x1f\x31\xd4\x49\xe4\x8f\x5c\xd7\x9f\x4c\xaf\x42\x3a\xaf\xe2\x9a\x65\xed\xdf\x47\x7c\x33\xe1\x8b\xb7\x9b\x68\xdf\xda\x93\x48\x0e\x37\xbf\x60\x21\xae\xc4\x13\x4a\x27\x12\xa2\x73\xd6\x47\xd9\x7f\xab\xff\x87\xab\x7f\x38\x10\xf7\x9f\x3c\x39\x4e\x0f\xbf\x03\x00\x00\xff\xff\x3d\x5a\x89\x7e\xad\x06\x00\x00")

func templatesClient_service_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_service_goTmpl,
		"templates/client_service_go.tmpl",
	)
}

func templatesClient_service_goTmpl() (*asset, error) {
	bytes, err := templatesClient_service_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_service_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_service_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xc1\x6e\xbb\x30\x0c\xc6\xef\x79\x0a\xab\xe2\x40\x51\xcb\x03\x20\x71\xea\xa9\x87\xff\x5f\x55\xa7\x9d\xa6\xa9\x4a\x83\xd7\xb2\x91\x84\x39\x69\xa4\x2a\xf2\xbb\x4f\x10\x18\x95\xba\x13\x60\xfb\xfb\xbe\x9f\x4d\x8c\x5b\x68\xf0\xa3\x35\x08\x2b\xd5\xb5\x68\xfc\xc9\x21\x85\x56\xe1\xc9\xb4\x7a\x05\x5b\x66\xd1\xea\xde\x92\x07\x2d\xc9\x5d\x65\x37\x7f\xa6\x69\x11\x23\x90\x34\x17\x84\xec\x6b\x03\x59\x80\xaa\x86\x72\x3f\x4e\x38\x58\xb4\x31\x66\x81\x39\x46\x34\x0d\xb3\x10\x31\x66\x53\xca\x7f\xa9\x71\xd4\x0c\x2f\xcc\xc2\xdf\x7b\x14\x00\x31\x4e\x85\x99\xa6\x80\x1a\xec\xf9\x13\x95\x17\x00\x30\x85\x17\x15\xec\x12\xc5\x50\x33\x52\x63\x51\x81\xf3\xd4\x9a\x8b\x10\x3d\x59\xb5\xf8\xbc\x50\x28\x72\x05\xb3\x60\x0d\xd5\x73\x06\x40\x2d\x00\x08\xfd\x8d\xcc\x73\x37\x4f\x99\x95\xda\x8c\x49\x95\x2a\xcf\xd2\xe1\xeb\x71\xbf\x16\x8f\x47\xd0\xc3\x15\xf4\xb8\xd2\x3f\xf4\x57\xdb\x38\xe6\x99\x25\x0b\x7a\x2a\x26\xeb\x22\x77\x14\x06\x90\xc7\x6b\x2c\x89\x49\x90\x80\x0f\x64\xd5\x41\x92\xd4\x8e\x39\xc1\x8f\x3d\x6b\x3c\x1a\x7f\x44\x1f\x64\xc7\x3c\xf2\x77\xe8\x81\xd0\xf5\x50\x83\xa3\x50\x26\xea\x92\xf0\xfb\x86\xce\xe7\x8f\x9e\x3b\xd9\x75\xbf\x9e\xcb\xe6\xde\xbe\xfd\xe9\xfe\x9e\x0f\xb6\xe5\xd9\x36\xf7\xb5\x98\x7f\xe5\xfc\xfc\x09\x00\x00\xff\xff\xaa\x71\xf6\xd1\x48\x02\x00\x00")

func templatesClient_service_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_service_nimTmpl,
		"templates/client_service_nim.tmpl",
	)
}

func templatesClient_service_nimTmpl() (*asset, error) {
	bytes, err := templatesClient_service_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_service_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_service_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x91\x41\x6b\xe3\x30\x10\x85\xef\xfe\x15\x83\xf0\x21\x61\x1d\xff\x80\x80\x0f\xcb\xb2\x0b\x0b\x6d\x09\xa1\xf4\x2a\x14\x7b\x1c\x8b\xda\x52\x3a\x92\x5c\x82\x3a\xff\xbd\xc8\x4a\x82\xeb\x8b\xc7\x6f\x78\xdf\x93\x9f\x62\xdc\x41\x87\xbd\x36\x08\xa2\x1d\x35\x1a\x2f\x1d\xd2\xac\x5b\x94\x97\xab\x1f\xac\x11\xb0\x63\x2e\x8a\x76\x54\xce\x41\x8c\xf5\x8b\x9a\x90\x79\x5f\x00\x40\x32\x82\x94\xda\x68\x2f\xe5\xc6\xe1\xd8\x57\x90\x19\xdb\xbc\x4f\x4f\x92\xeb\xac\x42\x73\x5b\x17\x45\x8c\x40\xca\x9c\x11\xca\xf7\x0a\xca\x19\xf6\x0d\xd4\xcf\xe8\x07\xdb\x39\x48\x71\x77\x7a\x8c\xe5\x7c\x5b\xe4\xe0\xcd\xa2\x1c\x14\xa9\xc9\x31\xaf\x72\x84\x10\x2b\x68\x9f\xa8\x7d\xc2\x96\x73\xfd\x2f\x98\xf6\x8f\x9d\x26\x34\x7e\xa1\xdf\x2d\x09\xd5\x33\xc7\x88\xa6\x5b\xc9\xff\x3d\x68\x07\xd3\x12\x0a\xbd\xa5\x7c\x88\x37\xa4\x13\x73\x9e\xff\x9a\xee\x62\xb5\xf1\x2b\x93\x10\xe2\x31\x07\xd2\xd0\xac\x7f\xbc\x3e\x29\x87\x32\xd0\x08\xbf\x32\xe0\x88\xce\x06\x6a\xf1\xa0\xfc\xb0\x82\x10\xfa\x40\xe6\x87\xd3\xa1\x73\xda\x9a\xfa\x71\x06\xf8\x82\x57\xfb\x64\x3f\x91\x98\x37\x81\x74\xee\xe3\xf8\x9b\xce\x8e\xb9\x82\x01\x55\x87\xe4\x9a\xdb\xbb\x82\xcb\x52\x55\xf3\x11\x90\xae\x32\x7f\x6c\x53\xfd\x68\xba\xd4\x45\xba\xff\x34\xa6\x4b\xfe\x0e\x00\x00\xff\xff\x24\x5c\xc6\x87\x0c\x02\x00\x00")

func templatesClient_service_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_service_pythonTmpl,
		"templates/client_service_python.tmpl",
	)
}

func templatesClient_service_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_service_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_service_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_utils_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x5d\x6f\xdb\x36\x14\x7d\x16\x7f\xc5\x9d\x80\x01\x64\xa2\xd2\x0f\x79\xca\x80\x3c\x74\xeb\x8a\x62\xd8\xb2\xcc\x4e\xb1\x87\xa2\xa8\x69\xe9\xca\xe6\x62\x91\x12\x75\x95\xcc\x33\xf4\xdf\x07\x52\xb2\x23\xb9\xb6\x91\x01\x19\xd0\x97\xc4\xfc\x38\xbc\xe7\x9c\xfb\x01\x6d\xb7\x6f\x20\xc3\x5c\x1b\x84\x38\x5d\x6b\x34\xf4\xa5\x21\xbd\xae\xbf\x2c\x6d\x0c\x6f\xda\x96\x95\x2a\x7d\x50\x4b\x84\xed\x56\xde\x75\x3f\x6f\x55\x81\x6d\xcb\x98\x2e\x4a\xeb\x08\x38\x8b\xe2\xc5\x86\xb0\x8e\x59\x14\xa3\x49\x6d\xa6\xcd\x72\xf2\x57\x6d\x8d\xdf\xd0\xd6\xff\x35\x48\x93\x15\x51\xe9\x7f\xe7\x05\xf9\x7f\xa4\x0b\x8c\x99\x60\x2c\x6f\x4c\x0a\x01\x87\x3f\xda\x6c\xc3\x33\x45\x0a\xb4\x21\x74\xb9\x4a\x71\xdb\x0a\xe0\xda\xca\x29\xaa\x0c\x5d\x02\xe8\x9c\x75\x02\xb6\x2c\x5a\x84\x05\xfc\x70\x03\x3e\x96\xfc\x4d\xb9\x7a\xa5\xd6\x01\x2e\x58\xa4\xf3\x70\xfa\xdd\x0d\x18\xbd\xf6\xd7\x23\x87\xd4\x38\xe3\x97\x01\xc8\xa2\x96\xed\xf6\x02\x7d\x79\x8b\x4f\x5d\x14\xbe\x10\x89\xbf\xc7\x5a\xc6\x26\x13\xc8\x2c\x7c\xb8\xbf\xbf\x03\x87\x55\x83\x35\xc1\x93\xa6\xd5\x7e\xb1\xb0\xd9\xa6\x93\xc0\x53\xef\x51\x67\x8e\xc8\xec\x14\xab\x3f\x35\xad\x82\xa4\x02\x69\x65\xb3\x04\x1a\xb7\x9e\x91\x83\x9a\x9c\x36\xcb\x04\x0e\x95\x26\xb0\x0a\xf1\xeb\x04\xaa\x06\xdd\xe6\x4e\x39\x55\xd4\x50\xa8\xf2\x53\x07\xf9\x3c\xb6\xe5\xc2\x5b\x2a\xa7\x58\x97\xd6\xd4\x38\xf2\xc6\x66\x9b\xbd\x3d\x07\xde\xbe\xd4\x1c\x00\x80\x7e\x3b\x95\x41\xcf\x81\x8e\x04\xba\x30\xc7\x48\x8b\x67\xef\x3c\xc9\x91\x77\xb6\xa1\x17\xd9\x77\x6b\xcf\x99\xf7\x4a\x56\xbd\x40\x65\x30\xe5\xa4\xc8\x13\xe4\x4f\xd1\xf6\x82\xe1\xb9\x9e\x5f\x2b\xe1\x93\x09\xa4\x0e\x15\x21\xd0\x0a\x77\xee\xfa\xfa\xae\xf6\x65\x10\xb0\xa1\xc6\xc3\xe1\xd1\x64\xfe\xb7\xda\xa8\xe4\xc7\xe9\xaf\x72\xaa\x9e\xfe\xf0\xe4\xe1\x06\x16\x8d\x5e\x67\x61\x31\x0b\xf4\x79\x88\x3f\x72\x2c\x40\x75\x0e\xa9\x7c\xdb\xd0\xea\x43\x90\xef\x83\xc5\x71\x9f\x8c\xdd\xd3\xdd\x91\x9c\x21\xf1\xd8\x5f\xb5\x4e\xff\xa3\x48\x5b\x13\x27\x23\xb0\x08\xa8\x96\x45\xb9\x75\xf0\x90\xc0\xa3\xd7\xea\x94\x59\xe2\x2e\x67\x41\x44\x74\xf8\xe8\x43\x02\x79\x41\x72\x56\x3a\x6d\x28\xe7\xf1\xf7\x8f\x71\xf2\x28\x84\x57\xb7\x9f\x0b\xa9\xec\x46\xa2\x7c\x67\xbd\x94\xe7\x7c\x1f\x13\x0a\xbb\xec\x04\x7b\x13\xa8\x4e\x27\xb2\xdb\xeb\xf4\x56\x81\x6f\xef\x65\x78\x92\x0b\x16\x85\xa3\xaf\x15\x55\xf5\xc0\xa5\x4a\xbe\xcd\xb2\xa3\x3a\xa0\x17\x32\x28\xee\x4a\xfe\x1c\xc6\x00\xef\x3b\xf3\x9d\xaf\x15\x87\xa5\xc3\x1a\x0d\xc1\xf4\xfd\x4f\x57\x57\xd7\xd7\x7e\x24\x21\xa3\x4d\x89\x10\x2e\xf8\x21\x2d\xef\x75\x81\x1e\xd2\x4f\xd8\x5f\x66\xbf\xdf\x82\x7d\x44\xe7\x74\x86\x50\x3c\x6f\xf6\xad\x40\x70\xe1\xb1\x02\x06\xf7\xb9\x00\xfe\xe9\xb3\x1f\xb3\xc3\xa2\xed\xa9\x75\x07\x7c\x1f\x8b\x5f\x90\x90\xef\xad\x2b\x14\xf1\x79\x3c\x87\xcb\x8e\x46\xa0\x78\x75\x0d\x97\x30\x8f\xe7\x62\x38\xa1\xfb\x40\xf7\xf8\x37\x7d\x45\xcc\x6f\x9e\x20\xe6\x8f\xfe\x5f\x62\x1f\x4d\x71\xcc\xb3\xc6\x9c\x71\x6d\x84\xe1\x8b\x9e\x84\xe8\xd8\x79\x72\x54\xef\x5b\x3a\x84\xbf\x53\xae\x46\xcf\xe7\x72\xc8\xe6\x72\x1e\xcf\x93\xbe\xd0\xf8\x42\x9c\x6b\xec\xbe\xa7\x59\x74\x41\x70\x13\xf2\xce\xa9\x16\x6c\xd0\xf7\x07\x6a\xc6\x46\x37\xe6\x8c\xd5\x23\xcc\x37\xa4\xe6\x80\x66\xdf\xc5\xbb\xce\x1c\xd4\xc0\x38\xf9\xbb\x7b\xfe\x09\xff\xe5\x84\x26\x0b\x1f\x49\xff\x06\x00\x00\xff\xff\x85\x5d\xe0\x5b\x46\x09\x00\x00")

func templatesClient_utils_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_utils_goTmpl,
		"templates/client_utils_go.tmpl",
	)
}

func templatesClient_utils_goTmpl() (*asset, error) {
	bytes, err := templatesClient_utils_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_utils_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClient_utils_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4b\x8f\xdb\x36\x10\xbe\xfb\x57\x0c\x1c\x18\x96\xba\x96\xc2\xb5\x83\x3c\x8c\xb8\x97\xa2\x28\x7a\xe9\xc9\x39\x15\x85\x43\x8b\xa3\x15\x1b\x89\x14\xc8\x51\x12\x25\xc8\x7f\x2f\x48\x4a\xb2\xe8\x75\xd2\x3d\x04\x58\x48\x5c\xce\xe3\x9b\xd7\x37\xf2\xd7\xaf\x19\x08\x2c\xa5\x42\x58\x16\xb5\x44\x45\xa7\x8e\x64\x6d\x4f\x6d\x4f\x95\x56\x4b\xc8\xbe\x7d\x5b\xc8\xa6\xd5\x86\x40\x70\x42\x92\x0d\x8e\xff\xfb\xf3\x62\x21\xb0\x84\x07\x54\x68\x38\xe1\xc9\x94\xc5\x6e\xb7\x7b\x93\x88\x0d\xd4\xba\xe0\xf5\x89\xbe\x1c\x8e\xa6\xc3\x74\xbf\x00\x00\x58\x2e\x97\xfe\x3d\xea\xc3\xa0\xef\x7d\x41\xa9\x4d\xc3\xc9\x2b\x48\xd5\x76\x04\xc1\x48\xc0\xc1\x63\x03\xf5\x2d\xfa\x9b\xd1\x35\x1c\xa0\xb3\x18\xfe\x0d\x2e\xbe\x68\x85\x20\x4b\x20\xd3\xe1\xc6\xeb\x6a\xaa\xd0\x7c\x92\x16\xa1\xe1\xe6\x03\x70\x0b\x1d\x15\x8b\x20\xea\xe8\x82\x32\x46\x62\xc9\x48\xf5\x10\x00\x43\x40\x39\xe0\x67\xd8\xc3\xfb\x2d\x63\xaf\x33\xf6\x22\x63\xdb\xe3\x96\xed\x99\xfb\xbb\x63\xaf\xf6\x8c\xbd\x8f\x72\x23\xd3\x07\x8f\x3e\x8f\x72\x0a\xf6\x72\x39\x4f\xca\x45\x9d\x4f\x87\xd2\xe8\xc6\x1d\x2c\xf1\xa6\x4d\x44\x3a\x99\x60\x6d\xf1\x29\x0e\x3a\x2a\x6e\xfa\xc0\xcf\x05\xb6\x04\xc7\xbe\xc5\xdf\x8d\xd1\xe6\xe2\xab\xe5\xd6\x86\x72\xc8\x12\x94\x26\x90\x56\x2a\x4b\x5c\x15\xe8\xba\x18\x41\xa4\x17\x33\xc3\x5d\x49\x27\x7f\xc9\xfa\x2f\x1d\x26\xc2\xc3\x82\x36\xa1\x82\xfa\xfc\x2f\x16\x94\xc3\x1f\x9a\x60\x65\xf2\x35\xac\x7c\x17\x13\x91\xa6\x4f\x05\x75\x87\x19\xf0\xcd\xbc\x93\x5f\x44\xee\xde\xd4\xb5\x35\x26\xe9\xdf\xfb\xdd\x3f\x83\x7f\x83\xd4\x19\x05\xc9\x7a\xc5\x5e\x88\x6c\xc5\xb6\xe1\x71\x74\x8f\xfd\xf4\x58\xd9\x35\xac\xa2\xf2\x26\x22\xef\x91\x9b\x0d\x88\xbc\xd1\x8a\x2a\x77\x10\xbc\x77\xaf\x4a\x77\xe1\x5e\xaa\x8e\xd0\x9d\x2c\x16\x5a\x89\x4d\xe4\x00\x4e\x13\x29\x5c\x64\x6e\x30\xe7\xac\x48\x5d\x01\x3c\x77\x4e\x05\xaf\x8b\xae\x76\x8a\xba\x2c\x2d\x52\xe2\xb2\x9a\x69\xc6\xd4\x89\x98\xe1\x4a\xbc\xff\x1e\x39\xf6\x13\x11\x3c\x4b\x6c\x6f\x09\x1b\x18\x83\xd9\xcc\x98\x31\x14\x89\x45\x25\xa3\x0a\x87\x1e\x96\xf0\xee\xf8\x1b\x84\xe0\x72\xaf\xf2\x67\x19\x44\x42\xa3\xf5\xfd\xab\xf8\x47\x04\xae\xfa\xc9\x3d\x48\x55\xea\x0d\x7c\xc2\x2b\x86\x7a\xe8\x2b\x62\x4e\xf0\x51\x9e\xb7\x98\xf3\xac\xe2\x4a\xd4\x08\xae\x35\x70\xc6\x52\x1b\x84\xfb\x37\xaf\x18\x34\xda\x12\xd8\xde\x27\x58\xa1\x41\x90\x2e\xae\x38\x1a\xc7\x65\xa9\xd5\xdc\x2e\x9f\x13\xd5\x65\xe4\x9b\x0e\x6f\xbd\x30\xe6\xdb\x33\x78\x67\xbd\xd1\x16\xce\x58\xf0\xce\x0e\xc8\xae\x04\x6a\x3d\x56\x00\x6a\xe4\x2d\x08\xde\x47\xb6\x04\x07\x1f\x4a\xde\x7c\xf0\xd3\xea\x91\x0c\xb6\x35\x2f\x30\x71\x88\x07\xe7\x37\xbd\x8c\xf0\x8f\x88\x7f\xd3\xd9\x6c\xf8\x87\xc1\x0f\x31\x0f\xf5\x12\xbc\xaf\xe5\x43\x45\x96\x7f\x94\xea\x61\x13\xb2\x9d\x5f\xf9\x2e\xf1\x9a\xae\x27\xc3\x5d\x8f\x45\x9c\xd7\xca\x07\xe0\xfb\xe3\x63\xa0\x34\xa7\xe6\x24\xad\xb0\x14\x07\x3b\xb4\x36\xf3\xfa\x83\xff\x1f\xe4\x16\xa9\x47\xb8\xb1\xee\x65\x60\x03\x85\x6e\x50\xed\x67\x71\xe8\xac\x75\x3d\x7c\x2e\x3c\x01\xa6\x6f\x97\x00\xb7\x69\x1f\xd3\x77\xae\x2b\x15\x84\xdd\x60\xe7\xb7\x07\x60\x90\xfd\x0a\x77\xfe\x13\x12\x0b\xee\x5f\xb3\x49\xb6\xbb\x92\x65\xbb\x97\x41\x98\xb1\xfb\xd1\x70\xcc\x68\x52\xfa\xdf\x6d\x12\x72\x71\x3b\x0c\x0e\xc0\xcf\x36\x09\x6a\x29\x3c\x7f\x0e\x0e\xc0\x8b\xc3\x6a\xbb\x52\x58\x79\xb9\xd3\x7b\xc9\xa6\xe5\x3d\x00\xbf\x05\xf6\xa8\x3b\xeb\x55\x31\x2d\x58\xb7\xf8\x93\x65\xb6\xdc\x40\xd8\x9e\x01\x20\xfd\x7e\x6b\x1f\x1b\xdf\x3d\x32\x76\x3f\x5e\x50\x09\xff\x1b\xe5\xbf\x00\x00\x00\xff\xff\xeb\x57\xd3\xe7\xc9\x08\x00\x00")

func templatesClient_utils_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClient_utils_pythonTmpl,
		"templates/client_utils_python.tmpl",
	)
}

func templatesClient_utils_pythonTmpl() (*asset, error) {
	bytes, err := templatesClient_utils_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client_utils_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x2c\x49\x55\xaa\xad\xe5\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xa8\xae\xd6\x0b\x80\x30\xfd\x12\x73\x53\x6b\x6b\xb9\xb8\xaa\xab\xf5\x9c\xf3\xf3\x4a\x52\xf3\x4a\x20\xbc\xd4\xbc\x94\xda\x5a\x2e\x40\x00\x00\x00\xff\xff\x38\x57\x68\x75\x42\x00\x00\x00")

func templatesDateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDateTmpl,
		"templates/date.tmpl",
	)
}

func templatesDateTmpl() (*asset, error) {
	bytes, err := templatesDateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/date.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnum_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcc\xbd\xaa\xc2\x40\x14\xc4\xf1\xfe\x3c\xc5\x10\xb6\xb8\x17\x34\x0f\x20\xa4\xb5\x14\x0b\xb1\x95\x25\x7b\x5c\xc2\x26\x9b\xc5\x7c\x40\x38\xcc\xbb\x8b\x8a\x95\xdd\x6f\xa6\xf8\x9b\x05\xbd\x77\x59\x51\x69\x5e\x86\x5b\x1c\x2b\x52\x8a\x6f\x93\x8f\x0a\xb3\xfa\x9c\x22\x29\xf3\x56\xde\xeb\xe4\x07\x25\x5f\xba\x6c\x45\x49\x91\x76\xcc\xd3\x8c\x3f\x31\xdb\xe3\xe1\x73\x54\xb8\xb4\x83\x5b\x71\x68\x50\x1f\x3b\xed\xc3\x44\x0a\x00\x98\xb9\xf5\x27\x80\xe6\xf3\x5f\x7d\xbf\x28\x69\xa6\x39\x90\xf2\x2f\x5f\x3d\x03\x00\x00\xff\xff\x7e\x16\x9a\x45\xa0\x00\x00\x00")

func templatesEnum_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnum_goTmpl,
		"templates/enum_go.tmpl",
	)
}

func templatesEnum_goTmpl() (*asset, error) {
	bytes, err := templatesEnum_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGeneric_mainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x1c\xc9\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x3f\x85\xb8\x9a\x39\x95\x04\xfd\x4a\x68\x0d\x52\xec\x2a\xe4\xee\xa5\xdd\x3d\x78\xee\x8d\x5d\x8d\x29\x0f\x1a\x2f\xad\x65\x8a\x5a\xd9\x9c\xeb\x94\xcd\x1c\x81\x25\xf5\x90\xc1\xf4\x06\xd0\x6f\xab\x1f\x7f\x7f\x07\x02\xee\xb4\x16\x81\x27\x00\x00\xff\xff\xdc\x57\x73\x81\x49\x00\x00\x00")

func templatesGeneric_mainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGeneric_mainTmpl,
		"templates/generic_main.tmpl",
	)
}

func templatesGeneric_mainTmpl() (*asset, error) {
	bytes, err := templatesGeneric_mainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/generic_main.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIndexHtmlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x4e\x03\x21\x10\x86\xef\x7d\x8a\xc9\xde\x65\xd2\x1e\x0d\xc5\x98\x78\xd1\x93\x89\x7d\x01\x0a\xb3\x05\x03\x0b\x01\xd6\xb8\x21\xbc\xbb\xd9\xa2\xd9\x3d\x78\xfb\x08\xf3\xf1\x0f\x7f\xad\x9a\x46\x3b\x11\x0c\x76\xd2\xf4\xcd\x4c\xf1\x6e\x68\xed\xc0\x57\x10\x07\x00\x00\x6e\x48\xea\x8e\xf7\x63\xb1\xc5\x91\xa8\x95\x5d\x56\x68\x0d\x3e\x28\x7d\x51\xe2\xd8\x2f\xba\x83\x9b\xc4\xaf\x41\x2f\x3b\xdf\x1c\x05\xfc\x63\x9b\xe3\x6e\x26\x6e\x7c\x31\x36\x43\xbe\x0f\x81\xcd\x20\xe7\x12\xbc\x2c\x56\x49\xe7\x16\xb8\xd1\x44\x49\x16\xd2\x30\xa6\xe0\x81\x25\xe9\x1d\x8c\xd6\x11\x5c\x17\xe0\x12\x4c\xa2\xf1\x3c\x98\x52\x62\x7e\x44\xbc\xd9\x62\xe6\x2b\x53\xc1\xe3\xdb\xec\x63\x56\xd2\x11\xde\xc2\xc3\x6a\x0d\xe2\x17\x38\x4a\x01\x31\x85\x4f\x52\x85\x6d\x1b\xe1\x6e\x25\x8e\x26\xed\x3f\x74\x12\x5b\x96\x8c\x56\x07\x95\x71\xab\xf3\x69\x7d\xf5\x2c\xa3\x65\x3d\xe7\xf9\xfd\x15\x5e\x82\xca\xb0\x26\x71\x34\xa7\xbf\xca\x7a\x4f\x1c\x7b\xf5\xb5\xd2\xa4\x5b\x3b\xfc\x04\x00\x00\xff\xff\x56\x0e\xa1\x8a\xa2\x01\x00\x00")

func templatesIndexHtmlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIndexHtmlTmpl,
		"templates/index.html.tmpl",
	)
}

func templatesIndexHtmlTmpl() (*asset, error) {
	bytes, err := templatesIndexHtmlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/index.html.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInit_pyTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\xcb\x2c\x89\x2f\xa8\x54\x52\xd0\xad\xad\xe5\x02\x49\xa4\xe6\xa5\x80\xd9\x80\x00\x00\x00\xff\xff\x6d\xcf\x4b\xe3\x25\x00\x00\x00")

func templatesInit_pyTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInit_pyTmpl,
		"templates/init_py.tmpl",
	)
}

func templatesInit_pyTmpl() (*asset, error) {
	bytes, err := templatesInit_pyTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/init_py.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInput_validators_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xcf\xc2\x92\x0a\x52\x3c\x0b\x3d\x7a\xf4\xea\x75\x89\xcd\xc4\x0e\x6e\x92\x65\x32\xa9\xc8\xb2\xff\x5d\xd2\x2c\x56\x9d\x53\x18\xbe\x79\xdf\xcb\xb2\x78\x0a\x9c\x08\x3b\x4e\x73\xd5\xf1\xe2\x26\xf6\x4e\xb3\x94\x71\xfe\xd2\x73\x4e\xbb\x75\x35\x41\x72\xc4\xa7\x86\x2c\xb1\x1c\x6e\x04\x38\xce\x59\x14\xaf\x7d\xc3\x39\x3d\x8b\x64\x31\xc6\x53\x40\xac\x93\xf2\x3c\xd1\x98\xc3\xbe\xbd\xef\x9f\x0c\x00\x58\x6b\x71\x3a\xd3\xe9\x03\x1c\x70\x71\x53\x25\x70\xd9\x60\x42\xee\x77\xd6\x5a\x73\xa5\x23\x95\xe2\xde\x09\x47\xd8\x97\x5a\x14\x6f\xf4\x93\xdb\xd8\xc1\x5b\x0c\xe8\xf1\xfd\xa0\x99\xc7\xdf\xea\xd6\xf9\x01\x81\x69\xf2\x5b\x83\x36\x1c\xfa\xea\xe0\x9d\x3a\x0c\xd7\x50\xdc\x1d\xf1\x78\x43\xda\x88\xe3\x42\xff\xbf\xb7\xdf\x4a\x6d\x46\x21\xad\x92\xfe\x48\xcd\xb2\x50\xf2\xeb\x6a\xbe\x03\x00\x00\xff\xff\x71\x8f\x4e\xd5\x5d\x01\x00\x00")

func templatesInput_validators_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInput_validators_pythonTmpl,
		"templates/input_validators_python.tmpl",
	)
}

func templatesInput_validators_pythonTmpl() (*asset, error) {
	bytes, err := templatesInput_validators_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/input_validators_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_middlewareTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\x4d\x6f\x9c\x3a\x14\x5d\xe3\x5f\x71\x1f\x8b\xf7\x20\x9a\x30\x79\x6d\x57\x91\xd8\xb4\x6a\x9b\x4a\x6d\x9a\x26\x53\x65\x51\x55\x91\x03\x97\x60\x05\x6c\x62\x9b\xd0\xc8\xe2\xbf\x57\xfe\x80\x90\xcc\x4c\xda\x91\x46\x82\xfb\x71\xce\xe5\xf8\x5c\x30\xe6\x10\x4a\xac\x18\x47\x88\x05\xed\x75\xfd\xea\xaa\x65\x65\xd9\xe0\x40\x25\xc6\x70\x38\x8e\xa4\xa3\xc5\x2d\xbd\x41\x30\x26\x3b\xf3\x97\xa7\xb4\xc5\x71\x24\x84\xb5\x9d\x90\x1a\x12\x12\xc5\x1c\xf5\xba\xd6\xba\x8b\x49\x4a\xc8\x7a\x0d\x5f\x1d\x96\x31\x99\xaf\xfd\x32\x63\x02\x53\xe0\x89\xe0\x91\x08\x2a\x21\x61\x2e\x26\xfa\xa1\xc3\x17\x10\x94\x96\x7d\xa1\xc1\x90\xa8\x44\x55\x48\x76\x8d\xe5\xdb\x07\x1b\x65\xfc\x86\x44\x15\xc3\xa6\x04\xff\x9b\x62\xaa\x10\x1d\x2a\x1f\xfb\xf1\x33\x44\x47\x37\xe8\x29\x0e\x7b\x99\x0a\x89\x54\x23\x70\x1c\xfe\x38\x0d\xa9\x7a\x5e\xbc\x08\x96\x84\x21\x26\xfe\x14\x0e\xf6\x83\x1a\x62\x47\x15\x2d\x1c\xe7\xfb\xa9\x0d\x89\xc2\x93\x1d\x87\xc7\x75\x37\x2b\x12\x8d\xae\xdd\x18\x60\x15\x64\x27\x48\x4b\x94\xe3\x18\x20\xb3\xa5\x68\x39\xc4\xb5\x4b\xab\x78\x4a\x7b\xfd\x72\x88\x8d\x09\xad\x81\x38\x9e\x40\xb1\x51\xe8\x90\xbf\xf5\x28\x1f\xce\xa8\xa4\xad\x82\xbd\xf8\x77\x73\x11\xea\x7d\x3c\x0b\xa0\x2d\x32\x5e\x4e\xd8\x12\x75\x2f\x39\xfc\x2b\xda\x70\x76\xef\x6a\x2c\x6e\x2f\xbc\xac\x85\xbd\x56\x30\xd4\xa8\x6b\x94\xd0\x2b\x94\x50\x53\x05\x1c\xb1\xc4\x32\x48\xe3\x4f\x29\x11\xed\x0b\xda\xa7\x4b\xd8\xed\x43\xbb\x16\xa2\xb1\xd6\x63\x15\x34\xc8\x13\xd1\x66\xbe\x24\x85\x3c\x87\x23\x9b\x89\xc2\x9c\x5a\xf6\x68\x8f\x82\x44\xd6\xdd\x57\x2b\xa0\x4d\x23\x06\x2c\xed\x99\x4a\xca\x6f\x10\xe6\x66\xd7\x16\xaa\x5c\xe4\xb1\x66\x51\x60\x39\x7d\x36\xcf\x67\x30\x97\x78\x4a\x19\x45\x23\x71\xff\x91\x4c\x89\x8a\x36\x0a\x83\x6a\x27\x94\x97\x0d\xca\x49\xce\x93\xcd\xe6\x0c\xea\x39\xd6\x49\x54\xc8\x35\xd5\x4c\x70\x10\x15\xe8\x9a\xa9\xc5\xa6\xfe\x9d\x82\x81\x22\xe1\xf8\x4b\x83\x7d\x2d\x64\x21\x92\x3e\xb9\xb3\xc3\x87\x29\x96\xe1\x0f\x3d\x2f\x12\xcb\x93\x0c\x3e\x7e\x8e\xaa\x13\x5c\xe1\xa5\x64\x1a\xe5\x0a\x24\x1c\x84\xf8\x5d\x8f\x4a\xa7\x4e\x84\x7b\x2a\x81\x16\x05\x2a\xb5\x11\xb7\xc8\xa7\xdd\x27\x51\xb4\x5e\x87\x04\x68\x97\x71\x56\x71\xef\x05\xab\xe8\x73\xc7\xee\xb0\xac\x17\x79\x09\x9e\x83\xcc\xbe\x9f\x7f\xf6\xc6\x4d\xd2\xec\x23\xea\x64\xf2\x74\x6a\xc5\x9f\x97\x64\x07\xfc\xb4\x71\xbb\x61\xc3\xce\x6d\x21\xfa\x69\x9f\x54\xe7\x10\x07\x90\x21\x73\xda\xf8\xde\xe4\xcd\xd1\xff\xb6\x25\x68\xeb\x9a\xbd\x0c\x97\xe7\x9f\x36\xef\xa1\x10\x25\x5a\x2d\xbc\x10\x6e\x55\xfe\x53\xd3\x86\x78\x21\x9f\xd9\x3e\xb4\xfb\xfa\xb9\x90\x55\xf0\x8f\x68\xb3\xed\x75\x49\x77\x0f\xf5\x7a\xc7\x50\xd6\x21\xd9\x05\xca\x7b\xb4\x3e\x4c\x86\x15\xc8\x94\x44\x63\x4a\x46\x62\x3f\x4d\x76\xfb\xed\x37\xe8\x77\x00\x00\x00\xff\xff\xa1\x9b\x07\xa6\xa7\x06\x00\x00")

func templatesOauth2_middlewareTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_middlewareTmpl,
		"templates/oauth2_middleware.tmpl",
	)
}

func templatesOauth2_middlewareTmpl() (*asset, error) {
	bytes, err := templatesOauth2_middlewareTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_middleware.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOauth2_middleware_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x41\x8b\xdb\x3c\x10\xbd\xfb\x57\x0c\xfe\x2e\x4e\xf0\x9a\xfd\xda\x9e\x16\x02\x3d\x95\x9e\x96\x16\x7a\x2b\x45\x68\xa5\x51\xa2\x46\x91\xb2\x1a\xb9\x21\x18\xff\xf7\x22\x45\x49\xe4\xc4\x0b\x0b\xf5\x25\x61\xf4\xe6\xbd\x99\xa7\xd1\x0c\xc3\x03\x48\x54\xda\x22\xd4\x8e\xf7\x61\xf3\x81\xed\xb4\x94\x06\x0f\xdc\x23\xdb\x1f\xc3\xc6\xd9\x1a\x1e\xc6\xb1\x52\xde\xed\x40\xf5\x56\x04\xe7\x0c\x81\xde\xed\x9d\x0f\x70\xf0\x7c\x4f\xf9\xcc\x70\xda\x9e\xe3\xeb\x16\x3c\xbe\xf6\x48\xa1\x85\xdf\xe4\xac\x56\xc7\xaa\x12\x86\x13\x41\x96\x19\x86\xee\x99\xef\x70\x1c\x9f\x2a\x00\x88\x45\x00\x63\xda\xea\xc0\x58\x43\x68\x54\x0b\x24\xdc\x1e\x69\xf5\xec\x2c\x2e\x4e\xa0\xf8\x0d\x83\x56\xd0\x7d\x45\x2e\xd1\x8f\xe3\x25\x1c\x53\x3a\x89\x24\xbc\x7e\x41\xc9\x5e\x8e\xb0\x82\x7a\x93\x50\x54\x4f\x51\x4a\xa3\x91\xf1\x78\x18\x32\x4f\xae\xa4\x2e\x44\xd0\x10\x42\x54\xfa\xde\xa3\x3f\x7e\xe3\x9e\xef\xe8\xdf\xe5\x0a\xb2\x19\x4d\x40\x2b\xe1\x56\x84\x1b\xe3\x0e\x28\xd9\xc9\x0d\x58\x65\x5b\xaa\xc2\x35\xc1\x8d\xb9\xb8\xa6\x0a\xaf\x3e\xa7\xeb\x69\xd4\xe2\x12\x89\x09\x12\x85\xf3\x3c\xa0\x64\xe9\x3a\xb5\xb3\xcd\x92\xfb\x35\xb5\xb0\x5c\x6e\x0f\xf1\x5f\x41\x11\xbf\xe0\xb6\x68\x63\x07\xf5\x24\xac\xd5\x9c\x0d\x85\x0f\x53\x96\x92\x29\xcf\x46\x97\x91\xdd\x1a\x43\x73\x35\xab\x85\xba\x5e\x4c\x72\xd1\xbc\x29\xf6\x7a\xb1\x14\xc3\xfb\x44\x63\x87\x49\xb1\xe6\x42\x20\x11\x4b\x80\xfa\xa4\x7a\xdb\x61\x4e\x8e\xcd\xdf\x33\x7b\x0c\xbd\xb7\xe7\x01\x6f\x16\x2d\x7c\x7a\xfc\x7f\x4a\xb1\xee\x4a\x11\x58\x9d\x08\xa7\x98\xff\x60\xef\xdd\x1f\x2d\x11\x84\x93\x08\xc1\x81\xd8\xa0\xd8\xe6\x9b\x06\xa7\x20\x6c\x10\x4a\x9e\x49\xfa\x65\x32\x7e\xfe\xba\x2b\x3f\x79\x96\xd8\xf2\x00\x35\xa7\x9f\x45\x6c\xe9\x0b\x37\x84\xef\xeb\xea\x63\x35\x83\x50\x77\x73\x53\xdd\x20\xee\x47\xed\x3a\xb7\xd3\xaa\x8a\x17\x5f\x4c\xdf\xb9\x83\x9b\x47\xa0\x09\xe2\x56\x00\xe7\xc1\xa0\x6d\x66\x20\xa9\xbf\xc7\xa7\xb9\xaa\x7f\xf8\x1e\xaf\x3e\x29\xe7\x21\xa7\x82\xb6\x73\x6a\x53\x92\x88\xa7\x84\x9c\x39\x3c\x97\x1c\xc5\x33\xc9\x3d\xe0\xcd\x52\x72\x30\xdd\x4a\x15\x17\x73\x5c\x07\x71\xf5\xfe\x0d\x00\x00\xff\xff\xfb\x91\x93\x2b\xa5\x05\x00\x00")

func templatesOauth2_middleware_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesOauth2_middleware_pythonTmpl,
		"templates/oauth2_middleware_python.tmpl",
	)
}

func templatesOauth2_middleware_pythonTmpl() (*asset, error) {
	bytes, err := templatesOauth2_middleware_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/oauth2_middleware_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesObject_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8e\x41\x0b\x82\x40\x10\x85\xef\xfb\x2b\x1e\xb2\xa7\x48\x7f\x80\xe0\x2d\x82\x20\xea\xd2\x3d\xac\x1d\x63\x4b\x47\x51\x11\x64\x98\xff\x1e\xbb\x92\x41\x74\x7b\xbb\xef\x7d\xcc\x27\xe2\xa8\xf2\x4c\x48\xda\xdb\x93\xee\xe3\x95\x7d\x93\xa8\x1a\x91\x14\x7d\xc9\x0f\x82\x7d\x6d\x61\x27\xe4\x05\xb2\x43\xd3\xb5\xfd\x38\x40\xd5\xf8\x18\x21\x62\x27\x55\x11\x62\xa7\x6a\xc6\xb9\xa3\x48\xfa\x0a\xd9\x99\xe9\xe8\x99\x76\x54\x85\x3d\x20\xf2\xfb\x17\x96\x54\x0f\xf4\xed\x4f\x65\x13\x5e\x1b\x14\x58\x74\x0c\x10\x9a\x3f\x2e\x7b\x4f\xb5\x1b\x16\x34\xc2\x76\x5a\xf1\x3c\x7a\x65\x97\xb9\xa3\xb5\x4f\x41\xec\xd6\xab\x9f\xb8\x78\xbf\x03\x00\x00\xff\xff\xac\x33\x8e\x19\x05\x01\x00\x00")

func templatesObject_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesObject_nimTmpl,
		"templates/object_nim.tmpl",
	)
}

func templatesObject_nimTmpl() (*asset, error) {
	bytes, err := templatesObject_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/object_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPython_server_resourceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\x4d\x6b\xdc\x30\x10\xbd\xfb\x57\x0c\xc1\xe0\x5d\x70\x4c\x0e\x3d\x05\x16\x9a\x94\x16\x02\x6d\x09\xa5\xf4\x12\x8a\x51\xe3\x51\x56\x8d\x25\x39\x23\xd9\x61\x51\xe7\xbf\x17\x7d\x38\x59\x36\xf1\xc5\x1a\xcd\xcc\x7b\x33\x4f\x2f\x84\x73\x18\x50\x2a\x83\x70\x46\xe8\xec\x4c\xf7\xd8\x4f\x07\xbf\xb7\xa6\xf7\xa8\xa7\x51\x78\x3c\x83\x73\xe6\x2a\x56\xd6\x62\x52\xdf\x85\x46\xb8\xdc\x41\x97\x0e\x31\x23\xc9\x6a\x90\xa3\x70\x8f\xa0\xf4\x64\xc9\xc3\xf5\x38\xe3\x44\xca\xf8\x16\xfe\x3a\x6b\x94\x3c\xb4\x40\xf8\x34\xa3\xf3\x55\x08\x40\xc2\x3c\x20\xd4\x8f\x2d\xd4\x4b\x82\xfa\xa6\x86\x61\xc4\x67\x41\xe8\xae\x88\x98\xab\x82\x13\x42\xbd\x74\x37\xe9\x7c\x2b\xfc\x9e\x19\x84\xcb\x97\x91\x9c\x39\x04\x40\x33\x40\x9a\xee\x2d\xea\x0f\x7c\xba\xb6\x83\x42\x07\xeb\x90\xb1\x95\x19\x8e\xd0\x8f\x31\xaa\x10\xf2\x52\xff\xe0\xa7\xfd\x6a\x9f\x91\x80\xb9\x17\x93\x82\xdd\xeb\x46\x9b\xe6\x4d\x55\x2e\x6a\x5a\xe8\x7b\x23\x34\xf6\xfd\xf6\xfd\x25\xd1\xef\xed\x90\x86\xa9\x3e\x86\xf0\xa2\xe5\x09\x4e\x47\x76\xf6\x18\x69\xea\xa5\xfb\x6c\x86\xc9\x2a\xe3\x99\x9b\x16\x74\x06\xd8\xdd\xe5\xdc\x2f\xa4\x3f\xcc\xcd\xef\xc8\xb6\x92\xe9\xc8\xa6\x23\x5d\xbd\x9c\xa8\x9a\x9e\x2a\xf2\x2e\xba\xa8\xd7\x1d\x07\x9b\xbb\x1c\x5d\xd1\x83\x63\x4e\xa0\x51\x96\xd8\x34\xa0\xcc\xa2\xe7\x0d\x4a\x7d\xba\xb9\x15\x24\xb4\x63\xde\x5e\x56\x00\x00\x4d\xd3\xa4\xff\xeb\x40\x32\x0e\x24\xcb\x40\x5f\x66\x73\xff\xc9\x6a\x8d\xc6\xbb\x84\x9c\x6b\xeb\x45\xbe\x9c\x57\xce\x18\xdd\x78\x50\x0e\xf6\xc2\x0c\x23\x12\x48\x4b\x70\xb4\x37\x9c\xe8\x73\xc2\x0f\x4a\xae\x06\x38\x40\xc9\x2a\x33\xcd\xde\xc1\x0e\x42\x58\x53\xcc\x5d\x34\x46\x1f\x5d\xba\x29\x0e\xed\x1e\xd0\xe7\x8b\xed\x36\xf7\x49\x30\xd6\x97\xf6\x6e\x11\xa3\x1a\x84\xc7\x4d\xd9\x39\x7e\x84\x7e\x26\xb3\x7a\x7d\x83\x44\x96\xdc\xae\x34\xe4\x68\xdb\xc2\x87\x8b\x8b\x75\xba\xe2\xb8\x77\x7a\x93\x77\x56\x15\x8e\x1e\xe1\x7f\x00\x00\x00\xff\xff\xdd\xde\x3a\xff\xa9\x03\x00\x00")

func templatesPython_server_resourceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPython_server_resourceTmpl,
		"templates/python_server_resource.tmpl",
	)
}

func templatesPython_server_resourceTmpl() (*asset, error) {
	bytes, err := templatesPython_server_resourceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python_server_resource.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRequirements_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8e\x41\x4b\x03\x31\x10\x85\xef\xf3\x2b\x96\xde\x13\x92\x58\xc1\x4b\xae\x0b\x16\xd4\x43\x0b\x7b\x94\xe0\x4e\xdb\x74\xdd\xc9\x9a\x49\x40\x0d\xfb\xdf\x25\x59\x7b\x7c\x6f\x1e\xdf\x7c\xa5\x88\x6e\xc4\xb3\x27\xec\x76\x11\xbf\xb2\x8f\x38\x23\x25\x7e\x5f\x7e\xd2\x35\xd0\xae\x13\xeb\x0a\xfd\xa7\xe3\xc9\x5a\x25\xb5\x92\x7a\x4b\xe2\x99\x96\x9c\xb8\x96\x46\xaa\xff\x6e\x38\xf5\x6d\x65\xe0\xe0\xe9\xe6\x8c\xb5\x46\x3e\xc1\x8b\x8b\x53\x5e\x8e\xee\x8c\x6d\xfd\x00\xc3\xa9\x0f\x71\xe6\x7a\xd5\xf7\x20\x0e\xc7\xb7\xd7\x8d\xa6\x15\x0c\x18\xa7\x5f\xcc\x97\x46\xd3\x72\x0f\x3e\xf1\xe8\xe8\x82\x31\xe4\xed\xe7\x1e\x6e\x1c\x88\x3f\xae\x38\xbb\x0a\x7a\x94\x1a\xd8\x7f\x5b\xab\xab\xa4\x82\x52\x90\xc6\x26\xff\x17\x00\x00\xff\xff\x37\x89\x0a\x05\xe2\x00\x00\x00")

func templatesRequirements_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRequirements_pythonTmpl,
		"templates/requirements_python.tmpl",
	)
}

func templatesRequirements_pythonTmpl() (*asset, error) {
	bytes, err := templatesRequirements_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/requirements_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_goTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x93\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x18\xc4\x1e\xa4\xe2\x95\x97\x42\x2f\x0b\x3d\x04\xc2\xd2\x40\xbb\x35\x59\x68\x8f\x8b\x6a\x8f\x1d\x11\x59\x72\xc7\x72\x12\x10\xfa\xef\x45\x76\x92\xf6\xd2\x9b\xf5\xfc\x66\xe6\xd3\x63\x14\xe3\x23\xb4\xd8\x19\x87\xc0\x27\xa4\x13\xd2\xfb\xa0\x8d\x7b\xef\x3d\x87\xc7\x94\xd8\xa8\x9b\xa3\xee\x11\x62\x54\xf5\xfa\xf9\xaa\x07\x4c\x89\x31\x33\x8c\x9e\x02\x08\x56\x70\xeb\x7b\xce\x0a\xee\x30\x54\x87\x10\x46\xce\x18\x00\x00\x8f\x51\xed\xbd\x0f\xbb\xc5\x58\xeb\x70\x48\xa9\xea\x3d\xe9\xc1\x72\xc6\x0a\xde\x9b\x70\x98\x7f\xa9\xc6\x0f\x59\x35\xd6\xea\x6a\x98\x2f\x7c\xad\xed\xfd\x78\xec\x95\x71\xd5\x49\x5b\xd3\xea\xe0\x49\x9d\x3e\x72\x26\x19\xeb\x66\xd7\x40\x66\x14\x12\xe2\x62\xae\x2a\x30\x6e\x9c\x03\xdc\xbd\x8b\xfc\xb7\xf2\x0d\xc3\x8f\xf5\x60\xbc\x7b\x99\x5d\x23\xf8\x30\xdb\x60\x46\x8b\xdf\x3b\x5e\xc2\x0a\xa5\xbe\xdd\x35\xc9\x58\x41\xf0\xfc\x19\x86\xf9\xa2\x5e\xf1\xbc\xf7\x73\x40\x12\x92\xdd\xe6\x1d\xfc\x80\x30\xea\x1e\x59\x41\xea\x8b\x76\xad\xc5\xb5\x6f\xc5\x4b\xc8\x84\xe2\x0c\x39\x0a\xb5\xc7\x69\xf4\x6e\xc2\x9f\x64\x02\x52\x09\x04\x1f\xae\xfa\xef\x19\xa7\x90\xaf\x50\x14\x8b\xf2\x96\xd3\x7f\x31\x16\xc5\xb9\x04\x2a\x81\x1b\xd7\xe2\x45\x1d\xc2\x60\xb9\x64\x45\xba\x0e\x8f\x11\x4c\x07\x6a\x53\xef\xb6\xbe\x99\xb6\x86\x20\xa5\x1b\x95\x1e\x4d\xeb\x9b\x69\x39\x92\xca\x89\xd7\x84\x9d\xb9\x08\x5e\xc5\xf8\x4f\x49\x4a\x15\x97\x57\x6c\x12\xeb\xf4\x40\x66\xfc\xbf\xbb\x5c\x6f\x93\xf1\x16\xce\x6b\xd5\xd6\x90\xe0\xaa\xba\xce\xad\xb8\x94\x52\xde\x28\xd1\xb5\x19\x8d\x15\x31\x02\x69\xd7\x23\x3c\x1c\x4b\x78\x38\xe5\x58\x73\x2c\x7e\xa6\x06\xa7\x2d\x76\xd9\x55\xc4\xa8\xd6\xc5\xda\xb9\x80\xd4\xe9\x06\x97\xcc\x27\x41\x25\xdc\xff\x6d\xea\x5d\x4c\x72\xe9\x78\xef\x6e\x7d\xaf\x6a\x32\x2e\x58\x27\xf8\x14\x34\x05\xe3\x7a\x58\x57\x39\xe7\xb6\x70\x7e\x35\x53\x40\xb7\x71\xed\x02\x2f\xf8\xf3\xa7\xa7\xa7\x27\x5e\x02\x49\x96\x18\xcb\x6f\x20\xf7\xcb\xfb\xfe\x27\x00\x00\xff\xff\xcc\x4a\x63\xcd\x10\x03\x00\x00")

func templatesServer_main_goTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_goTmpl,
		"templates/server_main_go.tmpl",
	)
}

func templatesServer_main_goTmpl() (*asset, error) {
	bytes, err := templatesServer_main_goTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_go.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x41\x6b\xe3\x30\x10\x85\xef\xfa\x15\x83\xf0\xc1\x06\xc7\x7b\x0f\xe4\xb4\x24\xcb\x2e\x6c\x29\x6d\xe9\x35\xa8\xd6\xb4\x56\x6a\x49\x66\x46\x31\x0d\x62\xfe\x7b\xb1\x9c\xd0\x42\x6f\xd2\xe8\x7d\x4f\xef\x4d\xce\x1b\xb0\xf8\xea\x02\x82\x66\xa4\x19\xe9\xe8\x8d\x0b\xc7\xe0\xbc\x86\x8d\x88\x72\x7e\x8a\x94\xe0\x84\x9c\x90\x5a\x30\x7c\x09\xbd\x75\x3c\x99\xd4\x0f\x2d\x9c\x38\x86\x16\xbc\x21\x1e\xcc\xd8\x02\x5f\x38\xa1\x57\x39\x03\x99\xf0\x86\x50\xbd\xb7\x50\xcd\xb0\xdd\x41\xf7\xb7\xf8\x30\x7c\x59\xe6\x5c\xcd\x22\x39\x63\xb0\x22\x4a\x51\x3c\x27\xe4\xad\x5a\x12\xfd\xa0\x1f\x90\xe3\x99\x7a\x2c\xfc\x77\x85\x5f\x24\x7e\xd1\x54\x73\xf7\x1f\xd3\x10\x2d\x8b\x28\x28\xee\xbe\x7b\x46\x7a\x11\x01\xbd\xde\xfe\x95\x12\xfb\x60\xa7\xe8\x42\x12\xd1\x5b\x05\x00\x30\x62\x02\xc2\x04\xbb\x2b\xb4\xda\xdc\x19\x8f\x22\xf5\x3a\x7a\x2c\xab\xf9\x6d\xc6\xf1\xde\x90\xf1\x2c\xd2\x14\x94\x90\xa7\x9a\x30\x75\x7d\xb4\xd8\x42\x55\xad\xe7\x90\x30\xa4\x46\x95\x6e\x4b\x62\x05\xf0\x67\xff\x04\xfa\xd7\xf5\xc7\x2b\x66\xec\xc1\x8d\x58\x6b\x17\x2c\x7e\x74\x43\xf2\xa3\x6e\x9a\x52\xef\xc6\xd1\x39\x1c\x22\xe1\x8c\x54\x2f\x0f\xb7\xf9\x67\x00\x00\x00\xff\xff\x04\x99\xf2\xd7\xb6\x01\x00\x00")

func templatesServer_main_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_nimTmpl,
		"templates/server_main_nim.tmpl",
	)
}

func templatesServer_main_nimTmpl() (*asset, error) {
	bytes, err := templatesServer_main_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_main_pythonTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x5f\x6b\xdb\x30\x14\xc5\xdf\xf5\x29\x2e\xa6\x20\x19\x52\xf7\x3d\xcc\x63\xdd\x92\x8c\x41\x29\xa3\x0b\xec\xa1\x14\xa1\xc6\x57\xb1\x5a\x4b\x32\x57\x72\xbb\xa2\xf9\xbb\x0f\xd9\x35\xeb\xb6\xc0\x5e\x0c\xbe\x7f\xce\xf9\x71\xae\x52\x3a\x87\x06\xb5\x71\x08\x45\x40\x7a\x42\x92\x56\x19\x27\xfb\x97\xd8\x7a\x57\xc0\xf9\x38\x32\x4d\xde\x82\xee\x54\x78\x04\x63\x7b\x4f\x11\x76\xf9\x67\x05\x01\x5d\x23\x73\x57\x36\x86\xf0\x10\x3d\xbd\x2c\x45\xd3\x21\x7b\x1d\x7e\x8e\xda\x93\x0d\xf2\x21\x78\xc7\x52\x02\x52\xee\x88\x70\xf6\xb8\x82\xb3\x27\x58\xd7\x50\xdd\x60\xf0\x03\x1d\x30\x6c\x50\xff\x36\x4c\xa9\xba\x56\x16\xe1\x27\xec\xfd\x95\x7f\x46\x1a\xc7\xc5\xfe\x44\x4b\xaa\xde\xb0\x94\xd0\x35\x30\x8e\x8c\xa9\xbe\x87\x7a\xc6\x14\x52\x3a\x65\x51\xca\x72\x2a\x57\x07\xef\xb4\x39\xde\x16\xdf\xf7\x3b\xf9\xe9\xdb\xcd\x4e\x6e\xaf\x2f\x3f\x5e\x6d\x37\xc5\x5d\xde\x50\x5d\x40\xf6\x96\xb8\x32\xce\x44\x51\x32\x96\xd2\xff\xc1\xb3\x3e\xe1\xd1\x84\x88\x24\xef\xbb\x01\x7b\x32\x2e\x8a\x7f\x78\x61\x06\x2e\x67\xe2\x0c\x9c\x12\x18\x0d\xd5\xe5\xd7\x2f\x1b\x7f\x08\x1b\x93\x47\xd8\x87\x49\xcf\x0f\x11\x05\xbf\x48\xe9\x4d\x77\x1c\x2f\xde\xf5\x2a\xb6\xeb\xfc\x79\xcf\x4b\xd6\xa0\x9e\x93\x7f\x08\x22\xd7\xca\x35\x03\x00\x20\x8c\x03\xb9\x53\x87\x12\xfc\x2f\x41\xbe\x82\x69\x31\xa3\x2c\x31\xfe\x01\xc0\x57\x60\x31\xb6\xbe\x09\xf5\x2d\xff\xbc\xdd\xf3\xbb\xd9\xb6\xf5\x16\xc5\x29\x3f\xd3\xa1\xe0\xc6\x35\xf8\xa3\x6a\xa3\xed\x78\xc9\x98\xd1\xb0\x9c\x03\xea\x1a\x0a\x39\xbf\x36\x59\xcc\xeb\x93\xdd\xe0\x44\x83\xf7\xc3\xb1\xde\xd3\x80\xaf\x11\x4d\xe9\xfe\x0a\x00\x00\xff\xff\xae\x29\x40\x74\xac\x02\x00\x00")

func templatesServer_main_pythonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_main_pythonTmpl,
		"templates/server_main_python.tmpl",
	)
}

func templatesServer_main_pythonTmpl() (*asset, error) {
	bytes, err := templatesServer_main_pythonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_main_python.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_apiTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xdb\x38\x10\x3d\x9b\xbf\x62\x56\x30\x16\xd2\x26\xa1\x73\xd8\x53\x82\x1c\xb2\xdb\x04\x0d\xd0\x06\x6e\x0b\xa4\x87\xa2\x88\x69\x6b\x14\xb3\x96\x48\x79\x44\xd9\x30\x08\xfe\xf7\x62\x48\x19\x8a\xd3\xf8\xe2\xf9\x7e\x6f\x1e\x49\x79\x7f\x01\x25\x56\xda\x20\x64\x84\x9d\xed\x69\x85\xcf\xaa\xd5\xcf\x0e\x9b\xb6\x56\x0e\x33\xb8\x08\x41\xb4\x6a\xb5\x51\x2f\x08\xde\xcb\x79\x32\x1f\x55\x83\x21\x08\xa1\x9b\xd6\x92\x83\x5c\x00\x00\x78\x0f\xa4\xcc\x0b\xc2\x74\x73\x0e\xd3\x1d\x5c\xdd\x80\xbc\x9d\x3f\x7c\xd2\xcb\x87\x58\x36\x57\x6e\xdd\xc5\x81\x30\xfc\x32\xef\xa7\xbb\x10\xb2\x63\x3b\x9a\x32\xe6\x0b\xe1\xfd\x54\xb5\x9a\x61\xe2\x98\x01\x6f\x36\x63\x0e\xc9\xb9\x9d\x3f\x80\xee\x20\xfe\x35\x6d\x8d\x0d\x1a\xa7\x9c\xb6\x06\x6c\xc5\x55\x77\xa6\x6c\xad\x36\x2e\x04\x20\x6b\x1d\xcf\x8e\xbe\x70\x87\x16\x4f\xc7\x74\x8e\xfa\x95\x03\x2f\x82\x10\xe2\xbd\x2d\x3e\xa3\x5b\xdb\xb2\x83\x23\x85\xe9\x6e\x08\xa5\x19\xcc\xc3\xad\x11\xd6\xca\x94\x35\x12\x54\x96\x52\xd1\x13\xd2\x32\x84\x64\x8f\x7c\x04\xcb\x7e\xc4\xa8\x18\xa4\x62\x94\xe9\x4e\xde\xf7\x66\xf5\xbf\x6d\x78\x95\x6e\xc4\xaa\x42\xf0\x1e\x4d\x19\x82\xa8\x7a\xb3\xca\x55\xab\x61\xd4\x27\xae\x50\xfc\x49\x2a\xdf\xc3\xda\xb9\x56\x7e\xc5\xae\xb5\xa6\xc3\xef\xa4\x1d\xd2\x39\x10\xfc\x33\xc4\xb7\x3d\x76\xae\x00\x2f\x26\xaf\x09\x6d\x99\xd0\x76\x20\xf4\xa5\x47\x3a\xcc\x15\xa9\x06\x1d\xd2\x78\x78\x89\xd9\x66\x1b\x02\x17\x12\x6e\xe5\xbd\xa5\xe6\x49\xd5\x3d\xe6\xd9\x90\xc9\x8a\x34\x98\x0f\x35\x84\x64\xeb\x0a\x18\xf8\x3f\x5b\x1e\xe2\xac\xc9\x4e\x11\xb7\xc7\x80\xf7\xc7\x1c\x5f\xad\x01\xa6\xc4\x95\x2d\x91\x6b\x98\xad\x98\xe8\x0a\x90\x88\x51\x7f\x75\xd6\xc8\x47\xdc\x7f\x88\x15\x94\x93\xe4\xd6\x42\x26\x3f\xff\x7b\x18\x5b\x5c\xc7\x86\xbf\x6e\xc0\xe8\x9a\x97\x9d\xec\x65\xd4\xe2\x23\x2a\x6e\xfb\xf7\xf2\xb2\x10\x93\x09\xa1\xeb\xc9\x88\xc9\x88\xbc\x53\xb5\x2e\x95\x1b\xb1\x39\x3e\xc2\x0f\xe3\xe5\xd3\x50\x96\xbf\x05\x3a\x5e\xf2\x77\xe0\xde\xa4\xf2\x1f\x3f\x97\x07\x87\xf9\xc2\x67\x48\x64\x29\xbb\xca\x16\x67\x48\x24\xef\xd8\xcb\x8b\xb3\x45\x16\x16\xc5\xd8\x36\x70\x65\x33\x9c\x68\xfc\x5a\xe4\xae\x8d\xa2\x8e\x22\x0f\x81\xa8\x72\xb2\x39\x77\x54\xf1\xce\x24\x15\xf7\x85\x4c\x26\x0b\x98\xca\x8a\xeb\xd3\x83\x9c\xcd\xa0\x37\xab\x74\x4d\x61\x89\xb5\xdd\x43\xcd\x9f\x10\x67\x41\x95\x25\xac\xe3\xa2\xb1\x6c\x2f\x87\xad\x0b\xf9\x0d\x5d\x9e\x6d\xf0\x90\x9d\x67\x3b\xbe\x26\x59\x21\xd2\x43\x38\xbe\xf9\x13\xe7\x77\x00\x00\x00\xff\xff\xa7\x39\xf1\xd8\x99\x04\x00\x00")

func templatesServer_resources_apiTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_apiTmpl,
		"templates/server_resources_api.tmpl",
	)
}

func templatesServer_resources_apiTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_apiTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_api.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_api_nimTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\x41\x8b\xdb\x30\x10\x85\xef\xfe\x15\x0f\xd7\x87\xa4\x24\x66\xe9\xd1\xe0\x4b\x03\xa5\x3d\xb4\x2c\xdb\xe3\xb2\x04\x55\x9a\x34\x6e\x6d\xc9\x19\xc9\x86\x20\xe6\xbf\x17\x2b\x4a\x1d\x4a\x6f\x9a\x37\xf3\xcd\xbc\x19\xc5\xb8\x87\xa1\x53\x67\x09\xa5\x27\x9e\x89\x8f\x4c\xde\x4d\xac\xc9\x1f\xd5\xd8\x1d\x6d\x37\x94\xd8\x8b\x14\xdd\x30\x3a\x0e\xf8\x45\x3e\x10\xef\x30\x28\xf6\x67\xd5\x17\x31\x82\x95\xfd\x49\xa8\x7e\xef\x50\xcd\x68\x5a\xd4\x5f\x52\xa9\xc7\x4a\xc5\x58\xcd\x22\x31\x92\x35\x22\xc5\x7f\xa1\xaf\x14\xce\xce\x78\x91\x62\x64\xa7\x13\x91\xb5\x6f\x6a\x20\x91\xf7\x9b\x24\x7d\x4f\x26\x9f\xd9\xe9\x67\xc5\x6a\xf0\x22\x5b\x34\x08\xd3\xd8\xd3\xab\x76\x86\x1a\x7c\x0e\x61\x3c\x38\x43\x3b\x68\x67\x03\xd9\xd0\xdc\x9a\x1d\x6e\xd1\x0b\x85\x59\xf5\x22\x6f\x68\x0b\x60\xd9\xff\x6e\x45\x2f\x5e\xf4\x62\xa6\x9a\xeb\x4f\x93\xd5\x07\x37\x0c\x64\xc3\xe2\x09\x78\x97\xba\xe8\x75\x8b\x05\xee\x4e\xa8\x5f\xe8\xf2\xd1\x99\x6b\x3a\x12\xd0\x53\x00\x67\xa5\x45\x70\xaf\x31\xde\x2b\x44\xde\x36\x4c\x97\xfa\x87\x33\xd7\x6d\x9e\x4d\xd6\x20\x71\x39\xbe\x35\xf4\x63\xe2\x53\x62\x56\x0c\xce\xca\xb2\xc9\xdf\x74\xb6\xb0\x07\xf5\x9e\x1e\x66\x67\xb8\x45\x59\xfe\x3b\x84\xc9\x4f\x7d\x40\x8b\xcd\x7a\xaa\x0f\x4f\x4f\x0f\x97\xba\xe3\xdb\xe5\x8f\x32\xb7\xbe\xfe\x04\x00\x00\xff\xff\x87\x48\x2f\x33\x2e\x02\x00\x00")

func templatesServer_resources_api_nimTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_api_nimTmpl,
		"templates/server_resources_api_nim.tmpl",
	)
}

func templatesServer_resources_api_nimTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_api_nimTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_api_nim.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServer_resources_interfaceTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\xcd\x6e\x9b\x40\x10\x3e\xb3\x4f\xf1\x09\x71\x80\xc8\xc6\xf7\x4a\x3d\xf5\x47\xcd\xa1\x51\x14\x45\xed\x31\x5a\xc3\x60\x56\x81\x5d\xba\x0c\x38\xd6\x6a\xdf\xbd\x5a\xc0\x8e\xdd\x38\x6d\x7d\x9a\x81\xf1\xf7\x8b\x73\x6b\x94\x54\x29\x4d\x88\x2d\xf5\x66\xb0\x05\x3d\xa9\xea\x89\xa9\xed\x1a\xc9\x14\x63\xed\xbd\xe8\x64\xf1\x2c\x77\x04\xe7\xf2\xfb\x79\xbc\x93\x2d\x79\x2f\xc4\x66\xf3\x58\xab\x1e\x95\x6a\x08\xaa\x87\x1c\xd8\xac\x77\xa4\xc9\x4a\xa6\x12\xdb\x03\x76\x66\x6d\x65\xdb\x88\xcd\xe6\xb3\x81\x36\x0c\x2a\x15\x83\x4f\x7f\xda\x1e\x50\x4b\x5d\xa2\x57\xba\x20\x28\xc6\x5e\x35\x0d\xb6\x04\x33\x92\xdd\x5b\xc5\x4c\x1a\xe5\x60\x95\xde\x81\x6b\x82\xa6\x17\xc6\xc2\xa0\x8c\x16\x42\xb5\x9d\xb1\x8c\x54\x00\x80\x73\xb0\x52\xef\x08\xc9\xf3\x0a\xc9\x88\x0f\x1f\x91\xdf\x6a\x26\x5b\xc9\x82\x6e\xa7\xcb\x7b\xc9\x75\x3f\xb9\xc2\xf2\x8b\x9d\x4b\x46\xef\xe3\x23\x02\xe9\x72\x7a\x9f\x05\x7b\xc1\xf3\x6c\xf6\x84\x13\x8c\xaa\xd3\x52\x19\x1b\x6e\xbe\xe8\xb2\x33\x4a\xb3\xf7\xb0\x26\xd8\x5c\x76\xc1\x87\x8e\xae\x82\x1c\x27\x77\x12\x12\xca\x78\x23\xff\x3b\x71\x6d\xca\x4b\xc5\x93\x2c\x24\xe3\xf2\x72\x86\x0e\xb2\x42\x42\x21\xce\x86\xec\x22\x2c\x19\xf3\x1f\x64\xb7\xde\xcf\xf3\xab\x4c\x11\x01\xd1\x39\x63\x15\x28\xab\xc0\x99\x8c\xf9\xd7\x41\x17\x9f\x4c\xdb\x92\xe6\x7e\xb9\x9d\x48\x93\xb1\xf2\xde\x39\xd2\x65\x78\x1a\x4d\x98\xe7\x22\xd2\x9a\xb9\xcb\x1f\xa8\xef\x8c\xee\xe9\xa7\x55\x4c\x76\x85\x9b\xe5\xe9\xaf\x81\x7a\xce\x44\xb4\x84\xec\xbd\xf0\xef\x64\xfc\x60\x06\xa6\x3e\x58\xb2\x66\xe0\x50\xfe\xbf\x72\xae\x06\x5d\xbc\x0b\x94\x5a\xdc\xb4\xc3\x4b\x3e\x6d\x76\x05\x75\xe5\x32\x03\x9c\x88\xfe\xda\xc1\x59\x05\xe1\x4e\x55\x53\x07\xaa\x2c\x1b\xda\x4b\x4b\x17\x07\x36\xff\x36\x15\x91\xc6\x7f\x04\x1f\xaf\x20\x1b\x55\x50\x7e\x47\xfb\x74\x0e\xf0\x15\xc1\xfb\x2c\x7f\xac\x49\xcf\x39\xce\x08\x36\x94\x91\xaa\xfc\x4d\xd8\x59\x96\x1d\xa5\x2d\x2c\x73\xd5\x71\x76\x21\x93\x9a\x9e\x30\xd5\x75\xd4\x34\x01\x5e\xd1\x75\x8d\xe3\xbf\x18\xe6\x32\xa3\xb3\xd9\x8b\xe3\x12\x3e\xdc\xdf\x01\x00\x00\xff\xff\xd6\x21\x2f\x89\x67\x04\x00\x00")

func templatesServer_resources_interfaceTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServer_resources_interfaceTmpl,
		"templates/server_resources_interface.tmpl",
	)
}

func templatesServer_resources_interfaceTmpl() (*asset, error) {
	bytes, err := templatesServer_resources_interfaceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server_resources_interface.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\xc1\x6e\xdb\x38\x10\x3d\x5b\x5f\xf1\x56\xf0\xc1\x32\x62\xf9\x1e\xc4\x39\xec\x66\x17\x30\xb0\x4d\x72\x48\x7b\x09\x82\x84\x95\x47\x09\x6b\x8a\x52\x48\xca\xa8\x41\xf0\xdf\x0b\x92\x92\x2d\xcb\x69\x8b\xea\x60\x88\xe4\x70\xe6\xbd\x37\x4f\x63\x6b\x37\x54\x72\x49\x48\xb5\x51\x6d\x61\x9e\x0d\x55\x8d\x60\x86\x52\xe7\x92\x86\x15\x5b\xf6\x4a\xb0\x36\xbf\x8f\xaf\xb7\xac\x22\xe7\x92\x84\x57\x4d\xad\x0c\x66\x09\x00\x58\x0b\xc5\xe4\x2b\x61\xba\xbd\xc0\x74\x87\xcb\x15\xf2\x75\x08\xb8\x67\xe6\x4d\x63\xe1\x5c\x88\xf3\x4f\x6a\x2d\xa6\x5b\x38\x97\xf6\x57\x49\x6e\x42\x44\x96\x24\xc7\x44\x31\xc9\x0d\xe9\x42\xf1\xc6\xf0\x5a\xc2\xb9\x64\xb9\x84\xb5\xd3\x9d\x73\xb0\x96\xe4\xc6\x39\x7f\x81\x97\xc8\xef\x24\xfd\xcf\x25\xdd\x50\x19\x32\x59\x7b\xb2\x15\x76\x16\x20\xa1\x29\x1c\x9b\x7d\xe3\x29\x21\xf7\x64\xe0\x1c\x22\x73\xd8\x31\x19\xda\x7b\x3a\x4c\xb4\x14\xd0\xfc\xc7\x49\x6c\x34\x06\x64\x3c\x1a\x7f\x9c\x47\x59\xfc\x06\x2f\x41\xef\xdd\xad\x7c\xad\xff\xa9\xab\xa6\xd6\x3c\x30\x28\x99\xd0\x14\xc0\x77\xc7\x0f\xfb\xc6\xaf\x5f\xbe\xe9\x5a\x5e\xa6\xd6\xfa\x8a\xce\x9d\xe5\xb8\xab\xb8\x31\xb4\x81\x51\x2d\x39\x77\x51\x57\xdc\xf7\xc8\xec\x3b\x11\xd2\x70\xa1\x8b\xfe\xc2\x04\xdf\x30\x53\x2b\xed\x1c\x76\x71\x41\x21\xf7\xf9\x79\xda\x25\x78\x39\xc8\x19\x39\x2d\x10\x57\x9d\x6c\xe1\xbd\x57\xfa\xb6\x36\x7f\x33\x45\x6b\x69\x48\x95\xac\xf0\x5e\x28\x5b\x59\x60\xa6\xbd\x49\xa2\x0c\x19\xba\x2a\x34\xcb\x40\x4a\xd5\xea\x20\xed\x72\x8e\xd2\xab\x08\x41\x3b\x12\x3d\x40\x2f\xce\x7c\x79\xa8\x7f\x6e\xa6\x53\xe5\x23\x94\xe9\x2e\xff\x2c\xf9\x7b\x4b\x6b\x43\xd5\xe1\xac\xf2\x4c\xfb\x76\x5c\xae\x50\xb1\xe6\x91\xf7\x60\xad\x7b\x8a\xad\xb6\xce\xc6\xf0\xb2\x56\x78\xbe\x40\xa8\x12\xab\xea\x7c\x98\xc1\x1e\x5a\x3d\x4c\xfc\xb8\x7b\xc2\x0a\xa3\x54\xf1\x97\x97\x10\x24\x67\xc3\xe8\x0c\x7f\xad\xc2\xe6\x49\xea\x6c\x90\x5b\x91\x69\x95\x44\x59\x99\xfc\x5f\x2f\x57\x39\x4b\x87\x20\xaa\x56\x1b\x7c\x25\xb4\x81\x6e\x9a\x0d\xca\xc5\xcf\xc7\x0d\x17\x47\x95\x96\x73\xcc\x07\x0f\x82\xef\xcf\x85\xef\x4e\x07\x0d\xf0\x8d\x7e\xc8\x3f\x71\x19\xa5\xed\x3f\xdf\x8e\x9b\xce\x70\xe5\x9b\x7d\x8c\x38\x11\xea\x03\x32\x82\x24\xf4\x5b\xdd\x8a\x8d\xa7\x71\xbd\xc2\xf8\xfa\x88\xd3\xe2\x84\x54\x87\x86\x7d\xff\x19\x9a\xeb\x2e\x5d\x17\xf1\x67\x68\xae\x56\xe3\xdb\xbf\x04\x83\x88\x66\xe4\xbc\xc9\x72\x89\x8a\x6d\x09\xba\x55\x04\x6e\xc0\x75\xd7\xad\x68\xca\xdf\x38\x71\xf2\x81\x0d\x61\x93\xc9\xa4\x3a\x73\xda\xc4\x25\x93\xde\x63\x47\x63\x65\x21\xfa\x03\xae\x45\x2d\x04\x15\xa1\xcf\x5c\x43\xd6\xe6\x68\xa2\xc9\x09\xc1\x13\xd7\x14\x4c\x08\xbc\xd6\x8b\x5d\x3f\x2c\xfa\xb1\x41\x9e\xbe\xcf\x32\x98\xae\x23\xdf\x8c\x46\xf1\xa0\x07\x92\x8b\x83\x4d\xfb\x51\x3c\x38\x3e\x2f\x36\xd3\xd9\xf8\x3f\x22\xcc\xf6\x0e\x6e\x3f\xb4\x7e\x04\x00\x00\xff\xff\xc3\xc1\x18\x45\xc2\x06\x00\x00")

func templatesStructTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructTmpl,
		"templates/struct.tmpl",
	)
}

func templatesStructTmpl() (*asset, error) {
	bytes, err := templatesStructTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStruct_input_validatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x6b\xdc\x30\x10\x85\xcf\x9e\x5f\x31\x15\x84\x5a\x60\x9c\x16\x42\x0e\x81\x3d\xb6\xb7\xb6\xf9\x07\x8b\x2a\x8f\x12\x51\x49\x36\xd2\x48\xa1\x08\xfd\xf7\x22\xaf\x77\x1b\x72\x31\x66\xe6\xbd\x37\xef\xb3\x6b\x5d\xc8\xd8\x40\x28\x12\xc7\xac\xf9\x6c\xc3\x96\xf9\x5c\x94\xb3\x8b\xe2\x35\x9e\x99\xfc\xe6\x14\x93\x68\x0d\x36\xa5\xff\xa8\x17\xc2\x5a\xe7\xe7\xcb\xeb\x4f\xe5\xa9\x35\x00\xeb\xb7\x35\x32\x8e\x30\x08\xe3\x59\xc0\xd0\xe3\xf4\x1a\x8a\x00\x09\x60\x72\xd0\xf8\x23\x3b\xb6\x9b\xa3\x5f\x66\x0c\xd9\xa3\x0d\x4c\xd1\x28\x4d\xb5\x4d\x58\x94\xcb\x84\x89\xa3\x0d\x2f\x12\x29\xc6\x35\x62\x85\xa1\xa8\x88\x21\xfb\xef\x6e\x55\x8c\xa6\x3f\x1f\x1f\x00\x86\xf4\x66\x59\xbf\x62\xc1\xa7\x53\x5f\xcf\x23\xff\xdd\x48\x76\x83\x56\x89\x7a\xf2\x13\x0c\xc3\xcd\x78\xba\x5a\xc7\x22\x0f\xc9\x31\xf8\x20\x2b\x30\x2c\x64\x54\x76\xbb\x3f\x12\xe7\x18\xd0\x78\x9e\xbf\xf5\x42\x66\x14\x77\x05\xb5\x0a\x9f\x19\x7f\x13\xe6\x44\x0b\xbe\x59\x7e\x45\x7f\x03\x13\x13\xf6\x13\x0d\x7a\x75\x97\x69\x0f\x9e\x3a\x4f\xaf\x7a\x7c\x91\xf9\x59\xc5\x74\x59\x8d\xbb\x6a\xc2\xc7\x07\x09\x83\x35\xbb\xf0\xd3\x09\x83\x75\x1d\xe6\xda\x80\x62\xbc\x64\x46\x4a\x07\xf2\xa5\xf1\x3d\xfe\xbf\xb2\xfb\xc7\xae\xb8\xbf\xe1\xda\xc0\x7d\x22\xa5\xec\xa9\x5f\xe7\x2f\xef\x53\x3f\x70\xd9\x84\x61\xe5\x77\x2c\x78\x57\xc4\xd4\x6f\x1d\x7f\x47\x5e\x3b\xec\xee\x60\x1d\x34\xa8\x95\xc2\xd2\x1a\xfc\x0b\x00\x00\xff\xff\x16\xec\x5e\x2d\x45\x02\x00\x00")

func templatesStruct_input_validatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStruct_input_validatorTmpl,
		"templates/struct_input_validator.tmpl",
	)
}

func templatesStruct_input_validatorTmpl() (*asset, error) {
	bytes, err := templatesStruct_input_validatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/struct_input_validator.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/bindata.go": templatesBindataGo,
	"templates/class_python.tmpl": templatesClass_pythonTmpl,
	"templates/client_go.tmpl": templatesClient_goTmpl,
	"templates/client_nim.tmpl": templatesClient_nimTmpl,
	"templates/client_python.tmpl": templatesClient_pythonTmpl,
	"templates/client_service_go.tmpl": templatesClient_service_goTmpl,
	"templates/client_service_nim.tmpl": templatesClient_service_nimTmpl,
	"templates/client_service_python.tmpl": templatesClient_service_pythonTmpl,
	"templates/client_utils_go.tmpl": templatesClient_utils_goTmpl,
	"templates/client_utils_python.tmpl": templatesClient_utils_pythonTmpl,
	"templates/date.tmpl": templatesDateTmpl,
	"templates/enum_go.tmpl": templatesEnum_goTmpl,
	"templates/generic_main.tmpl": templatesGeneric_mainTmpl,
	"templates/index.html.tmpl": templatesIndexHtmlTmpl,
	"templates/init_py.tmpl": templatesInit_pyTmpl,
	"templates/input_validators_python.tmpl": templatesInput_validators_pythonTmpl,
	"templates/oauth2_middleware.tmpl": templatesOauth2_middlewareTmpl,
	"templates/oauth2_middleware_python.tmpl": templatesOauth2_middleware_pythonTmpl,
	"templates/object_nim.tmpl": templatesObject_nimTmpl,
	"templates/python_server_resource.tmpl": templatesPython_server_resourceTmpl,
	"templates/requirements_python.tmpl": templatesRequirements_pythonTmpl,
	"templates/server_main_go.tmpl": templatesServer_main_goTmpl,
	"templates/server_main_nim.tmpl": templatesServer_main_nimTmpl,
	"templates/server_main_python.tmpl": templatesServer_main_pythonTmpl,
	"templates/server_resources_api.tmpl": templatesServer_resources_apiTmpl,
	"templates/server_resources_api_nim.tmpl": templatesServer_resources_api_nimTmpl,
	"templates/server_resources_interface.tmpl": templatesServer_resources_interfaceTmpl,
	"templates/struct.tmpl": templatesStructTmpl,
	"templates/struct_input_validator.tmpl": templatesStruct_input_validatorTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"bindata.go": &bintree{templatesBindataGo, map[string]*bintree{}},
		"class_python.tmpl": &bintree{templatesClass_pythonTmpl, map[string]*bintree{}},
		"client_go.tmpl": &bintree{templatesClient_goTmpl, map[string]*bintree{}},
		"client_nim.tmpl": &bintree{templatesClient_nimTmpl, map[string]*bintree{}},
		"client_python.tmpl": &bintree{templatesClient_pythonTmpl, map[string]*bintree{}},
		"client_service_go.tmpl": &bintree{templatesClient_service_goTmpl, map[string]*bintree{}},
		"client_service_nim.tmpl": &bintree{templatesClient_service_nimTmpl, map[string]*bintree{}},
		"client_service_python.tmpl": &bintree{templatesClient_service_pythonTmpl, map[string]*bintree{}},
		"client_utils_go.tmpl": &bintree{templatesClient_utils_goTmpl, map[string]*bintree{}},
		"client_utils_python.tmpl": &bintree{templatesClient_utils_pythonTmpl, map[string]*bintree{}},
		"date.tmpl": &bintree{templatesDateTmpl, map[string]*bintree{}},
		"enum_go.tmpl": &bintree{templatesEnum_goTmpl, map[string]*bintree{}},
		"generic_main.tmpl": &bintree{templatesGeneric_mainTmpl, map[string]*bintree{}},
		"index.html.tmpl": &bintree{templatesIndexHtmlTmpl, map[string]*bintree{}},
		"init_py.tmpl": &bintree{templatesInit_pyTmpl, map[string]*bintree{}},
		"input_validators_python.tmpl": &bintree{templatesInput_validators_pythonTmpl, map[string]*bintree{}},
		"oauth2_middleware.tmpl": &bintree{templatesOauth2_middlewareTmpl, map[string]*bintree{}},
		"oauth2_middleware_python.tmpl": &bintree{templatesOauth2_middleware_pythonTmpl, map[string]*bintree{}},
		"object_nim.tmpl": &bintree{templatesObject_nimTmpl, map[string]*bintree{}},
		"python_server_resource.tmpl": &bintree{templatesPython_server_resourceTmpl, map[string]*bintree{}},
		"requirements_python.tmpl": &bintree{templatesRequirements_pythonTmpl, map[string]*bintree{}},
		"server_main_go.tmpl": &bintree{templatesServer_main_goTmpl, map[string]*bintree{}},
		"server_main_nim.tmpl": &bintree{templatesServer_main_nimTmpl, map[string]*bintree{}},
		"server_main_python.tmpl": &bintree{templatesServer_main_pythonTmpl, map[string]*bintree{}},
		"server_resources_api.tmpl": &bintree{templatesServer_resources_apiTmpl, map[string]*bintree{}},
		"server_resources_api_nim.tmpl": &bintree{templatesServer_resources_api_nimTmpl, map[string]*bintree{}},
		"server_resources_interface.tmpl": &bintree{templatesServer_resources_interfaceTmpl, map[string]*bintree{}},
		"struct.tmpl": &bintree{templatesStructTmpl, map[string]*bintree{}},
		"struct_input_validator.tmpl": &bintree{templatesStruct_input_validatorTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

