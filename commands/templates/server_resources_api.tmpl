{{define "resource_api_template"}}
package main

import (
	{{ if .NeedJSON }}"encoding/json"{{ end }}
	"net/http"
)
{{$apiName := .Name}}
type {{.Name}}API struct {
}


{{ range $k, $v := .Methods }}
func(api {{$apiName}}API) {{$v.MethodName}}(w http.ResponseWriter, r *http.Request) {
	{{range $kq, $vq := $v.QueryParameters}}
    // {{$kq}} := req.FormValue("{{$kq}}")
	{{end}}
	{{if .ReqBody}}
	var reqBody {{.ReqBody}}

	if err := json.NewDecoder(r.Body).Decode(&reqBody); err != nil {
		w.WriteHeader(400)
		return
	}
	{{ end }}

	{{ if .RespBody }}
	var respBody {{.RespBody}}
	json.NewEncoder(w).Encode(respBody);
	{{ end }}

	// uncomment below line to add header
	// w.Header.Set("key","value")
}
{{ end }}

{{ end }}
